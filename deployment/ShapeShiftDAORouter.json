{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "yearnRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "latestVault",
      "outputs": [
        {
          "internalType": "contract VaultAPI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "migrate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "firstVaultId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastVaultId",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "numVaults",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract RegistryAPI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "yearnRegistry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "firstVaultId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastVaultId",
          "type": "uint256"
        }
      ],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "totalVaultBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "firstVaultId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastVaultId",
          "type": "uint256"
        }
      ],
      "name": "totalVaultBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deploymentId",
          "type": "uint256"
        }
      ],
      "name": "vaults",
      "outputs": [
        {
          "internalType": "contract VaultAPI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "firstVaultId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastVaultId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ShapeShiftDAORouter.sol",
    "1": "interfaces/YearnAPI.sol",
    "2": "openzeppelin-contracts/contracts/access/Ownable.sol",
    "3": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
    "4": "openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
    "5": "openzeppelin-contracts/contracts/utils/Address.sol",
    "6": "openzeppelin-contracts/contracts/utils/Context.sol",
    "7": "openzeppelin-contracts/contracts/utils/math/Math.sol"
  },
  "ast": {
    "absolutePath": "contracts/ShapeShiftDAORouter.sol",
    "exportedSymbols": {
      "IERC20": [1343],
      "Math": [1655],
      "Ownable": [1265],
      "RegistryAPI": [1160],
      "SafeERC20": [1567],
      "ShapeShiftDAORouter": [1059],
      "VaultAPI": [1129]
    },
    "id": 1060,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "0.8", ".10"],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "absolutePath": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "../openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1060,
        "sourceUnit": 1344,
        "src": "61:82:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "69:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "../openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1060,
        "sourceUnit": 1568,
        "src": "144:94:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "152:9:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "../openzeppelin-contracts/contracts/utils/math/Math.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1060,
        "sourceUnit": 1656,
        "src": "239:77:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "247:4:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "../openzeppelin-contracts/contracts/access/Ownable.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1060,
        "sourceUnit": 1266,
        "src": "317:79:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "325:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/YearnAPI.sol",
        "file": "../interfaces/YearnAPI.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1060,
        "sourceUnit": 1161,
        "src": "398:65:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "RegistryAPI",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "406:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 11,
              "name": "VaultAPI",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "419:8:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1265,
              "src": "705:7:0"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "705:7:0"
          }
        ],
        "canonicalName": "ShapeShiftDAORouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 13,
          "nodeType": "StructuredDocumentation",
          "src": "465:207:0",
          "text": " Adapted from the Yearn BaseRouter for Shapeshift's use case of a router that forward native vault tokens\n to the caller and does not hold any funds or assets (vault tokens or other ERC20 tokens)"
        },
        "fullyImplemented": true,
        "id": 1059,
        "linearizedBaseContracts": [1059, 1265, 1677],
        "name": "ShapeShiftDAORouter",
        "nameLocation": "682:19:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "7b103999",
            "id": 18,
            "mutability": "mutable",
            "name": "registry",
            "nameLocation": "738:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 1059,
            "src": "719:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RegistryAPI_$1160",
              "typeString": "contract RegistryAPI"
            },
            "typeName": {
              "id": 17,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16,
                "name": "RegistryAPI",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1160,
                "src": "719:11:0"
              },
              "referencedDeclaration": 1160,
              "src": "719:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                "typeString": "contract RegistryAPI"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 25,
            "mutability": "constant",
            "name": "UNLIMITED_APPROVAL",
            "nameLocation": "842:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1059,
            "src": "825:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "825:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "868:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 21,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "868:7:0",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    }
                  ],
                  "id": 20,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "863:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 23,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "863:13:0",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                  "typeString": "type(uint256)"
                }
              },
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "863:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 32,
            "mutability": "constant",
            "name": "DEPOSIT_EVERYTHING",
            "nameLocation": "1086:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1059,
            "src": "1069:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1069:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1112:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 28,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1112:7:0",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    }
                  ],
                  "id": 27,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1107:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 30,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1107:13:0",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                  "typeString": "type(uint256)"
                }
              },
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "1107:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 39,
            "mutability": "constant",
            "name": "WITHDRAW_EVERYTHING",
            "nameLocation": "1147:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 1059,
            "src": "1130:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1130:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1174:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 35,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1174:7:0",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    }
                  ],
                  "id": 34,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1169:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 37,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1169:13:0",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                  "typeString": "type(uint256)"
                }
              },
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "1169:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 46,
            "mutability": "constant",
            "name": "MIGRATE_EVERYTHING",
            "nameLocation": "1209:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 1059,
            "src": "1192:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1192:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1235:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 42,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1235:7:0",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    }
                  ],
                  "id": 41,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1230:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 44,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1230:13:0",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                  "typeString": "type(uint256)"
                }
              },
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "1230:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 53,
            "mutability": "constant",
            "name": "MAX_VAULT_ID",
            "nameLocation": "1270:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 1059,
            "src": "1253:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1253:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1290:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 49,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1290:7:0",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    }
                  ],
                  "id": 48,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1285:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 51,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1285:13:0",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                  "typeString": "type(uint256)"
                }
              },
              "id": 52,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "1285:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "1344:108:0",
              "statements": [
                {
                  "expression": {
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1408:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                        "typeString": "contract RegistryAPI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 60,
                          "name": "yearnRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1431:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 59,
                        "name": "RegistryAPI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "1419:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RegistryAPI_$1160_$",
                          "typeString": "type(contract RegistryAPI)"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1419:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                        "typeString": "contract RegistryAPI"
                      }
                    },
                    "src": "1408:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                      "typeString": "contract RegistryAPI"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1408:37:0"
                }
              ]
            },
            "id": 65,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "yearnRegistry",
                  "nameLocation": "1329:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1321:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:23:0"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1344:0:0"
            },
            "scope": 1059,
            "src": "1309:143:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "1729:458:0",
              "statements": [
                {
                  "assignments": [74],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74,
                      "mutability": "mutable",
                      "name": "currentYearnGovernanceAddress",
                      "nameLocation": "1747:29:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 94,
                      "src": "1739:37:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1739:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1779:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                          "typeString": "contract RegistryAPI"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "governance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1134,
                      "src": "1779:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1739:61:0"
                },
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1887:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                        "typeString": "contract RegistryAPI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 81,
                          "name": "yearnRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "1910:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 80,
                        "name": "RegistryAPI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "1898:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RegistryAPI_$1160_$",
                          "typeString": "type(contract RegistryAPI)"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1898:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                        "typeString": "contract RegistryAPI"
                      }
                    },
                    "src": "1887:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                      "typeString": "contract RegistryAPI"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86,
                          "name": "currentYearnGovernanceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "2084:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 87,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "2117:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                                "typeString": "contract RegistryAPI"
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1134,
                            "src": "2117:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2117:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2084:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207265676973747279",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2152:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_115df6c421b07c9e4b79a5beb00fe1c6b3ff8b9d25c4cbb38b0c52c659344db7",
                          "typeString": "literal_string \"invalid registry\""
                        },
                        "value": "invalid registry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_115df6c421b07c9e4b79a5beb00fe1c6b3ff8b9d25c4cbb38b0c52c659344db7",
                          "typeString": "literal_string \"invalid registry\""
                        }
                      ],
                      "id": 85,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2063:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:117:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:117:0"
                }
              ]
            },
            "documentation": {
              "id": 66,
              "nodeType": "StructuredDocumentation",
              "src": "1458:201:0",
              "text": " @notice Used to update the yearn registry. The choice of registry is SECURITY SENSITIVE, so only the\n owner can update it.\n @param yearnRegistry The new registry address."
            },
            "functionSelector": "a91ee0dc",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 71,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1207,
                  "src": "1717:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1717:11:0"
              }
            ],
            "name": "setRegistry",
            "nameLocation": "1673:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "yearnRegistry",
                  "nameLocation": "1693:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1685:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1684:23:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1729:0:0"
            },
            "scope": 1059,
            "src": "1664:523:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "2259:49:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "2295:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 102,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2276:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                          "typeString": "contract RegistryAPI"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numVaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1149,
                      "src": "2276:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2276:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101,
                  "id": 106,
                  "nodeType": "Return",
                  "src": "2269:32:0"
                }
              ]
            },
            "functionSelector": "f9c7bba5",
            "id": 108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numVaults",
            "nameLocation": "2202:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2220:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "2212:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2211:15:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "2250:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2250:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2249:9:0"
            },
            "scope": 1059,
            "src": "2193:115:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "2428:60:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "2461:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 121,
                        "name": "deploymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "2468:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 118,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2445:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                          "typeString": "contract RegistryAPI"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1159,
                      "src": "2445:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_contract$_VaultAPI_$1129_$",
                        "typeString": "function (address,uint256) view external returns (contract VaultAPI)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2445:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VaultAPI_$1129",
                      "typeString": "contract VaultAPI"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 123,
                  "nodeType": "Return",
                  "src": "2438:43:0"
                }
              ]
            },
            "functionSelector": "7bbfc69e",
            "id": 125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaults",
            "nameLocation": "2323:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2338:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2330:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "deploymentId",
                  "nameLocation": "2353:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2345:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2345:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2329:37:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2414:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VaultAPI_$1129",
                    "typeString": "contract VaultAPI"
                  },
                  "typeName": {
                    "id": 115,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 114,
                      "name": "VaultAPI",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1129,
                      "src": "2414:8:0"
                    },
                    "referencedDeclaration": 1129,
                    "src": "2414:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VaultAPI_$1129",
                      "typeString": "contract VaultAPI"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:10:0"
            },
            "scope": 1059,
            "src": "2314:174:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "2563:51:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2601:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 133,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2580:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                          "typeString": "contract RegistryAPI"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1142,
                      "src": "2580:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_VaultAPI_$1129_$",
                        "typeString": "function (address) view external returns (contract VaultAPI)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2580:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VaultAPI_$1129",
                      "typeString": "contract VaultAPI"
                    }
                  },
                  "functionReturnParameters": 132,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "2573:34:0"
                }
              ]
            },
            "functionSelector": "e177dc70",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "latestVault",
            "nameLocation": "2503:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2523:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "2515:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2514:15:0"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "2553:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VaultAPI_$1129",
                    "typeString": "contract VaultAPI"
                  },
                  "typeName": {
                    "id": 130,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 129,
                      "name": "VaultAPI",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1129,
                      "src": "2553:8:0"
                    },
                    "referencedDeclaration": 1129,
                    "src": "2553:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VaultAPI_$1129",
                      "typeString": "contract VaultAPI"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2552:10:0"
            },
            "scope": 1059,
            "src": "2494:120:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "3128:79:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 151,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "3168:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 152,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "3175:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3184:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 154,
                        "name": "MAX_VAULT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "3187:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 149,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3145:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                          "typeString": "contract ShapeShiftDAORouter"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalVaultBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 242,
                      "src": "3145:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3145:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 148,
                  "id": 156,
                  "nodeType": "Return",
                  "src": "3138:62:0"
                }
              ]
            },
            "documentation": {
              "id": 140,
              "nodeType": "StructuredDocumentation",
              "src": "2620:384:0",
              "text": " @notice Gets the balance of an account across all the vaults for a token.\n @param token Which ERC20 token to pull vault balances for\n @param account The address of the account to pull the balances for\n @return The current value, in token base units, of the shares held by the specified\naccount across all the vaults for the specified token."
            },
            "functionSelector": "212a8c95",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalVaultBalance",
            "nameLocation": "3018:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3044:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3036:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3059:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3051:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3051:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3035:32:0"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3115:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3115:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3114:9:0"
            },
            "scope": 1059,
            "src": "3009:198:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "3971:512:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 173,
                          "name": "firstVaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "3989:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 174,
                          "name": "lastVaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "4005:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3989:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3981:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3981:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "3981:36:0"
                },
                {
                  "assignments": [179],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 179,
                      "mutability": "mutable",
                      "name": "_lastVaultId",
                      "nameLocation": "4036:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 241,
                      "src": "4028:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4028:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "id": 180,
                    "name": "lastVaultId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 167,
                    "src": "4051:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4028:34:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 182,
                      "name": "_lastVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "4076:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 183,
                      "name": "MAX_VAULT_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "4092:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4076:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 197,
                  "nodeType": "IfStatement",
                  "src": "4072:99:0",
                  "trueBody": {
                    "expression": {
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 185,
                        "name": "_lastVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "4118:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 190,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "4160:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4152:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 188,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4152:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4152:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 186,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "4133:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                                "typeString": "contract RegistryAPI"
                              }
                            },
                            "id": 187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numVaults",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1149,
                            "src": "4133:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4133:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4170:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4133:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4118:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 196,
                    "nodeType": "ExpressionStatement",
                    "src": "4118:53:0"
                  }
                },
                {
                  "body": {
                    "id": 239,
                    "nodeType": "Block",
                    "src": "4237:240:0",
                    "statements": [
                      {
                        "assignments": [210],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 210,
                            "mutability": "mutable",
                            "name": "vault",
                            "nameLocation": "4260:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 239,
                            "src": "4251:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultAPI_$1129",
                              "typeString": "contract VaultAPI"
                            },
                            "typeName": {
                              "id": 209,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 208,
                                "name": "VaultAPI",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1129,
                                "src": "4251:8:0"
                              },
                              "referencedDeclaration": 1129,
                              "src": "4251:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 216,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 213,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "4284:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 214,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "4291:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 211,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "4268:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                                "typeString": "contract RegistryAPI"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vaults",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1159,
                            "src": "4268:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_contract$_VaultAPI_$1129_$",
                              "typeString": "function (address,uint256) view external returns (contract VaultAPI)"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4268:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaultAPI_$1129",
                            "typeString": "contract VaultAPI"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4251:42:0"
                      },
                      {
                        "assignments": [218],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 218,
                            "mutability": "mutable",
                            "name": "vaultTokenBalance",
                            "nameLocation": "4315:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 239,
                            "src": "4307:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 217,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4307:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 234,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 221,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 163,
                                      "src": "4352:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 219,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 210,
                                      "src": "4336:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                        "typeString": "contract VaultAPI"
                                      }
                                    },
                                    "id": 220,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1282,
                                    "src": "4336:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 222,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4336:24:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 223,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 210,
                                      "src": "4379:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                        "typeString": "contract VaultAPI"
                                      }
                                    },
                                    "id": 224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "pricePerShare",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1113,
                                    "src": "4379:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4379:21:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4336:64:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 227,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4335:66:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4404:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 229,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 210,
                                  "src": "4408:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                    "typeString": "contract VaultAPI"
                                  }
                                },
                                "id": 230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "decimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1070,
                                "src": "4408:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4408:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4404:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4335:89:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4307:117:0"
                      },
                      {
                        "expression": {
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 235,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "4438:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 236,
                            "name": "vaultTokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "4449:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4438:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 238,
                        "nodeType": "ExpressionStatement",
                        "src": "4438:28:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 202,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "4213:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 203,
                      "name": "_lastVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "4218:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4213:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 240,
                  "initializationExpression": {
                    "assignments": [199],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4195:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "4187:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4187:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 201,
                    "initialValue": {
                      "id": 200,
                      "name": "firstVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "4199:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4187:24:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4232:3:0",
                      "subExpression": {
                        "id": 205,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "4232:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 207,
                    "nodeType": "ExpressionStatement",
                    "src": "4232:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4182:295:0"
                }
              ]
            },
            "documentation": {
              "id": 159,
              "nodeType": "StructuredDocumentation",
              "src": "3213:573:0",
              "text": " @notice Gets the balance of an account across certain vaults for a token.\n @param token Which ERC20 token to pull vault balances for\n @param account The address of the account to pull the balances for\n @param firstVaultId First vault id to include; 0 to start at the beginning\n @param lastVaultId Last vault id to include; `MAX_VAULT_ID` to include all vaults\n @return balance The current value, in token base units, of the shares held by the specified\naccount across all the specified vaults for the specified token."
            },
            "functionSelector": "900ab8b5",
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalVaultBalance",
            "nameLocation": "3800:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3835:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "3827:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3827:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3858:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "3850:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3850:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "firstVaultId",
                  "nameLocation": "3883:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "3875:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3875:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "lastVaultId",
                  "nameLocation": "3913:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "3905:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3905:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3817:113:0"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3962:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "3954:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3954:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3953:17:0"
            },
            "scope": 1059,
            "src": "3791:692:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "4750:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 252,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "4784:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4791:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 254,
                        "name": "MAX_VAULT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4794:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 250,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "4767:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                          "typeString": "contract ShapeShiftDAORouter"
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalAssets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 324,
                      "src": "4767:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4767:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 249,
                  "id": 256,
                  "nodeType": "Return",
                  "src": "4760:47:0"
                }
              ]
            },
            "documentation": {
              "id": 243,
              "nodeType": "StructuredDocumentation",
              "src": "4489:188:0",
              "text": " @notice Returns the combined TVL for all the vaults for a specified token.\n @return assets The sum of all the assets managed by the vaults for the specified token."
            },
            "functionSelector": "f3e0ffbf",
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalAssets",
            "nameLocation": "4691:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4711:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "4703:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4703:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4702:15:0"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "4741:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4741:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4740:9:0"
            },
            "scope": 1059,
            "src": "4682:132:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "5342:382:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 271,
                          "name": "firstVaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "5360:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 272,
                          "name": "lastVaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 265,
                          "src": "5376:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5360:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "5352:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5352:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "5352:36:0"
                },
                {
                  "assignments": [277],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 277,
                      "mutability": "mutable",
                      "name": "_lastVaultId",
                      "nameLocation": "5407:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "5399:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5399:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 279,
                  "initialValue": {
                    "id": 278,
                    "name": "lastVaultId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 265,
                    "src": "5422:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5399:34:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 280,
                      "name": "_lastVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "5447:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 281,
                      "name": "MAX_VAULT_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "5463:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5447:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 295,
                  "nodeType": "IfStatement",
                  "src": "5443:99:0",
                  "trueBody": {
                    "expression": {
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 283,
                        "name": "_lastVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "5489:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 288,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 261,
                                  "src": "5531:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5523:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 286,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5523:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5523:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 284,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "5504:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                                "typeString": "contract RegistryAPI"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numVaults",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1149,
                            "src": "5504:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5504:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5541:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5504:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5489:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 294,
                    "nodeType": "ExpressionStatement",
                    "src": "5489:53:0"
                  }
                },
                {
                  "body": {
                    "id": 321,
                    "nodeType": "Block",
                    "src": "5608:110:0",
                    "statements": [
                      {
                        "assignments": [308],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 308,
                            "mutability": "mutable",
                            "name": "vault",
                            "nameLocation": "5631:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 321,
                            "src": "5622:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultAPI_$1129",
                              "typeString": "contract VaultAPI"
                            },
                            "typeName": {
                              "id": 307,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 306,
                                "name": "VaultAPI",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1129,
                                "src": "5622:8:0"
                              },
                              "referencedDeclaration": 1129,
                              "src": "5622:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 314,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 311,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "5655:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 312,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 297,
                              "src": "5662:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 309,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "5639:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                                "typeString": "contract RegistryAPI"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vaults",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1159,
                            "src": "5639:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_contract$_VaultAPI_$1129_$",
                              "typeString": "function (address,uint256) view external returns (contract VaultAPI)"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5639:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaultAPI_$1129",
                            "typeString": "contract VaultAPI"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5622:42:0"
                      },
                      {
                        "expression": {
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 315,
                            "name": "assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "5678:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 316,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 308,
                                "src": "5688:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                  "typeString": "contract VaultAPI"
                                }
                              },
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalAssets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1118,
                              "src": "5688:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5688:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5678:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 320,
                        "nodeType": "ExpressionStatement",
                        "src": "5678:29:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 300,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "5584:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 301,
                      "name": "_lastVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "5589:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5584:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 322,
                  "initializationExpression": {
                    "assignments": [297],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5566:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 322,
                        "src": "5558:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5558:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 299,
                    "initialValue": {
                      "id": 298,
                      "name": "firstVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "5570:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5558:24:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5603:3:0",
                      "subExpression": {
                        "id": 303,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "5603:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 305,
                    "nodeType": "ExpressionStatement",
                    "src": "5603:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5553:165:0"
                }
              ]
            },
            "documentation": {
              "id": 259,
              "nodeType": "StructuredDocumentation",
              "src": "4820:369:0",
              "text": " @notice Returns the combined TVL for all the specified vaults for a specified token.\n @param firstVaultId First vault id to include; 0 to start at the beginning\n @param lastVaultId Last vault id to include; `MAX_VAULT_ID` to include all vaults\n @return assets The sum of all the assets managed by the vaults for the specified token."
            },
            "functionSelector": "e0cec5fb",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalAssets",
            "nameLocation": "5203:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5232:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "5224:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5224:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "firstVaultId",
                  "nameLocation": "5255:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "5247:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5247:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "lastVaultId",
                  "nameLocation": "5285:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "5277:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5277:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5214:88:0"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "5334:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "5326:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5326:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5325:16:0"
            },
            "scope": 1059,
            "src": "5194:530:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "6437:200:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 338,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "6499:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 337,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "6492:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1343_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6492:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 340,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1667,
                          "src": "6523:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6523:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 342,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "6553:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 343,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "6580:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 344,
                        "name": "MAX_VAULT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "6604:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 336,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "6466:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,address,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6466:164:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 335,
                  "id": 346,
                  "nodeType": "Return",
                  "src": "6447:183:0"
                }
              ]
            },
            "documentation": {
              "id": 325,
              "nodeType": "StructuredDocumentation",
              "src": "5730:578:0",
              "text": " @notice Called to deposit the caller's tokens into the most-current vault, crediting the minted shares to recipient.\n @dev The caller must approve this contract to utilize the specified ERC20 or this call will revert.\n @param token Address of the ERC20 token being deposited\n @param recipient Address to receive the issued vault tokens\n @param amount Amount of tokens to deposit; tokens that cannot be deposited will be refunded. If `DEPOSIT_EVERYTHING`, just deposit everything.\n @return Total vault shares received by recipient"
            },
            "functionSelector": "8340f549",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "6322:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6347:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "6339:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6339:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6370:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "6362:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6362:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6397:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "6389:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6389:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6329:80:0"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "6428:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6428:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6427:9:0"
            },
            "scope": 1059,
            "src": "6313:324:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "7470:101:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 364,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "7515:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 363,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "7508:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1343_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7508:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 366,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1667,
                          "src": "7523:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7523:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 368,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "7537:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 369,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "7548:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 370,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "7556:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 362,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "7499:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,address,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7499:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 361,
                  "id": 372,
                  "nodeType": "Return",
                  "src": "7480:84:0"
                }
              ]
            },
            "documentation": {
              "id": 349,
              "nodeType": "StructuredDocumentation",
              "src": "6643:673:0",
              "text": " @notice Called to deposit the caller's tokens into a specific vault, crediting the minted shares to recipient.\n @dev The caller must approve this contract to utilize the specified ERC20 or this call will revert.\n @param token Address of the ERC20 token being deposited\n @param recipient Address to receive the issued vault tokens\n @param amount Amount of tokens to deposit; tokens that cannot be deposited will be refunded. If `DEPOSIT_EVERYTHING`, just deposit everything.\n @param vaultId Vault id to deposit into; pass `MAX_VAULT_ID` to deposit into the latest vault\n @return Total vault shares received by recipient"
            },
            "functionSelector": "20e8c565",
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "7330:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7355:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "7347:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7347:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7378:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "7370:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7370:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7405:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "7397:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7397:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "7429:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "7421:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7421:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7337:105:0"
            },
            "returnParameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "7461:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7461:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7460:9:0"
            },
            "scope": 1059,
            "src": "7321:250:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 545,
              "nodeType": "Block",
              "src": "8525:1232:0",
              "statements": [
                {
                  "assignments": [392],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 392,
                      "mutability": "mutable",
                      "name": "pullFunds",
                      "nameLocation": "8540:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 545,
                      "src": "8535:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 391,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8535:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 399,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 393,
                      "name": "depositor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 380,
                      "src": "8552:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 396,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "8573:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                            "typeString": "contract ShapeShiftDAORouter"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                            "typeString": "contract ShapeShiftDAORouter"
                          }
                        ],
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8565:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8565:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8565:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8552:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8535:43:0"
                },
                {
                  "assignments": [402],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 402,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "8598:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 545,
                      "src": "8589:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VaultAPI_$1129",
                        "typeString": "contract VaultAPI"
                      },
                      "typeName": {
                        "id": 401,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 400,
                          "name": "VaultAPI",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1129,
                          "src": "8589:8:0"
                        },
                        "referencedDeclaration": 1129,
                        "src": "8589:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VaultAPI_$1129",
                          "typeString": "contract VaultAPI"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 403,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8589:14:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 404,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "8617:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 405,
                      "name": "MAX_VAULT_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "8628:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8617:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 429,
                    "nodeType": "Block",
                    "src": "8717:73:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 418,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "8731:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultAPI_$1129",
                              "typeString": "contract VaultAPI"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 423,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "8763:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1343",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$1343",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8755:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 421,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8755:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8755:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 425,
                                "name": "vaultId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "8771:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 419,
                                "name": "registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "8739:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                                  "typeString": "contract RegistryAPI"
                                }
                              },
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vaults",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1159,
                              "src": "8739:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_contract$_VaultAPI_$1129_$",
                                "typeString": "function (address,uint256) view external returns (contract VaultAPI)"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8739:40:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultAPI_$1129",
                              "typeString": "contract VaultAPI"
                            }
                          },
                          "src": "8731:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaultAPI_$1129",
                            "typeString": "contract VaultAPI"
                          }
                        },
                        "id": 428,
                        "nodeType": "ExpressionStatement",
                        "src": "8731:48:0"
                      }
                    ]
                  },
                  "id": 430,
                  "nodeType": "IfStatement",
                  "src": "8613:177:0",
                  "trueBody": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "8642:69:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 407,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "8656:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultAPI_$1129",
                              "typeString": "contract VaultAPI"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 412,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "8693:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1343",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$1343",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8685:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 410,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8685:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8685:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 408,
                                "name": "registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "8664:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                                  "typeString": "contract RegistryAPI"
                                }
                              },
                              "id": 409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "latestVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1142,
                              "src": "8664:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_VaultAPI_$1129_$",
                                "typeString": "function (address) view external returns (contract VaultAPI)"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8664:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultAPI_$1129",
                              "typeString": "contract VaultAPI"
                            }
                          },
                          "src": "8656:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaultAPI_$1129",
                            "typeString": "contract VaultAPI"
                          }
                        },
                        "id": 416,
                        "nodeType": "ExpressionStatement",
                        "src": "8656:44:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 435,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "8828:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                "typeString": "contract ShapeShiftDAORouter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                "typeString": "contract ShapeShiftDAORouter"
                              }
                            ],
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8820:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 433,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8820:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8820:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 439,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 402,
                              "src": "8843:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              }
                            ],
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8835:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 437,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8835:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8835:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 431,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "8804:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1343",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1302,
                        "src": "8804:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8804:46:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 442,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "8853:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8804:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 467,
                  "nodeType": "IfStatement",
                  "src": "8800:278:0",
                  "trueBody": {
                    "id": 466,
                    "nodeType": "Block",
                    "src": "8861:217:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 447,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "8897:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 450,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 402,
                                  "src": "8912:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                    "typeString": "contract VaultAPI"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                    "typeString": "contract VaultAPI"
                                  }
                                ],
                                "id": 449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8904:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 448,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8904:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8904:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8920:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 444,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1567,
                              "src": "8875:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1567_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "8875:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8875:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 454,
                        "nodeType": "ExpressionStatement",
                        "src": "8875:47:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 458,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "9003:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 461,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 402,
                                  "src": "9018:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                    "typeString": "contract VaultAPI"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                    "typeString": "contract VaultAPI"
                                  }
                                ],
                                "id": 460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9010:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 459,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9010:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9010:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 463,
                              "name": "UNLIMITED_APPROVAL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "9026:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 455,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1567,
                              "src": "8981:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1567_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "8981:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8981:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 465,
                        "nodeType": "ExpressionStatement",
                        "src": "8981:64:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 468,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "9092:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 469,
                      "name": "DEPOSIT_EVERYTHING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "9102:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9092:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 478,
                  "nodeType": "IfStatement",
                  "src": "9088:69:0",
                  "trueBody": {
                    "expression": {
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 471,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "9122:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 474,
                            "name": "depositor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 380,
                            "src": "9147:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 472,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "9131:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1343",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1282,
                          "src": "9131:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9131:26:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9122:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 477,
                    "nodeType": "ExpressionStatement",
                    "src": "9122:35:0"
                  }
                },
                {
                  "condition": {
                    "id": 479,
                    "name": "pullFunds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 392,
                    "src": "9172:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 543,
                    "nodeType": "Block",
                    "src": "9685:66:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 535,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "9699:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 538,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 384,
                                "src": "9722:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 539,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 382,
                                "src": "9730:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 536,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 402,
                                "src": "9708:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                  "typeString": "contract VaultAPI"
                                }
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1094,
                              "src": "9708:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9708:32:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9699:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 542,
                        "nodeType": "ExpressionStatement",
                        "src": "9699:41:0"
                      }
                    ]
                  },
                  "id": 544,
                  "nodeType": "IfStatement",
                  "src": "9168:583:0",
                  "trueBody": {
                    "id": 534,
                    "nodeType": "Block",
                    "src": "9183:496:0",
                    "statements": [
                      {
                        "assignments": [481],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 481,
                            "mutability": "mutable",
                            "name": "beforeBal",
                            "nameLocation": "9205:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 534,
                            "src": "9197:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 480,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9197:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 489,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 486,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9241:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                ],
                                "id": 485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9233:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 484,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9233:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9233:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 482,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "9217:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1282,
                            "src": "9217:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9217:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9197:50:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 493,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "9288:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 494,
                              "name": "depositor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 380,
                              "src": "9295:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 497,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9314:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                ],
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9306:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 495,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9306:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9306:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 499,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "9321:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 490,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1567,
                              "src": "9261:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1567_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1400,
                            "src": "9261:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9261:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 501,
                        "nodeType": "ExpressionStatement",
                        "src": "9261:67:0"
                      },
                      {
                        "expression": {
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 502,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "9343:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 505,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 384,
                                "src": "9366:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 506,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 382,
                                "src": "9374:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 503,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 402,
                                "src": "9352:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                  "typeString": "contract VaultAPI"
                                }
                              },
                              "id": 504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1094,
                              "src": "9352:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9352:32:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9343:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 509,
                        "nodeType": "ExpressionStatement",
                        "src": "9343:41:0"
                      },
                      {
                        "assignments": [511],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 511,
                            "mutability": "mutable",
                            "name": "afterWithdrawBal",
                            "nameLocation": "9407:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 534,
                            "src": "9399:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 510,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9399:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 519,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 516,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9450:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                ],
                                "id": 515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9442:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 514,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9442:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9442:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 512,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 378,
                              "src": "9426:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1282,
                            "src": "9426:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9426:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9399:57:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 520,
                            "name": "afterWithdrawBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "9474:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 521,
                            "name": "beforeBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "9493:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9474:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 533,
                        "nodeType": "IfStatement",
                        "src": "9470:198:0",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 526,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 378,
                                "src": "9564:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1343",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 527,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 380,
                                "src": "9591:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 528,
                                  "name": "afterWithdrawBal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 511,
                                  "src": "9622:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 529,
                                  "name": "beforeBal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 481,
                                  "src": "9641:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9622:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1343",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 523,
                                "name": "SafeERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1567,
                                "src": "9520:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1567_$",
                                  "typeString": "type(library SafeERC20)"
                                }
                              },
                              "id": 525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeTransfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1374,
                              "src": "9520:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (contract IERC20,address,uint256)"
                              }
                            },
                            "id": 531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9520:148:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 532,
                          "nodeType": "ExpressionStatement",
                          "src": "9520:148:0"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "7577:760:0",
              "text": " @notice Called to deposit depositor's tokens into a specific vault, crediting the minted shares to recipient.\n @dev Depositor must approve this contract to utilize the specified ERC20 or this call will revert.\n @param token Address of the ERC20 token being deposited\n @param depositor Address to pull deposited funds from. SECURITY SENSITIVE.\n @param recipient Address to receive the issued vault tokens\n @param amount Amount of tokens to deposit; tokens that cannot be deposited will be refunded. If `DEPOSIT_EVERYTHING`, just deposit everything.\n @param vaultId Vault id to deposit into; pass `MAX_VAULT_ID` to deposit into the latest vault\n @return shares Total vault shares received by recipient"
            },
            "id": 546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deposit",
            "nameLocation": "8351:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8376:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "8369:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1343",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 377,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 376,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1343,
                      "src": "8369:6:0"
                    },
                    "referencedDeclaration": 1343,
                    "src": "8369:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1343",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "8399:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "8391:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8391:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8426:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "8418:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8418:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8453:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "8445:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8445:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 386,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "8477:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "8469:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8469:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8359:131:0"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "8517:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 546,
                  "src": "8509:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8509:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8508:16:0"
            },
            "scope": 1059,
            "src": "8342:1415:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 568,
              "nodeType": "Block",
              "src": "10307:233:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 558,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "10370:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 557,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "10363:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1343_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10363:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 560,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1667,
                          "src": "10394:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10394:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 562,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "10424:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 563,
                        "name": "WITHDRAW_EVERYTHING",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "10451:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10488:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 565,
                        "name": "MAX_VAULT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "10507:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 556,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 826,
                      "src": "10336:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,address,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10336:197:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 555,
                  "id": 567,
                  "nodeType": "Return",
                  "src": "10317:216:0"
                }
              ]
            },
            "documentation": {
              "id": 547,
              "nodeType": "StructuredDocumentation",
              "src": "9763:440:0",
              "text": " @notice Called to redeem the all of the caller's shares from underlying vault(s), with the proceeds distributed to recipient.\n @dev The caller must approve this contract to use their vault shares or this call will revert.\n @param token Address of the ERC20 token to withdraw from vaults\n @param recipient Address to receive the withdrawn tokens\n @return The number of tokens received by recipient."
            },
            "functionSelector": "f940e385",
            "id": 569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "10217:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "10234:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "10226:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10226:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "10249:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "10241:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10241:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10225:34:0"
            },
            "returnParameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 569,
                  "src": "10294:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10294:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10293:9:0"
            },
            "scope": 1059,
            "src": "10208:332:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "11263:220:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 583,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "11326:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 582,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "11319:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1343_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11319:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 585,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1667,
                          "src": "11350:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11350:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 587,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 574,
                        "src": "11380:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 588,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "11407:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11431:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 590,
                        "name": "MAX_VAULT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "11450:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 581,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 826,
                      "src": "11292:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,address,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11292:184:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 580,
                  "id": 592,
                  "nodeType": "Return",
                  "src": "11273:203:0"
                }
              ]
            },
            "documentation": {
              "id": 570,
              "nodeType": "StructuredDocumentation",
              "src": "10546:587:0",
              "text": " @notice Called to redeem the caller's shares from underlying vault(s), with the proceeds distributed to recipient.\n @dev The caller must approve this contract to use their vault shares or this call will revert.\n @param token Address of the ERC20 token to withdraw from vaults\n @param recipient Address to receive the withdrawn tokens\n @param amount Maximum number of tokens to withdraw from all vaults; actual withdrawal may be less. If `WITHDRAW_EVERYTHING`, just withdraw everything.\n @return The number of tokens received by recipient."
            },
            "functionSelector": "d9caed12",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "11147:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 572,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "11173:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "11165:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11165:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 574,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "11196:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "11188:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11188:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11223:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "11215:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11215:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11155:80:0"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "11254:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11254:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11253:9:0"
            },
            "scope": 1059,
            "src": "11138:345:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 622,
              "nodeType": "Block",
              "src": "12450:230:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 612,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "12513:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 611,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "12506:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1343_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12506:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 614,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1667,
                          "src": "12537:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12537:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 616,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "12567:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 617,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "12594:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 618,
                        "name": "firstVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "12618:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 619,
                        "name": "lastVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "12648:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 610,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 826,
                      "src": "12479:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,address,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12479:194:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 609,
                  "id": 621,
                  "nodeType": "Return",
                  "src": "12460:213:0"
                }
              ]
            },
            "documentation": {
              "id": 595,
              "nodeType": "StructuredDocumentation",
              "src": "11489:772:0",
              "text": " @notice Called to redeem the caller's shares from underlying vault(s), with the proceeds distributed to recipient.\n @dev The caller must approve this contract to use their vault shares or this call will revert.\n @param token Address of the ERC20 token to withdraw from vaults\n @param recipient Address to receive the withdrawn tokens\n @param amount Maximum number of tokens to withdraw from all vaults; actual withdrawal may be less. If `WITHDRAW_EVERYTHING`, just withdraw everything.\n @param firstVaultId First vault id to pull from; 0 to start at the the beginning\n @param lastVaultId Last vault id to pull from; `MAX_VAULT_ID` to withdraw from all vaults\n @return The number of tokens received by recipient."
            },
            "functionSelector": "76234759",
            "id": 623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "12275:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12301:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "12293:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12293:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "12324:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "12316:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12316:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12351:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "12343:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12343:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "firstVaultId",
                  "nameLocation": "12375:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "12367:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12367:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "lastVaultId",
                  "nameLocation": "12405:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "12397:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12397:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12283:139:0"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 623,
                  "src": "12441:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12441:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12440:9:0"
            },
            "scope": 1059,
            "src": "12266:414:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 825,
              "nodeType": "Block",
              "src": "13779:2188:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 643,
                          "name": "firstVaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 635,
                          "src": "13797:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 644,
                          "name": "lastVaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 637,
                          "src": "13813:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13797:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "13789:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13789:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "13789:36:0"
                },
                {
                  "assignments": [649],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 649,
                      "mutability": "mutable",
                      "name": "_lastVaultId",
                      "nameLocation": "13844:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 825,
                      "src": "13836:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 648,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13836:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 651,
                  "initialValue": {
                    "id": 650,
                    "name": "lastVaultId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 637,
                    "src": "13859:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13836:34:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 652,
                      "name": "_lastVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 649,
                      "src": "13884:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 653,
                      "name": "MAX_VAULT_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "13900:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13884:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 667,
                  "nodeType": "IfStatement",
                  "src": "13880:99:0",
                  "trueBody": {
                    "expression": {
                      "id": 665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 655,
                        "name": "_lastVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "13926:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 660,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 627,
                                  "src": "13968:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1343",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1343",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13960:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 658,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13960:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13960:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 656,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "13941:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                                "typeString": "contract RegistryAPI"
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numVaults",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1149,
                            "src": "13941:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13941:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13978:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13941:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13926:53:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 666,
                    "nodeType": "ExpressionStatement",
                    "src": "13926:53:0"
                  }
                },
                {
                  "body": {
                    "id": 823,
                    "nodeType": "Block",
                    "src": "14117:1844:0",
                    "statements": [
                      {
                        "assignments": [686],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 686,
                            "mutability": "mutable",
                            "name": "vault",
                            "nameLocation": "14140:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 823,
                            "src": "14131:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultAPI_$1129",
                              "typeString": "contract VaultAPI"
                            },
                            "typeName": {
                              "id": 685,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 684,
                                "name": "VaultAPI",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1129,
                                "src": "14131:8:0"
                              },
                              "referencedDeclaration": 1129,
                              "src": "14131:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 695,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 691,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 627,
                                  "src": "14172:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1343",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1343",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14164:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 689,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14164:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14164:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 693,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "14180:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 687,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "14148:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                                "typeString": "contract RegistryAPI"
                              }
                            },
                            "id": 688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "vaults",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1159,
                            "src": "14148:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_contract$_VaultAPI_$1129_$",
                              "typeString": "function (address,uint256) view external returns (contract VaultAPI)"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14148:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaultAPI_$1129",
                            "typeString": "contract VaultAPI"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14131:51:0"
                      },
                      {
                        "assignments": [697],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 697,
                            "mutability": "mutable",
                            "name": "availableShares",
                            "nameLocation": "14205:15:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 823,
                            "src": "14197:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 696,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14197:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 708,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 702,
                                  "name": "withdrawer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 629,
                                  "src": "14265:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 700,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 686,
                                  "src": "14249:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                    "typeString": "contract VaultAPI"
                                  }
                                },
                                "id": 701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1282,
                                "src": "14249:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14249:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 704,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 686,
                                  "src": "14294:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                    "typeString": "contract VaultAPI"
                                  }
                                },
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "maxAvailableShares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1128,
                                "src": "14294:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14294:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 698,
                              "name": "Math",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1655,
                              "src": "14223:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Math_$1655_$",
                                "typeString": "type(library Math)"
                              }
                            },
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "min",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1606,
                            "src": "14223:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14223:111:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14197:137:0"
                      },
                      {
                        "expression": {
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 709,
                            "name": "availableShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "14434:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 712,
                                "name": "availableShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 697,
                                "src": "14478:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 715,
                                    "name": "withdrawer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 629,
                                    "src": "14527:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 718,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "14547:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                          "typeString": "contract ShapeShiftDAORouter"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                          "typeString": "contract ShapeShiftDAORouter"
                                        }
                                      ],
                                      "id": 717,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14539:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 716,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14539:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 719,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14539:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 713,
                                    "name": "vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 686,
                                    "src": "14511:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                      "typeString": "contract VaultAPI"
                                    }
                                  },
                                  "id": 714,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1302,
                                  "src": "14511:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14511:42:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 710,
                                "name": "Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1655,
                                "src": "14452:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Math_$1655_$",
                                  "typeString": "type(library Math)"
                                }
                              },
                              "id": 711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "min",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1606,
                              "src": "14452:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14452:115:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14434:133:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "14434:133:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 724,
                            "name": "availableShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "14585:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14604:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14585:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 728,
                        "nodeType": "IfStatement",
                        "src": "14581:34:0",
                        "trueBody": {
                          "id": 727,
                          "nodeType": "Continue",
                          "src": "14607:8:0"
                        }
                      },
                      {
                        "assignments": [730],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 730,
                            "mutability": "mutable",
                            "name": "maxShares",
                            "nameLocation": "14638:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 823,
                            "src": "14630:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 729,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14630:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 731,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14630:17:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 732,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "14665:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 733,
                            "name": "WITHDRAW_EVERYTHING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "14675:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14665:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 766,
                          "nodeType": "Block",
                          "src": "15297:60:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 762,
                                  "name": "maxShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 730,
                                  "src": "15315:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 763,
                                  "name": "availableShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 697,
                                  "src": "15327:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15315:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 765,
                              "nodeType": "ExpressionStatement",
                              "src": "15315:27:0"
                            }
                          ]
                        },
                        "id": 767,
                        "nodeType": "IfStatement",
                        "src": "14661:696:0",
                        "trueBody": {
                          "id": 761,
                          "nodeType": "Block",
                          "src": "14696:595:0",
                          "statements": [
                            {
                              "assignments": [736],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 736,
                                  "mutability": "mutable",
                                  "name": "estimatedShares",
                                  "nameLocation": "14797:15:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 761,
                                  "src": "14789:23:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 735,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14789:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 752,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 746,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 739,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 737,
                                              "name": "amount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 633,
                                              "src": "14817:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "id": 738,
                                              "name": "withdrawn",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 640,
                                              "src": "14826:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "14817:18:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 740,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "14816:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 745,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 741,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14859:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                              "id": 742,
                                              "name": "vault",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 686,
                                              "src": "14863:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                                "typeString": "contract VaultAPI"
                                              }
                                            },
                                            "id": 743,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "decimals",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1070,
                                            "src": "14863:14:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view external returns (uint256)"
                                            }
                                          },
                                          "id": 744,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14863:16:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "14859:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "14816:63:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 747,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "14815:65:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 748,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 686,
                                      "src": "14883:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                        "typeString": "contract VaultAPI"
                                      }
                                    },
                                    "id": 749,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "pricePerShare",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1113,
                                    "src": "14883:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14883:21:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14815:89:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14789:115:0"
                            },
                            {
                              "expression": {
                                "id": 759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 753,
                                  "name": "maxShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 730,
                                  "src": "15222:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 756,
                                      "name": "availableShares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 697,
                                      "src": "15243:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 757,
                                      "name": "estimatedShares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 736,
                                      "src": "15260:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 754,
                                      "name": "Math",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1655,
                                      "src": "15234:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Math_$1655_$",
                                        "typeString": "type(library Math)"
                                      }
                                    },
                                    "id": 755,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "min",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1606,
                                    "src": "15234:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15234:42:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15222:54:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 760,
                              "nodeType": "ExpressionStatement",
                              "src": "15222:54:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [769],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 769,
                            "mutability": "mutable",
                            "name": "beforeBal",
                            "nameLocation": "15379:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 823,
                            "src": "15371:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 768,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15371:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 777,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 774,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "15415:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                ],
                                "id": 773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15407:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 772,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15407:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15407:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 770,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "15391:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              }
                            },
                            "id": 771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1282,
                            "src": "15391:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15391:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15371:50:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 781,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "15480:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              }
                            },
                            {
                              "id": 782,
                              "name": "withdrawer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 629,
                              "src": "15503:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 785,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "15539:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                ],
                                "id": 784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15531:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 783,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15531:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15531:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 787,
                              "name": "maxShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 730,
                              "src": "15562:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 778,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1567,
                              "src": "15436:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1567_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1400,
                            "src": "15436:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15436:149:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 789,
                        "nodeType": "ExpressionStatement",
                        "src": "15436:149:0"
                      },
                      {
                        "expression": {
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 790,
                            "name": "withdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 640,
                            "src": "15600:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 793,
                                "name": "maxShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 730,
                                "src": "15628:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 794,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "15639:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 791,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 686,
                                "src": "15613:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                  "typeString": "contract VaultAPI"
                                }
                              },
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdraw",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1103,
                              "src": "15613:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) external returns (uint256)"
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15613:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15600:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 797,
                        "nodeType": "ExpressionStatement",
                        "src": "15600:49:0"
                      },
                      {
                        "assignments": [799],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 799,
                            "mutability": "mutable",
                            "name": "afterWithdrawBal",
                            "nameLocation": "15672:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 823,
                            "src": "15664:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 798,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15664:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 807,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 804,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "15715:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                                    "typeString": "contract ShapeShiftDAORouter"
                                  }
                                ],
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15707:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 802,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15707:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15707:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 800,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "15691:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              }
                            },
                            "id": 801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1282,
                            "src": "15691:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15691:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15664:57:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 808,
                            "name": "afterWithdrawBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 799,
                            "src": "15739:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 809,
                            "name": "beforeBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "15758:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15739:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 822,
                        "nodeType": "IfStatement",
                        "src": "15735:216:0",
                        "trueBody": {
                          "id": 821,
                          "nodeType": "Block",
                          "src": "15769:182:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 814,
                                    "name": "vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 686,
                                    "src": "15831:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                      "typeString": "contract VaultAPI"
                                    }
                                  },
                                  {
                                    "id": 815,
                                    "name": "withdrawer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 629,
                                    "src": "15858:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 818,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 816,
                                      "name": "afterWithdrawBal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 799,
                                      "src": "15890:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 817,
                                      "name": "beforeBal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 769,
                                      "src": "15909:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15890:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                      "typeString": "contract VaultAPI"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 811,
                                    "name": "SafeERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1567,
                                    "src": "15787:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1567_$",
                                      "typeString": "type(library SafeERC20)"
                                    }
                                  },
                                  "id": 813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1374,
                                  "src": "15787:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15787:149:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 820,
                              "nodeType": "ExpressionStatement",
                              "src": "15787:149:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 672,
                          "name": "withdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 640,
                          "src": "14046:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14058:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14046:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 675,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "14062:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14046:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 677,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "14072:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 678,
                        "name": "_lastVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "14077:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14072:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14046:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 824,
                  "initializationExpression": {
                    "assignments": [669],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 669,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14016:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 824,
                        "src": "14008:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14008:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 671,
                    "initialValue": {
                      "id": 670,
                      "name": "firstVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "14020:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14008:24:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14103:3:0",
                      "subExpression": {
                        "id": 681,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "14103:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 683,
                    "nodeType": "ExpressionStatement",
                    "src": "14103:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "13990:1971:0"
                }
              ]
            },
            "documentation": {
              "id": 624,
              "nodeType": "StructuredDocumentation",
              "src": "12686:866:0",
              "text": " @notice Called to redeem withdrawer's shares from underlying vault(s), with the proceeds distributed to recipient.\n @dev Withdrawer must approve this contract to use their vault shares or this call will revert.\n @param token Address of the ERC20 token to withdraw from vaults\n @param withdrawer Address to pull the vault shares from. SECURITY SENSITIVE.\n @param recipient Address to receive the withdrawn tokens\n @param amount Maximum number of tokens to withdraw from all vaults; actual withdrawal may be less. If `WITHDRAW_EVERYTHING`, just withdraw everything.\n @param firstVaultId First vault id to pull from; 0 to start at the the beginning\n @param lastVaultId Last vault id to pull from; `MAX_VAULT_ID` to withdraw from all vaults\n @return withdrawn The number of tokens received by recipient."
            },
            "id": 826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "13566:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 627,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "13592:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "13585:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1343",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 626,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 625,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1343,
                      "src": "13585:6:0"
                    },
                    "referencedDeclaration": 1343,
                    "src": "13585:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1343",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nameLocation": "13615:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "13607:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13607:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 631,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "13643:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "13635:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13635:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 633,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13670:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "13662:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13662:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "firstVaultId",
                  "nameLocation": "13694:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "13686:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13686:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "lastVaultId",
                  "nameLocation": "13724:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "13716:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13716:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13575:166:0"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "withdrawn",
                  "nameLocation": "13768:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "13760:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13760:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13759:19:0"
            },
            "scope": 1059,
            "src": "13557:2410:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 845,
              "nodeType": "Block",
              "src": "16349:204:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 836,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 829,
                            "src": "16411:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 835,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "16404:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1343_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16404:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 838,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1667,
                          "src": "16435:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16435:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 840,
                        "name": "MIGRATE_EVERYTHING",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "16465:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16501:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 842,
                        "name": "MAX_VAULT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "16520:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 834,
                      "name": "_migrate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1058,
                      "src": "16378:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16378:168:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 833,
                  "id": 844,
                  "nodeType": "Return",
                  "src": "16359:187:0"
                }
              ]
            },
            "documentation": {
              "id": 827,
              "nodeType": "StructuredDocumentation",
              "src": "15973:312:0",
              "text": " @notice Called to migrate all of the caller's shares to the latest vault.\n @dev The caller must approve this contract to use their vault shares or this call will revert.\n @param token Address of the ERC20 token to migrate the vaults of\n @return The number of tokens migrated."
            },
            "functionSelector": "ce5494bb",
            "id": 846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "16299:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "16315:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "16307:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16307:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16306:15:0"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "16340:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16340:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16339:9:0"
            },
            "scope": 1059,
            "src": "16290:263:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 867,
              "nodeType": "Block",
              "src": "17098:86:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 858,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 849,
                            "src": "17131:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 857,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "17124:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1343_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17124:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 860,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1667,
                          "src": "17139:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17139:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 862,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 851,
                        "src": "17153:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17161:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 864,
                        "name": "MAX_VAULT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "17164:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 856,
                      "name": "_migrate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1058,
                      "src": "17115:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17115:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 855,
                  "id": 866,
                  "nodeType": "Return",
                  "src": "17108:69:0"
                }
              ]
            },
            "documentation": {
              "id": 847,
              "nodeType": "StructuredDocumentation",
              "src": "16559:459:0",
              "text": " @notice Called to migrate the caller's shares to the latest vault.\n @dev The caller must approve this contract to use their vault shares or this call will revert.\n @param token Address of the ERC20 token to migrate the vaults of\n @param amount Maximum number of tokens to migrate from all vaults; actual migration may be less. If `MIGRATE_EVERYTHING`, just migrate everything.\n @return The number of tokens migrated."
            },
            "functionSelector": "ad68ebf7",
            "id": 868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "17032:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17048:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "17040:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17040:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17063:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "17055:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17055:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17039:31:0"
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "17089:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17089:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17088:9:0"
            },
            "scope": 1059,
            "src": "17023:161:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "18000:202:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 884,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "18062:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 883,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "18055:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1343_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18055:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 886,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1667,
                          "src": "18086:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18086:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 888,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "18116:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 889,
                        "name": "firstVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "18140:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 890,
                        "name": "lastVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "18170:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 882,
                      "name": "_migrate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1058,
                      "src": "18029:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18029:166:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 881,
                  "id": 892,
                  "nodeType": "Return",
                  "src": "18010:185:0"
                }
              ]
            },
            "documentation": {
              "id": 869,
              "nodeType": "StructuredDocumentation",
              "src": "17190:649:0",
              "text": " @notice Called to migrate the caller's shares to the latest vault.\n @dev The caller must approve this contract to use their vault shares or this call will revert.\n @param token Address of the ERC20 token to migrate the vaults of\n @param amount Maximum number of tokens to migrate from all vaults; actual migration may be less. If `MIGRATE_EVERYTHING`, just migrate everything.\n @param firstVaultId First vault id to migrate from; 0 to start at the the beginning\n @param lastVaultId Last vault id to migrate from; `MAX_VAULT_ID` to migrate from all vaults\n @return The number of tokens migrated."
            },
            "functionSelector": "ee424278",
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "17853:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17878:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "17870:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17870:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17901:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "17893:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17893:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "firstVaultId",
                  "nameLocation": "17925:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "17917:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17917:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "lastVaultId",
                  "nameLocation": "17955:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "17947:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17947:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17860:112:0"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "17991:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17991:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17990:9:0"
            },
            "scope": 1059,
            "src": "17844:358:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1057,
              "nodeType": "Block",
              "src": "19135:1409:0",
              "statements": [
                {
                  "assignments": [912],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 912,
                      "mutability": "mutable",
                      "name": "latestVaultId",
                      "nameLocation": "19153:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "19145:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 911,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19145:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 922,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 917,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 898,
                              "src": "19196:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19188:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 915,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19188:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19188:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 913,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "19169:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                            "typeString": "contract RegistryAPI"
                          }
                        },
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numVaults",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1149,
                        "src": "19169:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19169:34:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19206:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "19169:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19145:62:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 923,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "19221:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19231:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "19221:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 926,
                        "name": "latestVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "19236:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19253:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "19236:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19221:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 932,
                  "nodeType": "IfStatement",
                  "src": "19217:47:0",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19263:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 910,
                    "id": 931,
                    "nodeType": "Return",
                    "src": "19256:8:0"
                  }
                },
                {
                  "assignments": [935],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 935,
                      "mutability": "mutable",
                      "name": "_latestVault",
                      "nameLocation": "19340:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "19331:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VaultAPI_$1129",
                        "typeString": "contract VaultAPI"
                      },
                      "typeName": {
                        "id": 934,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 933,
                          "name": "VaultAPI",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1129,
                          "src": "19331:8:0"
                        },
                        "referencedDeclaration": 1129,
                        "src": "19331:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VaultAPI_$1129",
                          "typeString": "contract VaultAPI"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 944,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 940,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 898,
                            "src": "19379:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1343",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1343",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19371:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 938,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19371:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19371:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 942,
                        "name": "latestVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "19387:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 936,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "19355:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RegistryAPI_$1160",
                          "typeString": "contract RegistryAPI"
                        }
                      },
                      "id": 937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1159,
                      "src": "19355:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_contract$_VaultAPI_$1129_$",
                        "typeString": "function (address,uint256) view external returns (contract VaultAPI)"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19355:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VaultAPI_$1129",
                      "typeString": "contract VaultAPI"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19331:70:0"
                },
                {
                  "assignments": [946],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 946,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "19419:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "19411:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 945,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19411:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 958,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 949,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "19451:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 950,
                              "name": "_latestVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 935,
                              "src": "19471:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              }
                            },
                            "id": 951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositLimit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1123,
                            "src": "19471:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19471:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 953,
                              "name": "_latestVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 935,
                              "src": "19501:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultAPI_$1129",
                                "typeString": "contract VaultAPI"
                              }
                            },
                            "id": 954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalAssets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1118,
                            "src": "19501:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19501:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19471:56:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 947,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "19429:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$1655_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1606,
                      "src": "19429:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19429:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19411:126:0"
                },
                {
                  "assignments": [960],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 960,
                      "mutability": "mutable",
                      "name": "beforeWithdrawBal",
                      "nameLocation": "19556:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "19548:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 959,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19548:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 968,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 965,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19600:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                              "typeString": "contract ShapeShiftDAORouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                              "typeString": "contract ShapeShiftDAORouter"
                            }
                          ],
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19592:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 963,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19592:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19592:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 961,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "19576:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "19576:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19576:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19548:58:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 970,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "19639:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 971,
                        "name": "migrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 900,
                        "src": "19658:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 974,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19688:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                              "typeString": "contract ShapeShiftDAORouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                              "typeString": "contract ShapeShiftDAORouter"
                            }
                          ],
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19680:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 972,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19680:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19680:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 976,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "19707:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 977,
                        "name": "firstVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "19728:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 980,
                            "name": "lastVaultId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "19763:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 981,
                              "name": "latestVaultId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 912,
                              "src": "19776:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19792:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "19776:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 978,
                            "name": "Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1655,
                            "src": "19754:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Math_$1655_$",
                              "typeString": "type(library Math)"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "min",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1606,
                          "src": "19754:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19754:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 969,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 826,
                      "src": "19616:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,address,uint256,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19616:188:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "19616:188:0"
                },
                {
                  "assignments": [988],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 988,
                      "mutability": "mutable",
                      "name": "afterWithdrawBal",
                      "nameLocation": "19822:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "19814:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 987,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19814:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 996,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 993,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19865:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                              "typeString": "contract ShapeShiftDAORouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                              "typeString": "contract ShapeShiftDAORouter"
                            }
                          ],
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19857:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19857:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19857:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 989,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "19841:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "19841:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19841:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19814:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 998,
                          "name": "afterWithdrawBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "19889:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 999,
                          "name": "beforeWithdrawBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "19908:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19889:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7769746864726177206661696c6564",
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19927:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe",
                          "typeString": "literal_string \"withdraw failed\""
                        },
                        "value": "withdraw failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe",
                          "typeString": "literal_string \"withdraw failed\""
                        }
                      ],
                      "id": 997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "19881:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19881:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "19881:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1005,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "19978:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1008,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "20005:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                              "typeString": "contract ShapeShiftDAORouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                              "typeString": "contract ShapeShiftDAORouter"
                            }
                          ],
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19997:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1006,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19997:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19997:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1010,
                        "name": "migrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 900,
                        "src": "20024:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1011,
                          "name": "afterWithdrawBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "20046:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1012,
                          "name": "beforeWithdrawBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "20065:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20046:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1014,
                        "name": "latestVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "20096:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1004,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "19956:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,address,uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19956:163:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "19956:163:0"
                },
                {
                  "assignments": [1018],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1018,
                      "mutability": "mutable",
                      "name": "afterDepositBal",
                      "nameLocation": "20137:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "20129:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20129:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1026,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1023,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "20179:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                              "typeString": "contract ShapeShiftDAORouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ShapeShiftDAORouter_$1059",
                              "typeString": "contract ShapeShiftDAORouter"
                            }
                          ],
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20171:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1021,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20171:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20171:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1019,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "20155:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1343",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "20155:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20155:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20129:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1028,
                          "name": "afterWithdrawBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "20203:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1029,
                          "name": "afterDepositBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1018,
                          "src": "20222:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20203:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706f736974206661696c6564",
                        "id": 1031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20239:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6eafbe654279d4729befe2ed94b8be6d498d06d80c9f7a172c2be9df9d977ef",
                          "typeString": "literal_string \"deposit failed\""
                        },
                        "value": "deposit failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6eafbe654279d4729befe2ed94b8be6d498d06d80c9f7a172c2be9df9d977ef",
                          "typeString": "literal_string \"deposit failed\""
                        }
                      ],
                      "id": 1027,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "20195:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20195:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
                  "src": "20195:61:0"
                },
                {
                  "expression": {
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1034,
                      "name": "migrated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "20266:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1035,
                        "name": "afterWithdrawBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "20277:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1036,
                        "name": "afterDepositBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "20296:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "20277:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20266:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "20266:45:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1040,
                        "name": "afterWithdrawBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "20326:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 1041,
                        "name": "beforeWithdrawBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "20345:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "20326:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1043,
                      "name": "migrated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "20365:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20326:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1056,
                  "nodeType": "IfStatement",
                  "src": "20322:216:0",
                  "trueBody": {
                    "id": 1055,
                    "nodeType": "Block",
                    "src": "20375:163:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1048,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 898,
                              "src": "20429:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 1049,
                              "name": "migrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 900,
                              "src": "20452:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1050,
                                "name": "afterDepositBal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1018,
                                "src": "20478:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1051,
                                "name": "beforeWithdrawBal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "20496:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20478:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1343",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1045,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1567,
                              "src": "20389:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1567_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 1047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1374,
                            "src": "20389:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1343_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20389:138:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1054,
                        "nodeType": "ExpressionStatement",
                        "src": "20389:138:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 895,
              "nodeType": "StructuredDocumentation",
              "src": "18208:731:0",
              "text": " @notice Called to migrate migrator's shares to the latest vault.\n @dev Migrator must approve this contract to use their vault shares or this call will revert.\n @param token Address of the ERC20 token to migrate the vaults of\n @param migrator Address to migrate the shares of. SECURITY SENSITIVE.\n @param amount Maximum number of tokens to migrate from all vaults; actual migration may be less. If `MIGRATE_EVERYTHING`, just migrate everything.\n @param firstVaultId First vault id to migrate from; 0 to start at the the beginning\n @param lastVaultId Last vault id to migrate from; `MAX_VAULT_ID` to migrate from all vaults\n @return migrated The number of tokens migrated."
            },
            "id": 1058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_migrate",
            "nameLocation": "18953:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "18978:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "18971:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1343",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 897,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 896,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1343,
                      "src": "18971:6:0"
                    },
                    "referencedDeclaration": 1343,
                    "src": "18971:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1343",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "migrator",
                  "nameLocation": "19001:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "18993:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18993:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "19027:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "19019:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19019:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "firstVaultId",
                  "nameLocation": "19051:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "19043:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19043:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "lastVaultId",
                  "nameLocation": "19081:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "19073:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19073:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18961:137:0"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "migrated",
                  "nameLocation": "19125:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "19117:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19117:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19116:18:0"
            },
            "scope": 1059,
            "src": "18944:1600:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1060,
        "src": "673:19873:0",
        "usedErrors": []
      }
    ],
    "src": "36:20511:0"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200230b3803806200230b8339810160408190526200003491620000b5565b6200003f3362000065565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000c857600080fd5b81516001600160a01b0381168114620000e057600080fd5b9392505050565b61221480620000f76000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063ad68ebf7116100ad578063ee42427811610071578063ee4242781461026e578063f2fde38b14610281578063f3e0ffbf14610294578063f940e385146102a7578063f9c7bba5146102ba57600080fd5b8063ad68ebf71461020f578063ce5494bb14610222578063d9caed1214610235578063e0cec5fb14610248578063e177dc701461025b57600080fd5b80637bbfc69e116100f45780637bbfc69e146101b25780638340f549146101c55780638da5cb5b146101d8578063900ab8b5146101e9578063a91ee0dc146101fc57600080fd5b806320e8c56514610131578063212a8c9514610157578063715018a61461016a57806376234759146101745780637b10399914610187575b600080fd5b61014461013f366004611d7b565b6102cd565b6040519081526020015b60405180910390f35b610144610165366004611dc1565b6102e5565b610172610370565b005b610144610182366004611dfa565b6103af565b60015461019a906001600160a01b031681565b6040516001600160a01b03909116815260200161014e565b61019a6101c0366004611e4b565b6103c9565b6101446101d3366004611e77565b61043f565b6000546001600160a01b031661019a565b6101446101f7366004611d7b565b61045a565b61017261020a366004611eb8565b6106ed565b61014461021d366004611e4b565b61085e565b610144610230366004611eb8565b610870565b610144610243366004611e77565b610884565b610144610256366004611ed5565b610897565b61019a610269366004611eb8565b610a39565b61014461027c366004611f0a565b610aa8565b61017261028f366004611eb8565b610ab7565b6101446102a2366004611eb8565b610b52565b6101446102b5366004611dc1565b610bcd565b6101446102c8366004611eb8565b610be2565b60006102dc8533868686610c15565b95945050505050565b60405163900ab8b560e01b81526001600160a01b03808416600483015282166024820152600060448201819052600019606483015290309063900ab8b590608401602060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190611f45565b90505b92915050565b6000546001600160a01b031633146103a35760405162461bcd60e51b815260040161039a90611f5e565b60405180910390fd5b6103ad600061102b565b565b60006103bf86338787878761107b565b9695505050505050565b600154604051633ddfe34f60e11b81526001600160a01b038481166004830152602482018490526000921690637bbfc69e90604401602060405180830381865afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190611f93565b600061045084338585600019610c15565b90505b9392505050565b60008183111561046957600080fd5b816000198114156104f0576001805460405163f9c7bba560e01b81526001600160a01b0389811660048301529091169063f9c7bba590602401602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e39190611f45565b6104ed9190611fc6565b90505b835b8181116106e357600154604051633ddfe34f60e11b81526001600160a01b038981166004830152602482018490526000921690637bbfc69e90604401602060405180830381865afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190611f93565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190611f45565b6105e090600a6120c1565b826001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190611f45565b6040516370a0823160e01b81526001600160a01b038b811660048301528516906370a0823190602401602060405180830381865afa158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac9190611f45565b6106b691906120cd565b6106c091906120ec565b90506106cc818661210e565b9450505080806106db90612126565b9150506104f2565b5050949350505050565b6000546001600160a01b031633146107175760405162461bcd60e51b815260040161039a90611f5e565b60015460408051635aa6e67560e01b815290516000926001600160a01b031691635aa6e6759160048083019260209291908290030181865afa158015610761573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107859190611f93565b600180546001600160a01b0319166001600160a01b03851690811790915560408051635aa6e67560e01b815290519293509091635aa6e675916004808201926020929091908290030181865afa1580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108079190611f93565b6001600160a01b0316816001600160a01b03161461085a5760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420726567697374727960801b604482015260640161039a565b5050565b60006103678333846000600019611597565b600061036a82336000196000600019611597565b600061045084338585600060001961107b565b6000818311156108a657600080fd5b8160001981141561092d576001805460405163f9c7bba560e01b81526001600160a01b0388811660048301529091169063f9c7bba590602401602060405180830381865afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190611f45565b61092a9190611fc6565b90505b835b818111610a3057600154604051633ddfe34f60e11b81526001600160a01b038881166004830152602482018490526000921690637bbfc69e90604401602060405180830381865afa158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190611f93565b9050806001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190611f45565b610a1a908561210e565b9350508080610a2890612126565b91505061092f565b50509392505050565b600154604051630e177dc760e41b81526001600160a01b038381166004830152600092169063e177dc7090602401602060405180830381865afa158015610a84573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190611f93565b60006102dc8533868686611597565b6000546001600160a01b03163314610ae15760405162461bcd60e51b815260040161039a90611f5e565b6001600160a01b038116610b465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161039a565b610b4f8161102b565b50565b60405163e0cec5fb60e01b81526001600160a01b0382166004820152600060248201819052600019604483015290309063e0cec5fb906064015b602060405180830381865afa158015610ba9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190611f45565b6000610367833384600019600060001961107b565b60015460405163f9c7bba560e01b81526001600160a01b038381166004830152600092169063f9c7bba590602401610b8c565b60006001600160a01b03851630141581600019841415610ca457600154604051630e177dc760e41b81526001600160a01b038a811660048301529091169063e177dc7090602401602060405180830381865afa158015610c79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9d9190611f93565b9050610d1c565b600154604051633ddfe34f60e11b81526001600160a01b038a811660048301526024820187905290911690637bbfc69e90604401602060405180830381865afa158015610cf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d199190611f93565b90505b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301528691908a169063dd62ed3e90604401602060405180830381865afa158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f9190611f45565b1015610dae57610da1888260006119b8565b610dae88826000196119b8565b600019851415610e25576040516370a0823160e01b81526001600160a01b0388811660048301528916906370a0823190602401602060405180830381865afa158015610dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e229190611f45565b94505b8115610faa576040516370a0823160e01b81523060048201526000906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610e72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e969190611f45565b9050610ea489893089611b05565b604051636e553f6560e01b8152600481018790526001600160a01b038881166024830152831690636e553f65906044016020604051808303816000875af1158015610ef3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f179190611f45565b6040516370a0823160e01b81523060048201529094506000906001600160a01b038b16906370a0823190602401602060405180830381865afa158015610f61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f859190611f45565b905081811115610fa357610fa38a8a610f9e8585611fc6565b611b43565b5050611020565b604051636e553f6560e01b8152600481018690526001600160a01b038781166024830152821690636e553f65906044016020604051808303816000875af1158015610ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101d9190611f45565b92505b505095945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008183111561108a57600080fd5b81600019811415611111576001805460405163f9c7bba560e01b81526001600160a01b038b811660048301529091169063f9c7bba590602401602060405180830381865afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190611f45565b61110e9190611fc6565b90505b835b8561111f84600161210e565b10801561112c5750818111155b1561158b57600154604051633ddfe34f60e11b81526001600160a01b038b81166004830152602482018490526000921690637bbfc69e90604401602060405180830381865afa158015611183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a79190611f93565b6040516370a0823160e01b81526001600160a01b038b8116600483015291925060009161128391908416906370a0823190602401602060405180830381865afa1580156111f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121c9190611f45565b836001600160a01b03166375de29026040518163ffffffff1660e01b8152600401602060405180830381865afa15801561125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127e9190611f45565b611b73565b604051636eb1769f60e11b81526001600160a01b038c811660048301523060248301529192506112d99183919085169063dd62ed3e90604401602060405180830381865afa15801561125a573d6000803e3d6000fd5b9050806112e7575050611579565b600060001989146113f5576000836001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa158015611332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113569190611f45565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b89190611f45565b6113c390600a6120c1565b6113cd898d611fc6565b6113d791906120cd565b6113e191906120ec565b90506113ed8382611b73565b9150506113f8565b50805b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561143f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114639190611f45565b9050611471848d3085611b05565b604051627b8a6760e11b8152600481018390526001600160a01b038c8116602483015285169062f714ce906044016020604051808303816000875af11580156114be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e29190611f45565b6114ec908861210e565b6040516370a0823160e01b81523060048201529097506000906001600160a01b038616906370a0823190602401602060405180830381865afa158015611536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155a9190611f45565b90508181111561157357611573858e610f9e8585611fc6565b50505050505b8061158381612126565b915050611113565b50509695505050505050565b6001805460405163f9c7bba560e01b81526001600160a01b0388811660048301526000938493909291169063f9c7bba590602401602060405180830381865afa1580156115e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160c9190611f45565b6116169190611fc6565b9050841580611623575080155b156116325760009150506102dc565b600154604051633ddfe34f60e11b81526001600160a01b038981166004830152602482018490526000921690637bbfc69e90604401602060405180830381865afa158015611684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a89190611f93565b9050600061177e87836001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117129190611f45565b846001600160a01b031663ecf708586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117749190611f45565b61127e9190611fc6565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038b16906370a0823190602401602060405180830381865afa1580156117c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ec9190611f45565b905061180a8a8a30858b6118058c61127e60018d611fc6565b61107b565b506040516370a0823160e01b81523060048201526000906001600160a01b038c16906370a0823190602401602060405180830381865afa158015611852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118769190611f45565b90508181116118b95760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b604482015260640161039a565b6118cf8b308c6118c98686611fc6565b89610c15565b506040516370a0823160e01b81523060048201526000906001600160a01b038d16906370a0823190602401602060405180830381865afa158015611917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193b9190611f45565b905080821161197d5760405162461bcd60e51b815260206004820152600e60248201526d19195c1bdcda5d0819985a5b195960921b604482015260640161039a565b6119878183611fc6565b9650866119948484611fc6565b11156119a9576119a98c8c610f9e8685611fc6565b50505050505095945050505050565b801580611a325750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a309190611f45565b155b611a9d5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161039a565b6040516001600160a01b038316602482015260448101829052611b0090849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611b89565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052611b3d9085906323b872dd60e01b90608401611ac9565b50505050565b6040516001600160a01b038316602482015260448101829052611b0090849063a9059cbb60e01b90606401611ac9565b6000818310611b825781610367565b5090919050565b6000611bde826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c5b9092919063ffffffff16565b805190915015611b005780806020019051810190611bfc9190612141565b611b005760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161039a565b6060610450848460008585843b611cb45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161039a565b600080866001600160a01b03168587604051611cd0919061218f565b60006040518083038185875af1925050503d8060008114611d0d576040519150601f19603f3d011682016040523d82523d6000602084013e611d12565b606091505b5091509150611d22828286611d2d565b979650505050505050565b60608315611d3c575081610453565b825115611d4c5782518084602001fd5b8160405162461bcd60e51b815260040161039a91906121ab565b6001600160a01b0381168114610b4f57600080fd5b60008060008060808587031215611d9157600080fd5b8435611d9c81611d66565b93506020850135611dac81611d66565b93969395505050506040820135916060013590565b60008060408385031215611dd457600080fd5b8235611ddf81611d66565b91506020830135611def81611d66565b809150509250929050565b600080600080600060a08688031215611e1257600080fd5b8535611e1d81611d66565b94506020860135611e2d81611d66565b94979496505050506040830135926060810135926080909101359150565b60008060408385031215611e5e57600080fd5b8235611e6981611d66565b946020939093013593505050565b600080600060608486031215611e8c57600080fd5b8335611e9781611d66565b92506020840135611ea781611d66565b929592945050506040919091013590565b600060208284031215611eca57600080fd5b813561045381611d66565b600080600060608486031215611eea57600080fd5b8335611ef581611d66565b95602085013595506040909401359392505050565b60008060008060808587031215611f2057600080fd5b8435611f2b81611d66565b966020860135965060408601359560600135945092505050565b600060208284031215611f5757600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611fa557600080fd5b815161045381611d66565b634e487b7160e01b600052601160045260246000fd5b600082821015611fd857611fd8611fb0565b500390565b600181815b80851115612018578160001904821115611ffe57611ffe611fb0565b8085161561200b57918102915b93841c9390800290611fe2565b509250929050565b60008261202f5750600161036a565b8161203c5750600061036a565b8160018114612052576002811461205c57612078565b600191505061036a565b60ff84111561206d5761206d611fb0565b50506001821b61036a565b5060208310610133831016604e8410600b841016171561209b575081810a61036a565b6120a58383611fdd565b80600019048211156120b9576120b9611fb0565b029392505050565b60006103678383612020565b60008160001904831182151516156120e7576120e7611fb0565b500290565b60008261210957634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561212157612121611fb0565b500190565b600060001982141561213a5761213a611fb0565b5060010190565b60006020828403121561215357600080fd5b8151801515811461045357600080fd5b60005b8381101561217e578181015183820152602001612166565b83811115611b3d5750506000910152565b600082516121a1818460208701612163565b9190910192915050565b60208152600082518060208401526121ca816040850160208701612163565b601f01601f1916919091016040019291505056fea26469706673582212200cea3ebec74118bc22bcf3a05a4dde95a48d8578b4af0bf81c3ce642b1c9cde064736f6c634300080a0033",
  "bytecodeSha1": "a6f04bf03972add73b6ad24aea5c269f49905e06",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "ShapeShiftDAORouter",
  "coverageMap": {
    "branches": {
      "0": {
        "ShapeShiftDAORouter._deposit": {
          "72": [8617, 8640, false],
          "73": [8804, 8859, false],
          "74": [9092, 9120, false],
          "75": [9172, 9181, false],
          "76": [9474, 9502, false]
        },
        "ShapeShiftDAORouter._migrate": {
          "82": [19221, 19232, true],
          "83": [19236, 19254, false],
          "84": [19889, 19925, true],
          "85": [20203, 20237, true],
          "86": [20326, 20373, false]
        },
        "ShapeShiftDAORouter._withdraw": {
          "77": [13797, 13824, true],
          "78": [13884, 13912, false],
          "79": [14585, 14605, false],
          "80": [14665, 14694, false],
          "81": [15739, 15767, false]
        },
        "ShapeShiftDAORouter.setRegistry": {
          "69": [2084, 2138, true]
        },
        "ShapeShiftDAORouter.totalAssets": {
          "70": [5360, 5387, true],
          "71": [5447, 5475, false]
        },
        "ShapeShiftDAORouter.totalVaultBalance": {
          "67": [3989, 4016, true],
          "68": [4076, 4104, false]
        }
      },
      "1": {},
      "2": {
        "Ownable.transferOwnership": {
          "90": [2006, 2028, true]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "91": [3735, 3756, false],
          "92": [3819, 3849, true]
        }
      },
      "5": {
        "Address.verifyCallResult": {
          "87": [7388, 7395, false],
          "88": [7529, 7550, false]
        }
      },
      "6": {},
      "7": {
        "Math.min": {
          "89": [530, 535, true]
        }
      }
    },
    "statements": {
      "0": {
        "ShapeShiftDAORouter._deposit": {
          "28": [8656, 8700],
          "29": [8731, 8779],
          "30": [8875, 8922],
          "31": [8981, 9045],
          "32": [9122, 9157],
          "33": [9261, 9328],
          "34": [9343, 9384],
          "35": [9520, 9668],
          "36": [9699, 9740]
        },
        "ShapeShiftDAORouter._migrate": {
          "49": [19256, 19264],
          "50": [19616, 19804],
          "51": [19881, 19945],
          "52": [19956, 20119],
          "53": [20195, 20256],
          "54": [20266, 20311],
          "55": [20389, 20527]
        },
        "ShapeShiftDAORouter._withdraw": {
          "39": [13789, 13825],
          "40": [13926, 13979],
          "41": [14434, 14567],
          "42": [14607, 14615],
          "43": [15222, 15276],
          "44": [15315, 15342],
          "45": [15436, 15585],
          "46": [15600, 15649],
          "47": [15787, 15936],
          "48": [14103, 14106]
        },
        "ShapeShiftDAORouter.deposit": {
          "1": [7480, 7564],
          "7": [6447, 6630]
        },
        "ShapeShiftDAORouter.latestVault": {
          "21": [2573, 2607]
        },
        "ShapeShiftDAORouter.migrate": {
          "14": [17108, 17177],
          "15": [16359, 16546],
          "22": [18010, 18195]
        },
        "ShapeShiftDAORouter.numVaults": {
          "27": [2269, 2301]
        },
        "ShapeShiftDAORouter.setRegistry": {
          "12": [1887, 1924],
          "13": [2063, 2180]
        },
        "ShapeShiftDAORouter.totalAssets": {
          "17": [5352, 5388],
          "18": [5489, 5542],
          "19": [5678, 5707],
          "20": [5603, 5606],
          "25": [4760, 4807]
        },
        "ShapeShiftDAORouter.totalVaultBalance": {
          "3": [3138, 3200],
          "8": [3981, 4017],
          "9": [4118, 4171],
          "10": [4438, 4466],
          "11": [4232, 4235]
        },
        "ShapeShiftDAORouter.vaults": {
          "6": [2438, 2481]
        },
        "ShapeShiftDAORouter.withdraw": {
          "5": [12460, 12673],
          "16": [11273, 11476],
          "26": [10317, 10533]
        }
      },
      "1": {},
      "2": {
        "Ownable._transferOwnership": {
          "37": [2378, 2395],
          "38": [2405, 2450]
        },
        "Ownable.owner": {
          "0": [1101, 1114]
        },
        "Ownable.renounceOwnership": {
          "4": [1732, 1762]
        },
        "Ownable.transferOwnership": {
          "23": [1998, 2071],
          "24": [2081, 2109]
        }
      },
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "61": [3811, 3896]
        },
        "SafeERC20.safeApprove": {
          "56": [1746, 1909],
          "57": [1919, 2009]
        },
        "SafeERC20.safeTransfer": {
          "59": [813, 899]
        },
        "SafeERC20.safeTransferFrom": {
          "58": [1050, 1146]
        }
      },
      "5": {
        "Address.functionCall": {
          "62": [3671, 3730]
        },
        "Address.functionCallWithValue": {
          "63": [4881, 4941],
          "64": [5035, 5093]
        },
        "Address.verifyCallResult": {
          "65": [7411, 7428],
          "66": [7855, 7875]
        }
      },
      "6": {
        "Context._msgSender": {
          "2": [712, 729]
        }
      },
      "7": {
        "Math.min": {
          "60": [523, 543]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IERC20",
    "Math",
    "Ownable",
    "RegistryAPI",
    "SafeERC20",
    "VaultAPI"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063ad68ebf7116100ad578063ee42427811610071578063ee4242781461026e578063f2fde38b14610281578063f3e0ffbf14610294578063f940e385146102a7578063f9c7bba5146102ba57600080fd5b8063ad68ebf71461020f578063ce5494bb14610222578063d9caed1214610235578063e0cec5fb14610248578063e177dc701461025b57600080fd5b80637bbfc69e116100f45780637bbfc69e146101b25780638340f549146101c55780638da5cb5b146101d8578063900ab8b5146101e9578063a91ee0dc146101fc57600080fd5b806320e8c56514610131578063212a8c9514610157578063715018a61461016a57806376234759146101745780637b10399914610187575b600080fd5b61014461013f366004611d7b565b6102cd565b6040519081526020015b60405180910390f35b610144610165366004611dc1565b6102e5565b610172610370565b005b610144610182366004611dfa565b6103af565b60015461019a906001600160a01b031681565b6040516001600160a01b03909116815260200161014e565b61019a6101c0366004611e4b565b6103c9565b6101446101d3366004611e77565b61043f565b6000546001600160a01b031661019a565b6101446101f7366004611d7b565b61045a565b61017261020a366004611eb8565b6106ed565b61014461021d366004611e4b565b61085e565b610144610230366004611eb8565b610870565b610144610243366004611e77565b610884565b610144610256366004611ed5565b610897565b61019a610269366004611eb8565b610a39565b61014461027c366004611f0a565b610aa8565b61017261028f366004611eb8565b610ab7565b6101446102a2366004611eb8565b610b52565b6101446102b5366004611dc1565b610bcd565b6101446102c8366004611eb8565b610be2565b60006102dc8533868686610c15565b95945050505050565b60405163900ab8b560e01b81526001600160a01b03808416600483015282166024820152600060448201819052600019606483015290309063900ab8b590608401602060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190611f45565b90505b92915050565b6000546001600160a01b031633146103a35760405162461bcd60e51b815260040161039a90611f5e565b60405180910390fd5b6103ad600061102b565b565b60006103bf86338787878761107b565b9695505050505050565b600154604051633ddfe34f60e11b81526001600160a01b038481166004830152602482018490526000921690637bbfc69e90604401602060405180830381865afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103679190611f93565b600061045084338585600019610c15565b90505b9392505050565b60008183111561046957600080fd5b816000198114156104f0576001805460405163f9c7bba560e01b81526001600160a01b0389811660048301529091169063f9c7bba590602401602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e39190611f45565b6104ed9190611fc6565b90505b835b8181116106e357600154604051633ddfe34f60e11b81526001600160a01b038981166004830152602482018490526000921690637bbfc69e90604401602060405180830381865afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190611f93565b90506000816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190611f45565b6105e090600a6120c1565b826001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190611f45565b6040516370a0823160e01b81526001600160a01b038b811660048301528516906370a0823190602401602060405180830381865afa158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac9190611f45565b6106b691906120cd565b6106c091906120ec565b90506106cc818661210e565b9450505080806106db90612126565b9150506104f2565b5050949350505050565b6000546001600160a01b031633146107175760405162461bcd60e51b815260040161039a90611f5e565b60015460408051635aa6e67560e01b815290516000926001600160a01b031691635aa6e6759160048083019260209291908290030181865afa158015610761573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107859190611f93565b600180546001600160a01b0319166001600160a01b03851690811790915560408051635aa6e67560e01b815290519293509091635aa6e675916004808201926020929091908290030181865afa1580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108079190611f93565b6001600160a01b0316816001600160a01b03161461085a5760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420726567697374727960801b604482015260640161039a565b5050565b60006103678333846000600019611597565b600061036a82336000196000600019611597565b600061045084338585600060001961107b565b6000818311156108a657600080fd5b8160001981141561092d576001805460405163f9c7bba560e01b81526001600160a01b0388811660048301529091169063f9c7bba590602401602060405180830381865afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190611f45565b61092a9190611fc6565b90505b835b818111610a3057600154604051633ddfe34f60e11b81526001600160a01b038881166004830152602482018490526000921690637bbfc69e90604401602060405180830381865afa158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190611f93565b9050806001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190611f45565b610a1a908561210e565b9350508080610a2890612126565b91505061092f565b50509392505050565b600154604051630e177dc760e41b81526001600160a01b038381166004830152600092169063e177dc7090602401602060405180830381865afa158015610a84573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190611f93565b60006102dc8533868686611597565b6000546001600160a01b03163314610ae15760405162461bcd60e51b815260040161039a90611f5e565b6001600160a01b038116610b465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161039a565b610b4f8161102b565b50565b60405163e0cec5fb60e01b81526001600160a01b0382166004820152600060248201819052600019604483015290309063e0cec5fb906064015b602060405180830381865afa158015610ba9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190611f45565b6000610367833384600019600060001961107b565b60015460405163f9c7bba560e01b81526001600160a01b038381166004830152600092169063f9c7bba590602401610b8c565b60006001600160a01b03851630141581600019841415610ca457600154604051630e177dc760e41b81526001600160a01b038a811660048301529091169063e177dc7090602401602060405180830381865afa158015610c79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9d9190611f93565b9050610d1c565b600154604051633ddfe34f60e11b81526001600160a01b038a811660048301526024820187905290911690637bbfc69e90604401602060405180830381865afa158015610cf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d199190611f93565b90505b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301528691908a169063dd62ed3e90604401602060405180830381865afa158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f9190611f45565b1015610dae57610da1888260006119b8565b610dae88826000196119b8565b600019851415610e25576040516370a0823160e01b81526001600160a01b0388811660048301528916906370a0823190602401602060405180830381865afa158015610dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e229190611f45565b94505b8115610faa576040516370a0823160e01b81523060048201526000906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610e72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e969190611f45565b9050610ea489893089611b05565b604051636e553f6560e01b8152600481018790526001600160a01b038881166024830152831690636e553f65906044016020604051808303816000875af1158015610ef3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f179190611f45565b6040516370a0823160e01b81523060048201529094506000906001600160a01b038b16906370a0823190602401602060405180830381865afa158015610f61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f859190611f45565b905081811115610fa357610fa38a8a610f9e8585611fc6565b611b43565b5050611020565b604051636e553f6560e01b8152600481018690526001600160a01b038781166024830152821690636e553f65906044016020604051808303816000875af1158015610ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101d9190611f45565b92505b505095945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008183111561108a57600080fd5b81600019811415611111576001805460405163f9c7bba560e01b81526001600160a01b038b811660048301529091169063f9c7bba590602401602060405180830381865afa1580156110e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111049190611f45565b61110e9190611fc6565b90505b835b8561111f84600161210e565b10801561112c5750818111155b1561158b57600154604051633ddfe34f60e11b81526001600160a01b038b81166004830152602482018490526000921690637bbfc69e90604401602060405180830381865afa158015611183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a79190611f93565b6040516370a0823160e01b81526001600160a01b038b8116600483015291925060009161128391908416906370a0823190602401602060405180830381865afa1580156111f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121c9190611f45565b836001600160a01b03166375de29026040518163ffffffff1660e01b8152600401602060405180830381865afa15801561125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127e9190611f45565b611b73565b604051636eb1769f60e11b81526001600160a01b038c811660048301523060248301529192506112d99183919085169063dd62ed3e90604401602060405180830381865afa15801561125a573d6000803e3d6000fd5b9050806112e7575050611579565b600060001989146113f5576000836001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa158015611332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113569190611f45565b846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b89190611f45565b6113c390600a6120c1565b6113cd898d611fc6565b6113d791906120cd565b6113e191906120ec565b90506113ed8382611b73565b9150506113f8565b50805b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561143f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114639190611f45565b9050611471848d3085611b05565b604051627b8a6760e11b8152600481018390526001600160a01b038c8116602483015285169062f714ce906044016020604051808303816000875af11580156114be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e29190611f45565b6114ec908861210e565b6040516370a0823160e01b81523060048201529097506000906001600160a01b038616906370a0823190602401602060405180830381865afa158015611536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155a9190611f45565b90508181111561157357611573858e610f9e8585611fc6565b50505050505b8061158381612126565b915050611113565b50509695505050505050565b6001805460405163f9c7bba560e01b81526001600160a01b0388811660048301526000938493909291169063f9c7bba590602401602060405180830381865afa1580156115e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160c9190611f45565b6116169190611fc6565b9050841580611623575080155b156116325760009150506102dc565b600154604051633ddfe34f60e11b81526001600160a01b038981166004830152602482018490526000921690637bbfc69e90604401602060405180830381865afa158015611684573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a89190611f93565b9050600061177e87836001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117129190611f45565b846001600160a01b031663ecf708586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117749190611f45565b61127e9190611fc6565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038b16906370a0823190602401602060405180830381865afa1580156117c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ec9190611f45565b905061180a8a8a30858b6118058c61127e60018d611fc6565b61107b565b506040516370a0823160e01b81523060048201526000906001600160a01b038c16906370a0823190602401602060405180830381865afa158015611852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118769190611f45565b90508181116118b95760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b604482015260640161039a565b6118cf8b308c6118c98686611fc6565b89610c15565b506040516370a0823160e01b81523060048201526000906001600160a01b038d16906370a0823190602401602060405180830381865afa158015611917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193b9190611f45565b905080821161197d5760405162461bcd60e51b815260206004820152600e60248201526d19195c1bdcda5d0819985a5b195960921b604482015260640161039a565b6119878183611fc6565b9650866119948484611fc6565b11156119a9576119a98c8c610f9e8685611fc6565b50505050505095945050505050565b801580611a325750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a309190611f45565b155b611a9d5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161039a565b6040516001600160a01b038316602482015260448101829052611b0090849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611b89565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052611b3d9085906323b872dd60e01b90608401611ac9565b50505050565b6040516001600160a01b038316602482015260448101829052611b0090849063a9059cbb60e01b90606401611ac9565b6000818310611b825781610367565b5090919050565b6000611bde826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c5b9092919063ffffffff16565b805190915015611b005780806020019051810190611bfc9190612141565b611b005760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161039a565b6060610450848460008585843b611cb45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161039a565b600080866001600160a01b03168587604051611cd0919061218f565b60006040518083038185875af1925050503d8060008114611d0d576040519150601f19603f3d011682016040523d82523d6000602084013e611d12565b606091505b5091509150611d22828286611d2d565b979650505050505050565b60608315611d3c575081610453565b825115611d4c5782518084602001fd5b8160405162461bcd60e51b815260040161039a91906121ab565b6001600160a01b0381168114610b4f57600080fd5b60008060008060808587031215611d9157600080fd5b8435611d9c81611d66565b93506020850135611dac81611d66565b93969395505050506040820135916060013590565b60008060408385031215611dd457600080fd5b8235611ddf81611d66565b91506020830135611def81611d66565b809150509250929050565b600080600080600060a08688031215611e1257600080fd5b8535611e1d81611d66565b94506020860135611e2d81611d66565b94979496505050506040830135926060810135926080909101359150565b60008060408385031215611e5e57600080fd5b8235611e6981611d66565b946020939093013593505050565b600080600060608486031215611e8c57600080fd5b8335611e9781611d66565b92506020840135611ea781611d66565b929592945050506040919091013590565b600060208284031215611eca57600080fd5b813561045381611d66565b600080600060608486031215611eea57600080fd5b8335611ef581611d66565b95602085013595506040909401359392505050565b60008060008060808587031215611f2057600080fd5b8435611f2b81611d66565b966020860135965060408601359560600135945092505050565b600060208284031215611f5757600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215611fa557600080fd5b815161045381611d66565b634e487b7160e01b600052601160045260246000fd5b600082821015611fd857611fd8611fb0565b500390565b600181815b80851115612018578160001904821115611ffe57611ffe611fb0565b8085161561200b57918102915b93841c9390800290611fe2565b509250929050565b60008261202f5750600161036a565b8161203c5750600061036a565b8160018114612052576002811461205c57612078565b600191505061036a565b60ff84111561206d5761206d611fb0565b50506001821b61036a565b5060208310610133831016604e8410600b841016171561209b575081810a61036a565b6120a58383611fdd565b80600019048211156120b9576120b9611fb0565b029392505050565b60006103678383612020565b60008160001904831182151516156120e7576120e7611fb0565b500290565b60008261210957634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561212157612121611fb0565b500190565b600060001982141561213a5761213a611fb0565b5060010190565b60006020828403121561215357600080fd5b8151801515811461045357600080fd5b60005b8381101561217e578181015183820152602001612166565b83811115611b3d5750506000910152565b600082516121a1818460208701612163565b9190910192915050565b60208152600082518060208401526121ca816040850160208701612163565b601f01601f1916919091016040019291505056fea26469706673582212200cea3ebec74118bc22bcf3a05a4dde95a48d8578b4af0bf81c3ce642b1c9cde064736f6c634300080a0033",
  "deployedSourceMap": "673:19873:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7321:250;;;;;;:::i;:::-;;:::i;:::-;;;826:25:8;;;814:2;799:18;7321:250:0;;;;;;;;3009:198;;;;;;:::i;:::-;;:::i;1668:101:2:-;;;:::i;:::-;;12266:414:0;;;;;;:::i;:::-;;:::i;719:27::-;;;;;-1:-1:-1;;;;;719:27:0;;;;;;-1:-1:-1;;;;;2038:32:8;;;2020:51;;2008:2;1993:18;719:27:0;1854:223:8;2314:174:0;;;;;;:::i;:::-;;:::i;6313:324::-;;;;;;:::i;:::-;;:::i;1036:85:2:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;1036:85;;3791:692:0;;;;;;:::i;:::-;;:::i;1664:523::-;;;;;;:::i;:::-;;:::i;17023:161::-;;;;;;:::i;:::-;;:::i;16290:263::-;;;;;;:::i;:::-;;:::i;11138:345::-;;;;;;:::i;:::-;;:::i;5194:530::-;;;;;;:::i;:::-;;:::i;2494:120::-;;;;;;:::i;:::-;;:::i;17844:358::-;;;;;;:::i;:::-;;:::i;1918:198:2:-;;;;;;:::i;:::-;;:::i;4682:132:0:-;;;;;;:::i;:::-;;:::i;10208:332::-;;;;;;:::i;:::-;;:::i;2193:115::-;;;;;;:::i;:::-;;:::i;7321:250::-;7461:7;7499:65;7515:5;719:10:6;7537:9:0;7548:6;7556:7;7499:8;:65::i;:::-;7480:84;7321:250;-1:-1:-1;;;;;7321:250:0:o;3009:198::-;3145:55;;-1:-1:-1;;;3145:55:0;;-1:-1:-1;;;;;4688:15:8;;;3145:55:0;;;4670:34:8;4740:15;;4720:18;;;4713:43;3115:7:0;4772:18:8;;;4765:34;;;-1:-1:-1;;4815:18:8;;;4808:34;3115:7:0;3145:4;;:22;;4604:19:8;;3145:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3138:62;;3009:198;;;;;:::o;1668:101:2:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:6;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;12266:414:0:-;12441:7;12479:194;12513:5;719:10:6;12567:9:0;12594:6;12618:12;12648:11;12479:9;:194::i;:::-;12460:213;12266:414;-1:-1:-1;;;;;;12266:414:0:o;2314:174::-;2445:8;;:36;;-1:-1:-1;;;2445:36:0;;-1:-1:-1;;;;;5595:32:8;;;2445:36:0;;;5577:51:8;5644:18;;;5637:34;;;2414:8:0;;2445;;:15;;5550:18:8;;2445:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6313:324::-;6428:7;6466:164;6499:5;719:10:6;6553:9:0;6580:6;-1:-1:-1;;6466:8:0;:164::i;:::-;6447:183;;6313:324;;;;;;:::o;3791:692::-;3954:15;4005:11;3989:12;:27;;3981:36;;;;;;4051:11;-1:-1:-1;;4076:28:0;;4072:99;;;4170:1;4133:8;;:34;;-1:-1:-1;;;4133:34:0;;-1:-1:-1;;;;;2038:32:8;;;4133:34:0;;;2020:51:8;4133:8:0;;;;:18;;1993::8;;4133:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;4118:53;;4072:99;4199:12;4182:295;4218:12;4213:1;:17;4182:295;;4268:8;;:25;;-1:-1:-1;;;4268:25:0;;-1:-1:-1;;;;;5595:32:8;;;4268:25:0;;;5577:51:8;5644:18;;;5637:34;;;4251:14:0;;4268:8;;:15;;5550:18:8;;4268:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4251:42;;4307:25;4408:5;-1:-1:-1;;;;;4408:14:0;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4404:20;;:2;:20;:::i;:::-;4379:5;-1:-1:-1;;;;;4379:19:0;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4336:24;;-1:-1:-1;;;4336:24:0;;-1:-1:-1;;;;;2038:32:8;;;4336:24:0;;;2020:51:8;4336:15:0;;;;;1993:18:8;;4336:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;;;:::i;:::-;4335:89;;;;:::i;:::-;4307:117;-1:-1:-1;4438:28:0;4307:117;4438:28;;:::i;:::-;;;4237:240;;4232:3;;;;;:::i;:::-;;;;4182:295;;;;3971:512;3791:692;;;;;;:::o;1664:523::-;1082:7:2;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:6;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;1779:8:0::1;::::0;:21:::1;::::0;;-1:-1:-1;;;1779:21:0;;;;1739:37:::1;::::0;-1:-1:-1;;;;;1779:8:0::1;::::0;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:8;:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1887:8;:37:::0;;-1:-1:-1;;;;;;1887:37:0::1;-1:-1:-1::0;;;;;1887:37:0;::::1;::::0;;::::1;::::0;;;2117:21:::1;::::0;;-1:-1:-1;;;2117:21:0;;;;1739:61;;-1:-1:-1;1887:37:0;;2117:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;1887:37;2117:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2084:54:0::1;:29;-1:-1:-1::0;;;;;2084:54:0::1;;2063:117;;;::::0;-1:-1:-1;;;2063:117:0;;8717:2:8;2063:117:0::1;::::0;::::1;8699:21:8::0;8756:2;8736:18;;;8729:30;-1:-1:-1;;;8775:18:8;;;8768:46;8831:18;;2063:117:0::1;8515:340:8::0;2063:117:0::1;1729:458;1664:523:::0;:::o;17023:161::-;17089:7;17115:62;17131:5;719:10:6;17153:6:0;17161:1;-1:-1:-1;;17115:8:0;:62::i;16290:263::-;16340:7;16378:168;16411:5;719:10:6;-1:-1:-1;;16501:1:0;-1:-1:-1;;16378:8:0;:168::i;11138:345::-;11254:7;11292:184;11326:5;719:10:6;11380:9:0;11407:6;11431:1;-1:-1:-1;;11292:9:0;:184::i;5194:530::-;5326:14;5376:11;5360:12;:27;;5352:36;;;;;;5422:11;-1:-1:-1;;5447:28:0;;5443:99;;;5541:1;5504:8;;:34;;-1:-1:-1;;;5504:34:0;;-1:-1:-1;;;;;2038:32:8;;;5504:34:0;;;2020:51:8;5504:8:0;;;;:18;;1993::8;;5504:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;5489:53;;5443:99;5570:12;5553:165;5589:12;5584:1;:17;5553:165;;5639:8;;:25;;-1:-1:-1;;;5639:25:0;;-1:-1:-1;;;;;5595:32:8;;;5639:25:0;;;5577:51:8;5644:18;;;5637:34;;;5622:14:0;;5639:8;;:15;;5550:18:8;;5639:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5622:42;;5688:5;-1:-1:-1;;;;;5688:17:0;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5678:29;;;;:::i;:::-;;;5608:110;5603:3;;;;;:::i;:::-;;;;5553:165;;;;5342:382;5194:530;;;;;:::o;2494:120::-;2580:8;;:27;;-1:-1:-1;;;2580:27:0;;-1:-1:-1;;;;;2038:32:8;;;2580:27:0;;;2020:51:8;2553:8:0;;2580;;:20;;1993:18:8;;2580:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;17844:358::-;17991:7;18029:166;18062:5;719:10:6;18116:6:0;18140:12;18170:11;18029:8;:166::i;1918:198:2:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:2;719:10:6;1248:23:2;1240:68;;;;-1:-1:-1;;;1240:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:2;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:2;;9062:2:8;1998:73:2::1;::::0;::::1;9044:21:8::0;9101:2;9081:18;;;9074:30;9140:34;9120:18;;;9113:62;-1:-1:-1;;;9191:18:8;;;9184:36;9237:19;;1998:73:2::1;8860:402:8::0;1998:73:2::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;4682:132:0:-;4767:40;;-1:-1:-1;;;4767:40:0;;-1:-1:-1;;;;;9495:32:8;;4767:40:0;;;9477:51:8;4741:7:0;9544:18:8;;;9537:34;;;-1:-1:-1;;9587:18:8;;;9580:34;4741:7:0;4767:4;;:16;;9450:18:8;;4767:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10208:332::-;10294:7;10336:197;10370:5;719:10:6;10424:9:0;-1:-1:-1;;10488:1:0;-1:-1:-1;;10336:9:0;:197::i;2193:115::-;2276:8;;:25;;-1:-1:-1;;;2276:25:0;;-1:-1:-1;;;;;2038:32:8;;;2276:25:0;;;2020:51:8;2250:7:0;;2276:8;;:18;;1993::8;;2276:25:0;1854:223:8;8342:1415:0;8509:14;-1:-1:-1;;;;;8552:26:0;;8573:4;8552:26;;8509:14;-1:-1:-1;;8617:23:0;;8613:177;;;8664:8;;:36;;-1:-1:-1;;;8664:36:0;;-1:-1:-1;;;;;2038:32:8;;;8664:36:0;;;2020:51:8;8664:8:0;;;;:20;;1993:18:8;;8664:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8656:44;;8613:177;;;8739:8;;:40;;-1:-1:-1;;;8739:40:0;;-1:-1:-1;;;;;5595:32:8;;;8739:40:0;;;5577:51:8;5644:18;;;5637:34;;;8739:8:0;;;;:15;;5550:18:8;;8739:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8731:48;;8613:177;8804:46;;-1:-1:-1;;;8804:46:0;;8828:4;8804:46;;;9837:34:8;-1:-1:-1;;;;;9907:15:8;;;9887:18;;;9880:43;8853:6:0;;8804:15;;;;;;9772:18:8;;8804:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;8800:278;;;8875:47;8897:5;8912;8920:1;8875:21;:47::i;:::-;8981:64;9003:5;9018;-1:-1:-1;;8981:21:0;:64::i;:::-;-1:-1:-1;;9092:6:0;:28;9088:69;;;9131:26;;-1:-1:-1;;;9131:26:0;;-1:-1:-1;;;;;2038:32:8;;;9131:26:0;;;2020:51:8;9131:15:0;;;;;1993:18:8;;9131:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9122:35;;9088:69;9172:9;9168:583;;;9217:30;;-1:-1:-1;;;9217:30:0;;9241:4;9217:30;;;2020:51:8;9197:17:0;;-1:-1:-1;;;;;9217:15:0;;;;;1993:18:8;;9217:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9197:50;;9261:67;9288:5;9295:9;9314:4;9321:6;9261:26;:67::i;:::-;9352:32;;-1:-1:-1;;;9352:32:0;;;;;10108:25:8;;;-1:-1:-1;;;;;10169:32:8;;;10149:18;;;10142:60;9352:13:0;;;;;10081:18:8;;9352:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9426:30;;-1:-1:-1;;;9426:30:0;;9450:4;9426:30;;;2020:51:8;9343:41:0;;-1:-1:-1;9399:24:0;;-1:-1:-1;;;;;9426:15:0;;;;;1993:18:8;;9426:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9399:57;;9493:9;9474:16;:28;9470:198;;;9520:148;9564:5;9591:9;9622:28;9641:9;9622:16;:28;:::i;:::-;9520:22;:148::i;:::-;9183:496;;9168:583;;;9708:32;;-1:-1:-1;;;9708:32:0;;;;;10108:25:8;;;-1:-1:-1;;;;;10169:32:8;;;10149:18;;;10142:60;9708:13:0;;;;;10081:18:8;;9708:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9699:41;;9168:583;8525:1232;;8342:1415;;;;;;;:::o;2270:187:2:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:2;;;-1:-1:-1;;;;;;2378:17:2;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;13557:2410:0:-;13760:17;13813:11;13797:12;:27;;13789:36;;;;;;13859:11;-1:-1:-1;;13884:28:0;;13880:99;;;13978:1;13941:8;;:34;;-1:-1:-1;;;13941:34:0;;-1:-1:-1;;;;;2038:32:8;;;13941:34:0;;;2020:51:8;13941:8:0;;;;:18;;1993::8;;13941:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;13926:53;;13880:99;14020:12;13990:1971;14062:6;14046:13;:9;14058:1;14046:13;:::i;:::-;:22;:43;;;;;14077:12;14072:1;:17;;14046:43;13990:1971;;;14148:8;;:34;;-1:-1:-1;;;14148:34:0;;-1:-1:-1;;;;;5595:32:8;;;14148:34:0;;;5577:51:8;5644:18;;;5637:34;;;14131:14:0;;14148:8;;:15;;5550:18:8;;14148:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14249:27;;-1:-1:-1;;;14249:27:0;;-1:-1:-1;;;;;2038:32:8;;;14249:27:0;;;2020:51:8;14131::0;;-1:-1:-1;14197:23:0;;14223:111;;14249:15;;;;;;1993:18:8;;14249:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14294:5;-1:-1:-1;;;;;14294:24:0;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14223:8;:111::i;:::-;14511:42;;-1:-1:-1;;;14511:42:0;;-1:-1:-1;;;;;9855:15:8;;;14511:42:0;;;9837:34:8;14547:4:0;9887:18:8;;;9880:43;14197:137:0;;-1:-1:-1;14452:115:0;;14197:137;;14511:15;;;;;;9772:18:8;;14511:42:0;;;;;;;;;;;;;;;;;;;;;;14452:115;14434:133;-1:-1:-1;14585:20:0;14581:34;;14607:8;;;;14581:34;14630:17;-1:-1:-1;;14665:6:0;:29;14661:696;;14789:23;14883:5;-1:-1:-1;;;;;14883:19:0;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14863:5;-1:-1:-1;;;;;14863:14:0;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14859:20;;:2;:20;:::i;:::-;14817:18;14826:9;14817:6;:18;:::i;:::-;14816:63;;;;:::i;:::-;14815:89;;;;:::i;:::-;14789:115;;15234:42;15243:15;15260;15234:8;:42::i;:::-;15222:54;;14696:595;14661:696;;;-1:-1:-1;15327:15:0;14661:696;15391:30;;-1:-1:-1;;;15391:30:0;;15415:4;15391:30;;;2020:51:8;15371:17:0;;-1:-1:-1;;;;;15391:15:0;;;;;1993:18:8;;15391:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15371:50;;15436:149;15480:5;15503:10;15539:4;15562:9;15436:26;:149::i;:::-;15613:36;;-1:-1:-1;;;15613:36:0;;;;;10108:25:8;;;-1:-1:-1;;;;;10169:32:8;;;10149:18;;;10142:60;15613:14:0;;;;;10081:18:8;;15613:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15600:49;;;;:::i;:::-;15691:30;;-1:-1:-1;;;15691:30:0;;15715:4;15691:30;;;2020:51:8;15600:49:0;;-1:-1:-1;15664:24:0;;-1:-1:-1;;;;;15691:15:0;;;;;1993:18:8;;15691:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15664:57;;15758:9;15739:16;:28;15735:216;;;15787:149;15831:5;15858:10;15890:28;15909:9;15890:16;:28;:::i;15787:149::-;14117:1844;;;;;13990:1971;14103:3;;;;:::i;:::-;;;;13990:1971;;;;13779:2188;13557:2410;;;;;;;;:::o;18944:1600::-;19206:1;19169:8;;:34;;-1:-1:-1;;;19169:34:0;;-1:-1:-1;;;;;2038:32:8;;;19169:34:0;;;2020:51:8;19117:16:0;;;;19206:1;;19169:8;;;:18;;1993::8;;19169:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;19145:62;-1:-1:-1;19221:11:0;;;:33;;-1:-1:-1;19236:18:0;;19221:33;19217:47;;;19263:1;19256:8;;;;;19217:47;19355:8;;:46;;-1:-1:-1;;;19355:46:0;;-1:-1:-1;;;;;5595:32:8;;;19355:46:0;;;5577:51:8;5644:18;;;5637:34;;;19331:21:0;;19355:8;;:15;;5550:18:8;;19355:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19331:70;;19411:15;19429:108;19451:6;19501:12;-1:-1:-1;;;;;19501:24:0;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19471:12;-1:-1:-1;;;;;19471:25:0;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;19429:108::-;19576:30;;-1:-1:-1;;;19576:30:0;;19600:4;19576:30;;;2020:51:8;19411:126:0;;-1:-1:-1;19548:25:0;;-1:-1:-1;;;;;19576:15:0;;;;;1993:18:8;;19576:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19548:58;-1:-1:-1;19616:188:0;19639:5;19658:8;19688:4;19707:7;19728:12;19754:40;19763:11;19776:17;19792:1;19776:13;:17;:::i;19754:40::-;19616:9;:188::i;:::-;-1:-1:-1;19841:30:0;;-1:-1:-1;;;19841:30:0;;19865:4;19841:30;;;2020:51:8;19814:24:0;;-1:-1:-1;;;;;19841:15:0;;;;;1993:18:8;;19841:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19814:57;;19908:17;19889:16;:36;19881:64;;;;-1:-1:-1;;;19881:64:0;;10415:2:8;19881:64:0;;;10397:21:8;10454:2;10434:18;;;10427:30;-1:-1:-1;;;10473:18:8;;;10466:45;10528:18;;19881:64:0;10213:339:8;19881:64:0;19956:163;19978:5;20005:4;20024:8;20046:36;20065:17;20046:16;:36;:::i;:::-;20096:13;19956:8;:163::i;:::-;-1:-1:-1;20155:30:0;;-1:-1:-1;;;20155:30:0;;20179:4;20155:30;;;2020:51:8;20129:23:0;;-1:-1:-1;;;;;20155:15:0;;;;;1993:18:8;;20155:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20129:56;;20222:15;20203:16;:34;20195:61;;;;-1:-1:-1;;;20195:61:0;;10759:2:8;20195:61:0;;;10741:21:8;10798:2;10778:18;;;10771:30;-1:-1:-1;;;10817:18:8;;;10810:44;10871:18;;20195:61:0;10557:338:8;20195:61:0;20277:34;20296:15;20277:16;:34;:::i;:::-;20266:45;-1:-1:-1;20266:45:0;20326:36;20345:17;20326:16;:36;:::i;:::-;:47;20322:216;;;20389:138;20429:5;20452:8;20478:35;20496:17;20478:15;:35;:::i;20389:138::-;19135:1409;;;;;;18944:1600;;;;;;;:::o;1413:603:4:-;1768:10;;;1767:62;;-1:-1:-1;1784:39:4;;-1:-1:-1;;;1784:39:4;;1808:4;1784:39;;;9837:34:8;-1:-1:-1;;;;;9907:15:8;;;9887:18;;;9880:43;1784:15:4;;;;;9772:18:8;;1784:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1767:62;1746:163;;;;-1:-1:-1;;;1746:163:4;;11102:2:8;1746:163:4;;;11084:21:8;11141:2;11121:18;;;11114:30;11180:34;11160:18;;;11153:62;-1:-1:-1;;;11231:18:8;;;11224:52;11293:19;;1746:163:4;10900:418:8;1746:163:4;1946:62;;-1:-1:-1;;;;;5595:32:8;;1946:62:4;;;5577:51:8;5644:18;;;5637:34;;;1919:90:4;;1939:5;;-1:-1:-1;;;1969:22:4;5550:18:8;;1946:62:4;;;;-1:-1:-1;;1946:62:4;;;;;;;;;;;;;;-1:-1:-1;;;;;1946:62:4;-1:-1:-1;;;;;;1946:62:4;;;;;;;;;;1919:19;:90::i;:::-;1413:603;;;:::o;912:241::-;1077:68;;-1:-1:-1;;;;;11581:15:8;;;1077:68:4;;;11563:34:8;11633:15;;11613:18;;;11606:43;11665:18;;;11658:34;;;1050:96:4;;1070:5;;-1:-1:-1;;;1100:27:4;11498:18:8;;1077:68:4;11323:375:8;1050:96:4;912:241;;;;:::o;701:205::-;840:58;;-1:-1:-1;;;;;5595:32:8;;840:58:4;;;5577:51:8;5644:18;;;5637:34;;;813:86:4;;833:5;;-1:-1:-1;;;863:23:4;5550:18:8;;840:58:4;5403:274:8;446:104:7;504:7;534:1;530;:5;:13;;542:1;530:13;;;-1:-1:-1;538:1:7;;446:104;-1:-1:-1;446:104:7:o;3207:706:4:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:4;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:4;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:4;;12187:2:8;3811:85:4;;;12169:21:8;12226:2;12206:18;;;12199:30;12265:34;12245:18;;;12238:62;-1:-1:-1;;;12316:18:8;;;12309:40;12366:19;;3811:85:4;11985:406:8;3514:223:5;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3647;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:5;;13005:2:8;4881:60:5;;;12987:21:8;13044:2;13024:18;;;13017:30;13083:31;13063:18;;;13056:59;13132:18;;4881:60:5;12803:353:8;4881:60:5;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:5;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;4601:499;-1:-1:-1;;;;;;;4601:499:5:o;7214:692::-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:5;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;-1:-1:-1;;;7855:20:5;;;;;;;;:::i;14:131:8:-;-1:-1:-1;;;;;89:31:8;;79:42;;69:70;;135:1;132;125:12;150:525;236:6;244;252;260;313:3;301:9;292:7;288:23;284:33;281:53;;;330:1;327;320:12;281:53;369:9;356:23;388:31;413:5;388:31;:::i;:::-;438:5;-1:-1:-1;495:2:8;480:18;;467:32;508:33;467:32;508:33;:::i;:::-;150:525;;560:7;;-1:-1:-1;;;;614:2:8;599:18;;586:32;;665:2;650:18;637:32;;150:525::o;862:388::-;930:6;938;991:2;979:9;970:7;966:23;962:32;959:52;;;1007:1;1004;997:12;959:52;1046:9;1033:23;1065:31;1090:5;1065:31;:::i;:::-;1115:5;-1:-1:-1;1172:2:8;1157:18;;1144:32;1185:33;1144:32;1185:33;:::i;:::-;1237:7;1227:17;;;862:388;;;;;:::o;1255:594::-;1350:6;1358;1366;1374;1382;1435:3;1423:9;1414:7;1410:23;1406:33;1403:53;;;1452:1;1449;1442:12;1403:53;1491:9;1478:23;1510:31;1535:5;1510:31;:::i;:::-;1560:5;-1:-1:-1;1617:2:8;1602:18;;1589:32;1630:33;1589:32;1630:33;:::i;:::-;1255:594;;1682:7;;-1:-1:-1;;;;1736:2:8;1721:18;;1708:32;;1787:2;1772:18;;1759:32;;1838:3;1823:19;;;1810:33;;-1:-1:-1;1255:594:8:o;2082:315::-;2150:6;2158;2211:2;2199:9;2190:7;2186:23;2182:32;2179:52;;;2227:1;2224;2217:12;2179:52;2266:9;2253:23;2285:31;2310:5;2285:31;:::i;:::-;2335:5;2387:2;2372:18;;;;2359:32;;-1:-1:-1;;;2082:315:8:o;2627:456::-;2704:6;2712;2720;2773:2;2761:9;2752:7;2748:23;2744:32;2741:52;;;2789:1;2786;2779:12;2741:52;2828:9;2815:23;2847:31;2872:5;2847:31;:::i;:::-;2897:5;-1:-1:-1;2954:2:8;2939:18;;2926:32;2967:33;2926:32;2967:33;:::i;:::-;2627:456;;3019:7;;-1:-1:-1;;;3073:2:8;3058:18;;;;3045:32;;2627:456::o;3296:247::-;3355:6;3408:2;3396:9;3387:7;3383:23;3379:32;3376:52;;;3424:1;3421;3414:12;3376:52;3463:9;3450:23;3482:31;3507:5;3482:31;:::i;3548:383::-;3625:6;3633;3641;3694:2;3682:9;3673:7;3669:23;3665:32;3662:52;;;3710:1;3707;3700:12;3662:52;3749:9;3736:23;3768:31;3793:5;3768:31;:::i;:::-;3818:5;3870:2;3855:18;;3842:32;;-1:-1:-1;3921:2:8;3906:18;;;3893:32;;3548:383;-1:-1:-1;;;3548:383:8:o;3936:452::-;4022:6;4030;4038;4046;4099:3;4087:9;4078:7;4074:23;4070:33;4067:53;;;4116:1;4113;4106:12;4067:53;4155:9;4142:23;4174:31;4199:5;4174:31;:::i;:::-;4224:5;4276:2;4261:18;;4248:32;;-1:-1:-1;4327:2:8;4312:18;;4299:32;;4378:2;4363:18;4350:32;;-1:-1:-1;3936:452:8;-1:-1:-1;;;3936:452:8:o;4853:184::-;4923:6;4976:2;4964:9;4955:7;4951:23;4947:32;4944:52;;;4992:1;4989;4982:12;4944:52;-1:-1:-1;5015:16:8;;4853:184;-1:-1:-1;4853:184:8:o;5042:356::-;5244:2;5226:21;;;5263:18;;;5256:30;5322:34;5317:2;5302:18;;5295:62;5389:2;5374:18;;5042:356::o;5682:268::-;5769:6;5822:2;5810:9;5801:7;5797:23;5793:32;5790:52;;;5838:1;5835;5828:12;5790:52;5870:9;5864:16;5889:31;5914:5;5889:31;:::i;5955:127::-;6016:10;6011:3;6007:20;6004:1;5997:31;6047:4;6044:1;6037:15;6071:4;6068:1;6061:15;6087:125;6127:4;6155:1;6152;6149:8;6146:34;;;6160:18;;:::i;:::-;-1:-1:-1;6197:9:8;;6087:125::o;6217:422::-;6306:1;6349:5;6306:1;6363:270;6384:7;6374:8;6371:21;6363:270;;;6443:4;6439:1;6435:6;6431:17;6425:4;6422:27;6419:53;;;6452:18;;:::i;:::-;6502:7;6492:8;6488:22;6485:55;;;6522:16;;;;6485:55;6601:22;;;;6561:15;;;;6363:270;;;6367:3;6217:422;;;;;:::o;6644:806::-;6693:5;6723:8;6713:80;;-1:-1:-1;6764:1:8;6778:5;;6713:80;6812:4;6802:76;;-1:-1:-1;6849:1:8;6863:5;;6802:76;6894:4;6912:1;6907:59;;;;6980:1;6975:130;;;;6887:218;;6907:59;6937:1;6928:10;;6951:5;;;6975:130;7012:3;7002:8;6999:17;6996:43;;;7019:18;;:::i;:::-;-1:-1:-1;;7075:1:8;7061:16;;7090:5;;6887:218;;7189:2;7179:8;7176:16;7170:3;7164:4;7161:13;7157:36;7151:2;7141:8;7138:16;7133:2;7127:4;7124:12;7120:35;7117:77;7114:159;;;-1:-1:-1;7226:19:8;;;7258:5;;7114:159;7305:34;7330:8;7324:4;7305:34;:::i;:::-;7375:6;7371:1;7367:6;7363:19;7354:7;7351:32;7348:58;;;7386:18;;:::i;:::-;7424:20;;6644:806;-1:-1:-1;;;6644:806:8:o;7455:131::-;7515:5;7544:36;7571:8;7565:4;7544:36;:::i;7591:168::-;7631:7;7697:1;7693;7689:6;7685:14;7682:1;7679:21;7674:1;7667:9;7660:17;7656:45;7653:71;;;7704:18;;:::i;:::-;-1:-1:-1;7744:9:8;;7591:168::o;7764:217::-;7804:1;7830;7820:132;;7874:10;7869:3;7865:20;7862:1;7855:31;7909:4;7906:1;7899:15;7937:4;7934:1;7927:15;7820:132;-1:-1:-1;7966:9:8;;7764:217::o;7986:128::-;8026:3;8057:1;8053:6;8050:1;8047:13;8044:39;;;8063:18;;:::i;:::-;-1:-1:-1;8099:9:8;;7986:128::o;8119:135::-;8158:3;-1:-1:-1;;8179:17:8;;8176:43;;;8199:18;;:::i;:::-;-1:-1:-1;8246:1:8;8235:13;;8119:135::o;11703:277::-;11770:6;11823:2;11811:9;11802:7;11798:23;11794:32;11791:52;;;11839:1;11836;11829:12;11791:52;11871:9;11865:16;11924:5;11917:13;11910:21;11903:5;11900:32;11890:60;;11946:1;11943;11936:12;13161:258;13233:1;13243:113;13257:6;13254:1;13251:13;13243:113;;;13333:11;;;13327:18;13314:11;;;13307:39;13279:2;13272:10;13243:113;;;13374:6;13371:1;13368:13;13365:48;;;-1:-1:-1;;13409:1:8;13391:16;;13384:27;13161:258::o;13424:274::-;13553:3;13591:6;13585:13;13607:53;13653:6;13648:3;13641:4;13633:6;13629:17;13607:53;:::i;:::-;13676:16;;;;;13424:274;-1:-1:-1;;13424:274:8:o;13703:383::-;13852:2;13841:9;13834:21;13815:4;13884:6;13878:13;13927:6;13922:2;13911:9;13907:18;13900:34;13943:66;14002:6;13997:2;13986:9;13982:18;13977:2;13969:6;13965:15;13943:66;:::i;:::-;14070:2;14049:15;-1:-1:-1;;14045:29:8;14030:45;;;;14077:2;14026:54;;13703:383;-1:-1:-1;;13703:383:8:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "deposit(address,address,uint256)": {
        "details": "The caller must approve this contract to utilize the specified ERC20 or this call will revert.",
        "notice": "Called to deposit the caller's tokens into the most-current vault, crediting the minted shares to recipient.",
        "params": {
          "amount": "Amount of tokens to deposit; tokens that cannot be deposited will be refunded. If `DEPOSIT_EVERYTHING`, just deposit everything.",
          "recipient": "Address to receive the issued vault tokens",
          "token": "Address of the ERC20 token being deposited"
        },
        "returns": {
          "_0": "Total vault shares received by recipient"
        }
      },
      "deposit(address,address,uint256,uint256)": {
        "details": "The caller must approve this contract to utilize the specified ERC20 or this call will revert.",
        "notice": "Called to deposit the caller's tokens into a specific vault, crediting the minted shares to recipient.",
        "params": {
          "amount": "Amount of tokens to deposit; tokens that cannot be deposited will be refunded. If `DEPOSIT_EVERYTHING`, just deposit everything.",
          "recipient": "Address to receive the issued vault tokens",
          "token": "Address of the ERC20 token being deposited",
          "vaultId": "Vault id to deposit into; pass `MAX_VAULT_ID` to deposit into the latest vault"
        },
        "returns": {
          "_0": "Total vault shares received by recipient"
        }
      },
      "migrate(address)": {
        "details": "The caller must approve this contract to use their vault shares or this call will revert.",
        "notice": "Called to migrate all of the caller's shares to the latest vault.",
        "params": {
          "token": "Address of the ERC20 token to migrate the vaults of"
        },
        "returns": {
          "_0": "The number of tokens migrated."
        }
      },
      "migrate(address,uint256)": {
        "details": "The caller must approve this contract to use their vault shares or this call will revert.",
        "notice": "Called to migrate the caller's shares to the latest vault.",
        "params": {
          "amount": "Maximum number of tokens to migrate from all vaults; actual migration may be less. If `MIGRATE_EVERYTHING`, just migrate everything.",
          "token": "Address of the ERC20 token to migrate the vaults of"
        },
        "returns": {
          "_0": "The number of tokens migrated."
        }
      },
      "migrate(address,uint256,uint256,uint256)": {
        "details": "The caller must approve this contract to use their vault shares or this call will revert.",
        "notice": "Called to migrate the caller's shares to the latest vault.",
        "params": {
          "amount": "Maximum number of tokens to migrate from all vaults; actual migration may be less. If `MIGRATE_EVERYTHING`, just migrate everything.",
          "firstVaultId": "First vault id to migrate from; 0 to start at the the beginning",
          "lastVaultId": "Last vault id to migrate from; `MAX_VAULT_ID` to migrate from all vaults",
          "token": "Address of the ERC20 token to migrate the vaults of"
        },
        "returns": {
          "_0": "The number of tokens migrated."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setRegistry(address)": {
        "notice": "Used to update the yearn registry. The choice of registry is SECURITY SENSITIVE, so only the owner can update it.",
        "params": {
          "yearnRegistry": "The new registry address."
        }
      },
      "totalAssets(address)": {
        "notice": "Returns the combined TVL for all the vaults for a specified token.",
        "returns": {
          "_0": "assets The sum of all the assets managed by the vaults for the specified token."
        }
      },
      "totalAssets(address,uint256,uint256)": {
        "notice": "Returns the combined TVL for all the specified vaults for a specified token.",
        "params": {
          "firstVaultId": "First vault id to include; 0 to start at the beginning",
          "lastVaultId": "Last vault id to include; `MAX_VAULT_ID` to include all vaults"
        },
        "returns": {
          "assets": "The sum of all the assets managed by the vaults for the specified token."
        }
      },
      "totalVaultBalance(address,address)": {
        "notice": "Gets the balance of an account across all the vaults for a token.",
        "params": {
          "account": "The address of the account to pull the balances for",
          "token": "Which ERC20 token to pull vault balances for"
        },
        "returns": {
          "_0": "The current value, in token base units, of the shares held by the specified account across all the vaults for the specified token."
        }
      },
      "totalVaultBalance(address,address,uint256,uint256)": {
        "notice": "Gets the balance of an account across certain vaults for a token.",
        "params": {
          "account": "The address of the account to pull the balances for",
          "firstVaultId": "First vault id to include; 0 to start at the beginning",
          "lastVaultId": "Last vault id to include; `MAX_VAULT_ID` to include all vaults",
          "token": "Which ERC20 token to pull vault balances for"
        },
        "returns": {
          "balance": "The current value, in token base units, of the shares held by the specified account across all the specified vaults for the specified token."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address,address)": {
        "details": "The caller must approve this contract to use their vault shares or this call will revert.",
        "notice": "Called to redeem the all of the caller's shares from underlying vault(s), with the proceeds distributed to recipient.",
        "params": {
          "recipient": "Address to receive the withdrawn tokens",
          "token": "Address of the ERC20 token to withdraw from vaults"
        },
        "returns": {
          "_0": "The number of tokens received by recipient."
        }
      },
      "withdraw(address,address,uint256)": {
        "details": "The caller must approve this contract to use their vault shares or this call will revert.",
        "notice": "Called to redeem the caller's shares from underlying vault(s), with the proceeds distributed to recipient.",
        "params": {
          "amount": "Maximum number of tokens to withdraw from all vaults; actual withdrawal may be less. If `WITHDRAW_EVERYTHING`, just withdraw everything.",
          "recipient": "Address to receive the withdrawn tokens",
          "token": "Address of the ERC20 token to withdraw from vaults"
        },
        "returns": {
          "_0": "The number of tokens received by recipient."
        }
      },
      "withdraw(address,address,uint256,uint256,uint256)": {
        "details": "The caller must approve this contract to use their vault shares or this call will revert.",
        "notice": "Called to redeem the caller's shares from underlying vault(s), with the proceeds distributed to recipient.",
        "params": {
          "amount": "Maximum number of tokens to withdraw from all vaults; actual withdrawal may be less. If `WITHDRAW_EVERYTHING`, just withdraw everything.",
          "firstVaultId": "First vault id to pull from; 0 to start at the the beginning",
          "lastVaultId": "Last vault id to pull from; `MAX_VAULT_ID` to withdraw from all vaults",
          "recipient": "Address to receive the withdrawn tokens",
          "token": "Address of the ERC20 token to withdraw from vaults"
        },
        "returns": {
          "_0": "The number of tokens received by recipient."
        }
      }
    },
    "notice": "Adapted from the Yearn BaseRouter for Shapeshift's use case of a router that forward native vault tokens to the caller and does not hold any funds or assets (vault tokens or other ERC20 tokens)",
    "version": 1
  },
  "offset": [673, 20546],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD68EBF7 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEE424278 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEE424278 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xF3E0FFBF EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xF940E385 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xF9C7BBA5 EQ PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD68EBF7 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xCE5494BB EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xE0CEC5FB EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0xE177DC70 EQ PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BBFC69E GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x7BBFC69E EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8340F549 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x900AB8B5 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xA91EE0DC EQ PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20E8C565 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x212A8C95 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x76234759 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7B JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DC1 JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x370 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DFA JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x19A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14E JUMP JUMPDEST PUSH2 0x19A PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E77 JUMP JUMPDEST PUSH2 0x43F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19A JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7B JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH2 0x172 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x144 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH2 0x144 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E77 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED5 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0xA39 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F0A JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DC1 JUMP JUMPDEST PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB8 JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC DUP6 CALLER DUP7 DUP7 DUP7 PUSH2 0xC15 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x900AB8B5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x44 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 NOT PUSH1 0x64 DUP4 ADD MSTORE SWAP1 ADDRESS SWAP1 PUSH4 0x900AB8B5 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x343 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39A SWAP1 PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3AD PUSH1 0x0 PUSH2 0x102B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BF DUP7 CALLER DUP8 DUP8 DUP8 DUP8 PUSH2 0x107B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3DDFE34F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7BBFC69E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x41B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x450 DUP5 CALLER DUP6 DUP6 PUSH1 0x0 NOT PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 NOT DUP2 EQ ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF9C7BBA5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF9C7BBA5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 JUMPDEST DUP2 DUP2 GT PUSH2 0x6E3 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3DDFE34F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7BBFC69E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x5E0 SWAP1 PUSH1 0xA PUSH2 0x20C1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99530B06 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x688 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x6C0 SWAP2 SWAP1 PUSH2 0x20EC JUMP JUMPDEST SWAP1 POP PUSH2 0x6CC DUP2 DUP7 PUSH2 0x210E JUMP JUMPDEST SWAP5 POP POP POP DUP1 DUP1 PUSH2 0x6DB SWAP1 PUSH2 0x2126 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4F2 JUMP JUMPDEST POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39A SWAP1 PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5AA6E675 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x5AA6E675 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x761 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x785 SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x5AA6E675 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH4 0x5AA6E675 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x696E76616C6964207265676973747279 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x367 DUP4 CALLER DUP5 PUSH1 0x0 PUSH1 0x0 NOT PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A DUP3 CALLER PUSH1 0x0 NOT PUSH1 0x0 PUSH1 0x0 NOT PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x450 DUP5 CALLER DUP6 DUP6 PUSH1 0x0 PUSH1 0x0 NOT PUSH2 0x107B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 NOT DUP2 EQ ISZERO PUSH2 0x92D JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF9C7BBA5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF9C7BBA5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 JUMPDEST DUP2 DUP2 GT PUSH2 0xA30 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3DDFE34F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7BBFC69E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x988 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1E1D114 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA10 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0xA1A SWAP1 DUP6 PUSH2 0x210E JUMP JUMPDEST SWAP4 POP POP DUP1 DUP1 PUSH2 0xA28 SWAP1 PUSH2 0x2126 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x92F JUMP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE177DC7 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xE177DC70 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC DUP6 CALLER DUP7 DUP7 DUP7 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39A SWAP1 PUSH2 0x1F5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39A JUMP JUMPDEST PUSH2 0xB4F DUP2 PUSH2 0x102B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE0CEC5FB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 NOT PUSH1 0x44 DUP4 ADD MSTORE SWAP1 ADDRESS SWAP1 PUSH4 0xE0CEC5FB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x367 DUP4 CALLER DUP5 PUSH1 0x0 NOT PUSH1 0x0 PUSH1 0x0 NOT PUSH2 0x107B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF9C7BBA5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xF9C7BBA5 SWAP1 PUSH1 0x24 ADD PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ADDRESS EQ ISZERO DUP2 PUSH1 0x0 NOT DUP5 EQ ISZERO PUSH2 0xCA4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE177DC7 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xE177DC70 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC9D SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST SWAP1 POP PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3DDFE34F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x7BBFC69E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD19 SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP7 SWAP2 SWAP1 DUP11 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST LT ISZERO PUSH2 0xDAE JUMPI PUSH2 0xDA1 DUP9 DUP3 PUSH1 0x0 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0xDAE DUP9 DUP3 PUSH1 0x0 NOT PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 EQ ISZERO PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP10 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP5 POP JUMPDEST DUP2 ISZERO PUSH2 0xFAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP PUSH2 0xEA4 DUP10 DUP10 ADDRESS DUP10 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6E553F65 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF17 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP5 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF85 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFA3 JUMPI PUSH2 0xFA3 DUP11 DUP11 PUSH2 0xF9E DUP6 DUP6 PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x1B43 JUMP JUMPDEST POP POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6E553F65 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101D SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x108A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 NOT DUP2 EQ ISZERO PUSH2 0x1111 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF9C7BBA5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF9C7BBA5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x110E SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 JUMPDEST DUP6 PUSH2 0x111F DUP5 PUSH1 0x1 PUSH2 0x210E JUMP JUMPDEST LT DUP1 ISZERO PUSH2 0x112C JUMPI POP DUP2 DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0x158B JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3DDFE34F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7BBFC69E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11A7 SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x1283 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x121C SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x75DE2902 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127E SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH2 0x12D9 SWAP2 DUP4 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP1 PUSH2 0x12E7 JUMPI POP POP PUSH2 0x1579 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP10 EQ PUSH2 0x13F5 JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99530B06 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1332 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1356 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1394 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13B8 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x13C3 SWAP1 PUSH1 0xA PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x13CD DUP10 DUP14 PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x13D7 SWAP2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x13E1 SWAP2 SWAP1 PUSH2 0x20EC JUMP JUMPDEST SWAP1 POP PUSH2 0x13ED DUP4 DUP3 PUSH2 0x1B73 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13F8 JUMP JUMPDEST POP DUP1 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x143F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1463 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP PUSH2 0x1471 DUP5 DUP14 ADDRESS DUP6 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x7B8A67 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 AND SWAP1 PUSH3 0xF714CE SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x14EC SWAP1 DUP9 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP8 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1536 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x155A SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1573 JUMPI PUSH2 0x1573 DUP6 DUP15 PUSH2 0xF9E DUP6 DUP6 PUSH2 0x1FC6 JUMP JUMPDEST POP POP POP POP POP JUMPDEST DUP1 PUSH2 0x1583 DUP2 PUSH2 0x2126 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1113 JUMP JUMPDEST POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xF9C7BBA5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP4 SWAP1 SWAP3 SWAP2 AND SWAP1 PUSH4 0xF9C7BBA5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160C SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x1616 SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST SWAP1 POP DUP5 ISZERO DUP1 PUSH2 0x1623 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1632 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3DDFE34F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x7BBFC69E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1684 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16A8 SWAP2 SWAP1 PUSH2 0x1F93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x177E DUP8 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1E1D114 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1712 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xECF70858 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1774 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x127E SWAP2 SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17EC SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP PUSH2 0x180A DUP11 DUP11 ADDRESS DUP6 DUP12 PUSH2 0x1805 DUP13 PUSH2 0x127E PUSH1 0x1 DUP14 PUSH2 0x1FC6 JUMP JUMPDEST PUSH2 0x107B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1852 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1876 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT PUSH2 0x18B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1DDA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39A JUMP JUMPDEST PUSH2 0x18CF DUP12 ADDRESS DUP13 PUSH2 0x18C9 DUP7 DUP7 PUSH2 0x1FC6 JUMP JUMPDEST DUP10 PUSH2 0xC15 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1917 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x193B SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x197D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x19195C1BDCDA5D0819985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39A JUMP JUMPDEST PUSH2 0x1987 DUP2 DUP4 PUSH2 0x1FC6 JUMP JUMPDEST SWAP7 POP DUP7 PUSH2 0x1994 DUP5 DUP5 PUSH2 0x1FC6 JUMP JUMPDEST GT ISZERO PUSH2 0x19A9 JUMPI PUSH2 0x19A9 DUP13 DUP13 PUSH2 0xF9E DUP7 DUP6 PUSH2 0x1FC6 JUMP JUMPDEST POP POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x1A32 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A30 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x1A9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1B00 SWAP1 DUP5 SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1B89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1B3D SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x1AC9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1B00 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1B82 JUMPI DUP2 PUSH2 0x367 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C5B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1B00 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1BFC SWAP2 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH2 0x1B00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x450 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 DUP5 EXTCODESIZE PUSH2 0x1CB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1CD0 SWAP2 SWAP1 PUSH2 0x218F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D0D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1D22 DUP3 DUP3 DUP7 PUSH2 0x1D2D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1D3C JUMPI POP DUP2 PUSH2 0x453 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1D4C JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1D91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1D9C DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1DAC DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1DDF DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1DEF DUP2 PUSH2 0x1D66 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1E1D DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1E2D DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP3 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E69 DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1E97 DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1EA7 DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ECA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x453 DUP2 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1EF5 DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1F2B DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x453 DUP2 PUSH2 0x1D66 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD8 PUSH2 0x1FB0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2018 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1FFE JUMPI PUSH2 0x1FFE PUSH2 0x1FB0 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x200B JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x202F JUMPI POP PUSH1 0x1 PUSH2 0x36A JUMP JUMPDEST DUP2 PUSH2 0x203C JUMPI POP PUSH1 0x0 PUSH2 0x36A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2052 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x205C JUMPI PUSH2 0x2078 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x36A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x206D JUMPI PUSH2 0x206D PUSH2 0x1FB0 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x36A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x209B JUMPI POP DUP2 DUP2 EXP PUSH2 0x36A JUMP JUMPDEST PUSH2 0x20A5 DUP4 DUP4 PUSH2 0x1FDD JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x20B9 JUMPI PUSH2 0x20B9 PUSH2 0x1FB0 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x367 DUP4 DUP4 PUSH2 0x2020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x20E7 JUMPI PUSH2 0x20E7 PUSH2 0x1FB0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2109 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2121 JUMPI PUSH2 0x2121 PUSH2 0x1FB0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x213A JUMPI PUSH2 0x213A PUSH2 0x1FB0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x217E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2166 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B3D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x21A1 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2163 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x21CA DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xEA RETURNDATACOPY 0xBE 0xC7 COINBASE XOR 0xBC 0x22 0xBC RETURN LOG0 GAS 0x4D 0xDE SWAP6 LOG4 DUP14 DUP6 PUSH25 0xB4AF0BF81C3CE642B1C9CDE064736F6C634300080A00330000 ",
  "pcMap": {
    "0": {
      "offset": [673, 20546],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [673, 20546],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [673, 20546],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [673, 20546],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [673, 20546],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [673, 20546],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [673, 20546],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [673, 20546],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C"
    },
    "25": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [673, 20546],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [673, 20546],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAD68EBF7"
    },
    "38": {
      "fn": null,
      "offset": [673, 20546],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEE424278"
    },
    "49": {
      "fn": null,
      "offset": [673, 20546],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xEE424278"
    },
    "60": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26E"
    },
    "64": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x281"
    },
    "75": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF3E0FFBF"
    },
    "82": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294"
    },
    "86": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF940E385"
    },
    "93": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A7"
    },
    "97": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF9C7BBA5"
    },
    "104": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BA"
    },
    "108": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [673, 20546],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAD68EBF7"
    },
    "120": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F"
    },
    "124": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCE5494BB"
    },
    "131": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x222"
    },
    "135": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD9CAED12"
    },
    "142": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x235"
    },
    "146": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE0CEC5FB"
    },
    "153": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x248"
    },
    "157": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE177DC70"
    },
    "164": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "168": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [673, 20546],
      "op": "REVERT",
      "path": "0"
    },
    "173": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPDEST",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BBFC69E"
    },
    "180": {
      "fn": null,
      "offset": [673, 20546],
      "op": "GT",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BBFC69E"
    },
    "191": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "195": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8340F549"
    },
    "202": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C5"
    },
    "206": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "213": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D8"
    },
    "217": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0x900AB8B5"
    },
    "224": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9"
    },
    "228": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA91EE0DC"
    },
    "235": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "236": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC"
    },
    "239": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "243": {
      "fn": null,
      "offset": [673, 20546],
      "op": "REVERT",
      "path": "0"
    },
    "244": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPDEST",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0x20E8C565"
    },
    "251": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "255": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0x212A8C95"
    },
    "262": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157"
    },
    "266": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0x715018A6"
    },
    "273": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A"
    },
    "277": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0x76234759"
    },
    "284": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "288": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "289": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "290": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7B103999"
    },
    "295": {
      "fn": null,
      "offset": [673, 20546],
      "op": "EQ",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187"
    },
    "299": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPI",
      "path": "0"
    },
    "300": {
      "fn": null,
      "offset": [673, 20546],
      "op": "JUMPDEST",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [673, 20546],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "303": {
      "fn": null,
      "offset": [673, 20546],
      "op": "DUP1",
      "path": "0"
    },
    "304": {
      "first_revert": true,
      "fn": null,
      "offset": [673, 20546],
      "op": "REVERT",
      "path": "0"
    },
    "305": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "309": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F"
    },
    "312": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "313": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "315": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D7B"
    },
    "318": {
      "fn": "ShapeShiftDAORouter.deposit",
      "jump": "i",
      "offset": [7321, 7571],
      "op": "JUMP",
      "path": "0"
    },
    "319": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "JUMPDEST",
      "path": "0"
    },
    "320": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CD"
    },
    "323": {
      "fn": "ShapeShiftDAORouter.deposit",
      "jump": "i",
      "offset": [7321, 7571],
      "op": "JUMP",
      "path": "0"
    },
    "324": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "JUMPDEST",
      "path": "0"
    },
    "325": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "327": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "MLOAD",
      "path": "0"
    },
    "328": {
      "op": "SWAP1"
    },
    "329": {
      "op": "DUP2"
    },
    "330": {
      "op": "MSTORE"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "333": {
      "op": "ADD"
    },
    "334": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "JUMPDEST",
      "path": "0"
    },
    "335": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "337": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "MLOAD",
      "path": "0"
    },
    "338": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "DUP1",
      "path": "0"
    },
    "339": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "SWAP2",
      "path": "0"
    },
    "340": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "SUB",
      "path": "0"
    },
    "341": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "SWAP1",
      "path": "0"
    },
    "342": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "RETURN",
      "path": "0"
    },
    "343": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "JUMPDEST",
      "path": "0"
    },
    "344": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "347": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "PUSH2",
      "path": "0",
      "value": "0x165"
    },
    "350": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "351": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "353": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC1"
    },
    "356": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [3009, 3207],
      "op": "JUMP",
      "path": "0"
    },
    "357": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "JUMPDEST",
      "path": "0"
    },
    "358": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E5"
    },
    "361": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [3009, 3207],
      "op": "JUMP",
      "path": "0"
    },
    "362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPDEST",
      "path": "2"
    },
    "363": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172"
    },
    "366": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "PUSH2",
      "path": "2",
      "value": "0x370"
    },
    "369": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1668, 1769],
      "op": "JUMP",
      "path": "2"
    },
    "370": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPDEST",
      "path": "2"
    },
    "371": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "STOP",
      "path": "2"
    },
    "372": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12266, 12680],
      "op": "JUMPDEST",
      "path": "0"
    },
    "373": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12266, 12680],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "376": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12266, 12680],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182"
    },
    "379": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12266, 12680],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "380": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12266, 12680],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "382": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12266, 12680],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DFA"
    },
    "385": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "jump": "i",
      "offset": [12266, 12680],
      "op": "JUMP",
      "path": "0"
    },
    "386": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12266, 12680],
      "op": "JUMPDEST",
      "path": "0"
    },
    "387": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12266, 12680],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AF"
    },
    "390": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "jump": "i",
      "offset": [12266, 12680],
      "op": "JUMP",
      "path": "0"
    },
    "391": {
      "offset": [719, 746],
      "op": "JUMPDEST",
      "path": "0"
    },
    "392": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [719, 746],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "394": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [719, 746],
      "op": "SLOAD",
      "path": "0"
    },
    "395": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [719, 746],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19A"
    },
    "398": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [719, 746],
      "op": "SWAP1",
      "path": "0"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "offset": [719, 746],
      "op": "AND",
      "path": "0"
    },
    "408": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [719, 746],
      "op": "DUP2",
      "path": "0"
    },
    "409": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [719, 746],
      "op": "JUMP",
      "path": "0"
    },
    "410": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [719, 746],
      "op": "JUMPDEST",
      "path": "0"
    },
    "411": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [719, 746],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "413": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [719, 746],
      "op": "MLOAD",
      "path": "0"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "420": {
      "op": "SHL"
    },
    "421": {
      "op": "SUB"
    },
    "422": {
      "op": "SWAP1"
    },
    "423": {
      "op": "SWAP2"
    },
    "424": {
      "op": "AND"
    },
    "425": {
      "op": "DUP2"
    },
    "426": {
      "op": "MSTORE"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "429": {
      "op": "ADD"
    },
    "430": {
      "offset": [719, 746],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E"
    },
    "433": {
      "op": "JUMP"
    },
    "434": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2314, 2488],
      "op": "JUMPDEST",
      "path": "0"
    },
    "435": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2314, 2488],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19A"
    },
    "438": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2314, 2488],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "441": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2314, 2488],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "442": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2314, 2488],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "444": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2314, 2488],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "447": {
      "fn": "ShapeShiftDAORouter.vaults",
      "jump": "i",
      "offset": [2314, 2488],
      "op": "JUMP",
      "path": "0"
    },
    "448": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2314, 2488],
      "op": "JUMPDEST",
      "path": "0"
    },
    "449": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2314, 2488],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C9"
    },
    "452": {
      "fn": "ShapeShiftDAORouter.vaults",
      "jump": "i",
      "offset": [2314, 2488],
      "op": "JUMP",
      "path": "0"
    },
    "453": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "JUMPDEST",
      "path": "0"
    },
    "454": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "457": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "460": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "461": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "463": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E77"
    },
    "466": {
      "fn": "ShapeShiftDAORouter.deposit",
      "jump": "i",
      "offset": [6313, 6637],
      "op": "JUMP",
      "path": "0"
    },
    "467": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "JUMPDEST",
      "path": "0"
    },
    "468": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43F"
    },
    "471": {
      "fn": "ShapeShiftDAORouter.deposit",
      "jump": "i",
      "offset": [6313, 6637],
      "op": "JUMP",
      "path": "0"
    },
    "472": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMPDEST",
      "path": "2"
    },
    "473": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "475": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "2",
      "statement": 0
    },
    "476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "482": {
      "op": "SHL"
    },
    "483": {
      "op": "SUB"
    },
    "484": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "2"
    },
    "485": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19A"
    },
    "488": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMP",
      "path": "2"
    },
    "489": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "JUMPDEST",
      "path": "0"
    },
    "490": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "493": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F7"
    },
    "496": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "497": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "499": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D7B"
    },
    "502": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [3791, 4483],
      "op": "JUMP",
      "path": "0"
    },
    "503": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "JUMPDEST",
      "path": "0"
    },
    "504": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45A"
    },
    "507": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [3791, 4483],
      "op": "JUMP",
      "path": "0"
    },
    "508": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1664, 2187],
      "op": "JUMPDEST",
      "path": "0"
    },
    "509": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1664, 2187],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172"
    },
    "512": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1664, 2187],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20A"
    },
    "515": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1664, 2187],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "516": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1664, 2187],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "518": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1664, 2187],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB8"
    },
    "521": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "jump": "i",
      "offset": [1664, 2187],
      "op": "JUMP",
      "path": "0"
    },
    "522": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1664, 2187],
      "op": "JUMPDEST",
      "path": "0"
    },
    "523": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1664, 2187],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6ED"
    },
    "526": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "jump": "i",
      "offset": [1664, 2187],
      "op": "JUMP",
      "path": "0"
    },
    "527": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17023, 17184],
      "op": "JUMPDEST",
      "path": "0"
    },
    "528": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17023, 17184],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "531": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17023, 17184],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "534": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17023, 17184],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "535": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17023, 17184],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "537": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17023, 17184],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4B"
    },
    "540": {
      "fn": "ShapeShiftDAORouter.migrate",
      "jump": "i",
      "offset": [17023, 17184],
      "op": "JUMP",
      "path": "0"
    },
    "541": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17023, 17184],
      "op": "JUMPDEST",
      "path": "0"
    },
    "542": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17023, 17184],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85E"
    },
    "545": {
      "fn": "ShapeShiftDAORouter.migrate",
      "jump": "i",
      "offset": [17023, 17184],
      "op": "JUMP",
      "path": "0"
    },
    "546": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16290, 16553],
      "op": "JUMPDEST",
      "path": "0"
    },
    "547": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16290, 16553],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "550": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16290, 16553],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230"
    },
    "553": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16290, 16553],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "554": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16290, 16553],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "556": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16290, 16553],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB8"
    },
    "559": {
      "fn": "ShapeShiftDAORouter.migrate",
      "jump": "i",
      "offset": [16290, 16553],
      "op": "JUMP",
      "path": "0"
    },
    "560": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16290, 16553],
      "op": "JUMPDEST",
      "path": "0"
    },
    "561": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16290, 16553],
      "op": "PUSH2",
      "path": "0",
      "value": "0x870"
    },
    "564": {
      "fn": "ShapeShiftDAORouter.migrate",
      "jump": "i",
      "offset": [16290, 16553],
      "op": "JUMP",
      "path": "0"
    },
    "565": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11138, 11483],
      "op": "JUMPDEST",
      "path": "0"
    },
    "566": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11138, 11483],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "569": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11138, 11483],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "572": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11138, 11483],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "573": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11138, 11483],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "575": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11138, 11483],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E77"
    },
    "578": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "jump": "i",
      "offset": [11138, 11483],
      "op": "JUMP",
      "path": "0"
    },
    "579": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11138, 11483],
      "op": "JUMPDEST",
      "path": "0"
    },
    "580": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11138, 11483],
      "op": "PUSH2",
      "path": "0",
      "value": "0x884"
    },
    "583": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "jump": "i",
      "offset": [11138, 11483],
      "op": "JUMP",
      "path": "0"
    },
    "584": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "JUMPDEST",
      "path": "0"
    },
    "585": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "588": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256"
    },
    "591": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "592": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "594": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ED5"
    },
    "597": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [5194, 5724],
      "op": "JUMP",
      "path": "0"
    },
    "598": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "JUMPDEST",
      "path": "0"
    },
    "599": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "PUSH2",
      "path": "0",
      "value": "0x897"
    },
    "602": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [5194, 5724],
      "op": "JUMP",
      "path": "0"
    },
    "603": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2494, 2614],
      "op": "JUMPDEST",
      "path": "0"
    },
    "604": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2494, 2614],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19A"
    },
    "607": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2494, 2614],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "610": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2494, 2614],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "611": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2494, 2614],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "613": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2494, 2614],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB8"
    },
    "616": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "jump": "i",
      "offset": [2494, 2614],
      "op": "JUMP",
      "path": "0"
    },
    "617": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2494, 2614],
      "op": "JUMPDEST",
      "path": "0"
    },
    "618": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2494, 2614],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA39"
    },
    "621": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "jump": "i",
      "offset": [2494, 2614],
      "op": "JUMP",
      "path": "0"
    },
    "622": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17844, 18202],
      "op": "JUMPDEST",
      "path": "0"
    },
    "623": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17844, 18202],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "626": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17844, 18202],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27C"
    },
    "629": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17844, 18202],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "630": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17844, 18202],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "632": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17844, 18202],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0A"
    },
    "635": {
      "fn": "ShapeShiftDAORouter.migrate",
      "jump": "i",
      "offset": [17844, 18202],
      "op": "JUMP",
      "path": "0"
    },
    "636": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17844, 18202],
      "op": "JUMPDEST",
      "path": "0"
    },
    "637": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17844, 18202],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA8"
    },
    "640": {
      "fn": "ShapeShiftDAORouter.migrate",
      "jump": "i",
      "offset": [17844, 18202],
      "op": "JUMP",
      "path": "0"
    },
    "641": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "2"
    },
    "642": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172"
    },
    "645": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28F"
    },
    "648": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "649": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "651": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB8"
    },
    "654": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "2"
    },
    "655": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "2"
    },
    "656": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB7"
    },
    "659": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "2"
    },
    "660": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4682, 4814],
      "op": "JUMPDEST",
      "path": "0"
    },
    "661": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4682, 4814],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "664": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4682, 4814],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A2"
    },
    "667": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4682, 4814],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "668": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4682, 4814],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "670": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4682, 4814],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB8"
    },
    "673": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [4682, 4814],
      "op": "JUMP",
      "path": "0"
    },
    "674": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4682, 4814],
      "op": "JUMPDEST",
      "path": "0"
    },
    "675": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4682, 4814],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB52"
    },
    "678": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [4682, 4814],
      "op": "JUMP",
      "path": "0"
    },
    "679": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10208, 10540],
      "op": "JUMPDEST",
      "path": "0"
    },
    "680": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10208, 10540],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "683": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10208, 10540],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B5"
    },
    "686": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10208, 10540],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "687": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10208, 10540],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "689": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10208, 10540],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC1"
    },
    "692": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "jump": "i",
      "offset": [10208, 10540],
      "op": "JUMP",
      "path": "0"
    },
    "693": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10208, 10540],
      "op": "JUMPDEST",
      "path": "0"
    },
    "694": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10208, 10540],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBCD"
    },
    "697": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "jump": "i",
      "offset": [10208, 10540],
      "op": "JUMP",
      "path": "0"
    },
    "698": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2193, 2308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "699": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2193, 2308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "702": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2193, 2308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "705": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2193, 2308],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "706": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2193, 2308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "708": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2193, 2308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB8"
    },
    "711": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "jump": "i",
      "offset": [2193, 2308],
      "op": "JUMP",
      "path": "0"
    },
    "712": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2193, 2308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "713": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2193, 2308],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE2"
    },
    "716": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "jump": "i",
      "offset": [2193, 2308],
      "op": "JUMP",
      "path": "0"
    },
    "717": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "JUMPDEST",
      "path": "0"
    },
    "718": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7461, 7468],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "720": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7499, 7564],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x2DC"
    },
    "723": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7515, 7520],
      "op": "DUP6",
      "path": "0"
    },
    "724": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6",
      "statement": 2
    },
    "725": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7537, 7546],
      "op": "DUP7",
      "path": "0"
    },
    "726": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7548, 7554],
      "op": "DUP7",
      "path": "0"
    },
    "727": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7556, 7563],
      "op": "DUP7",
      "path": "0"
    },
    "728": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7499, 7507],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC15"
    },
    "731": {
      "fn": "ShapeShiftDAORouter.deposit",
      "jump": "i",
      "offset": [7499, 7564],
      "op": "JUMP",
      "path": "0"
    },
    "732": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7499, 7564],
      "op": "JUMPDEST",
      "path": "0"
    },
    "733": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7480, 7564],
      "op": "SWAP6",
      "path": "0"
    },
    "734": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [7321, 7571],
      "op": "SWAP5",
      "path": "0"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "op": "POP"
    },
    "738": {
      "op": "POP"
    },
    "739": {
      "op": "POP"
    },
    "740": {
      "fn": "ShapeShiftDAORouter.deposit",
      "jump": "o",
      "offset": [7321, 7571],
      "op": "JUMP",
      "path": "0"
    },
    "741": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "JUMPDEST",
      "path": "0"
    },
    "742": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "744": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "MLOAD",
      "path": "0"
    },
    "745": {
      "op": "PUSH4",
      "value": "0x900AB8B5"
    },
    "750": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "752": {
      "op": "SHL"
    },
    "753": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP2",
      "path": "0"
    },
    "754": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "MSTORE",
      "path": "0"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "op": "DUP1"
    },
    "764": {
      "op": "DUP5"
    },
    "765": {
      "op": "AND"
    },
    "766": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "768": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP4",
      "path": "0"
    },
    "769": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "ADD",
      "path": "0"
    },
    "770": {
      "op": "MSTORE"
    },
    "771": {
      "op": "DUP3"
    },
    "772": {
      "op": "AND"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "775": {
      "op": "DUP3"
    },
    "776": {
      "op": "ADD"
    },
    "777": {
      "op": "MSTORE"
    },
    "778": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3115, 3122],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "782": {
      "op": "DUP3"
    },
    "783": {
      "op": "ADD"
    },
    "784": {
      "op": "DUP2"
    },
    "785": {
      "op": "SWAP1"
    },
    "786": {
      "op": "MSTORE"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "789": {
      "op": "NOT"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "792": {
      "op": "DUP4"
    },
    "793": {
      "op": "ADD"
    },
    "794": {
      "op": "MSTORE"
    },
    "795": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3115, 3122],
      "op": "SWAP1",
      "path": "0"
    },
    "796": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3149],
      "op": "ADDRESS",
      "path": "0"
    },
    "797": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3149],
      "op": "SWAP1",
      "path": "0"
    },
    "798": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3167],
      "op": "PUSH4",
      "path": "0",
      "value": "0x900AB8B5"
    },
    "803": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3167],
      "op": "SWAP1",
      "path": "0"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "806": {
      "op": "ADD"
    },
    "807": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "809": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "811": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "MLOAD",
      "path": "0"
    },
    "812": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP1",
      "path": "0"
    },
    "813": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP4",
      "path": "0"
    },
    "814": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "SUB",
      "path": "0"
    },
    "815": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP2",
      "path": "0"
    },
    "816": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP7",
      "path": "0"
    },
    "817": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "GAS",
      "path": "0"
    },
    "818": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "STATICCALL",
      "path": "0"
    },
    "819": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "ISZERO",
      "path": "0"
    },
    "820": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP1",
      "path": "0"
    },
    "821": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "ISZERO",
      "path": "0"
    },
    "822": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH2",
      "path": "0",
      "value": "0x343"
    },
    "825": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "JUMPI",
      "path": "0"
    },
    "826": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "827": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "829": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP1",
      "path": "0"
    },
    "830": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "831": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "832": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "834": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "REVERT",
      "path": "0"
    },
    "835": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "JUMPDEST",
      "path": "0"
    },
    "836": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "POP",
      "path": "0"
    },
    "837": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "POP",
      "path": "0"
    },
    "838": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "POP",
      "path": "0"
    },
    "839": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "POP",
      "path": "0"
    },
    "840": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "842": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "MLOAD",
      "path": "0"
    },
    "843": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "844": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "846": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "NOT",
      "path": "0"
    },
    "847": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "849": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP3",
      "path": "0"
    },
    "850": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "ADD",
      "path": "0"
    },
    "851": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "AND",
      "path": "0"
    },
    "852": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP3",
      "path": "0"
    },
    "853": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "ADD",
      "path": "0"
    },
    "854": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP1",
      "path": "0"
    },
    "855": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "857": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "MSTORE",
      "path": "0"
    },
    "858": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "POP",
      "path": "0"
    },
    "859": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "DUP2",
      "path": "0"
    },
    "860": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "ADD",
      "path": "0"
    },
    "861": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "SWAP1",
      "path": "0"
    },
    "862": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH2",
      "path": "0",
      "value": "0x367"
    },
    "865": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "SWAP2",
      "path": "0"
    },
    "866": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "SWAP1",
      "path": "0"
    },
    "867": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "870": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [3145, 3200],
      "op": "JUMP",
      "path": "0"
    },
    "871": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3145, 3200],
      "op": "JUMPDEST",
      "path": "0"
    },
    "872": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3138, 3200],
      "op": "SWAP1",
      "path": "0"
    },
    "873": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3138, 3200],
      "op": "POP",
      "path": "0"
    },
    "874": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "JUMPDEST",
      "path": "0"
    },
    "875": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "SWAP3",
      "path": "0"
    },
    "876": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "SWAP2",
      "path": "0"
    },
    "877": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "POP",
      "path": "0"
    },
    "878": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3009, 3207],
      "op": "POP",
      "path": "0"
    },
    "879": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "o",
      "offset": [3009, 3207],
      "op": "JUMP",
      "path": "0"
    },
    "880": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPDEST",
      "path": "2"
    },
    "881": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "883": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "2"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "890": {
      "op": "SHL"
    },
    "891": {
      "op": "SUB"
    },
    "892": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "2"
    },
    "893": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6"
    },
    "894": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "2"
    },
    "895": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A3"
    },
    "898": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "2"
    },
    "899": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "901": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "2"
    },
    "902": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "2"
    },
    "910": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "2"
    },
    "911": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "913": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "2"
    },
    "914": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A"
    },
    "917": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "2"
    },
    "918": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F5E"
    },
    "921": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "2"
    },
    "922": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "2"
    },
    "923": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "925": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "2"
    },
    "926": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "DUP1",
      "path": "2"
    },
    "927": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP2",
      "path": "2"
    },
    "928": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SUB",
      "path": "2"
    },
    "929": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "2"
    },
    "930": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "931": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "2"
    },
    "932": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1762],
      "op": "PUSH2",
      "path": "2",
      "statement": 4,
      "value": "0x3AD"
    },
    "935": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1759, 1760],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "937": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1750],
      "op": "PUSH2",
      "path": "2",
      "value": "0x102B"
    },
    "940": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1732, 1762],
      "op": "JUMP",
      "path": "2"
    },
    "941": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1762],
      "op": "JUMPDEST",
      "path": "2"
    },
    "942": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [1668, 1769],
      "op": "JUMP",
      "path": "2"
    },
    "943": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12266, 12680],
      "op": "JUMPDEST",
      "path": "0"
    },
    "944": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12441, 12448],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "946": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12479, 12673],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x3BF"
    },
    "949": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12513, 12518],
      "op": "DUP7",
      "path": "0"
    },
    "950": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6"
    },
    "951": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12567, 12576],
      "op": "DUP8",
      "path": "0"
    },
    "952": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12594, 12600],
      "op": "DUP8",
      "path": "0"
    },
    "953": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12618, 12630],
      "op": "DUP8",
      "path": "0"
    },
    "954": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12648, 12659],
      "op": "DUP8",
      "path": "0"
    },
    "955": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12479, 12488],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107B"
    },
    "958": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "jump": "i",
      "offset": [12479, 12673],
      "op": "JUMP",
      "path": "0"
    },
    "959": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12479, 12673],
      "op": "JUMPDEST",
      "path": "0"
    },
    "960": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12460, 12673],
      "op": "SWAP7",
      "path": "0"
    },
    "961": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [12266, 12680],
      "op": "SWAP6",
      "path": "0"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "op": "POP"
    },
    "964": {
      "op": "POP"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "op": "POP"
    },
    "967": {
      "op": "POP"
    },
    "968": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "jump": "o",
      "offset": [12266, 12680],
      "op": "JUMP",
      "path": "0"
    },
    "969": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2314, 2488],
      "op": "JUMPDEST",
      "path": "0"
    },
    "970": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2453],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "972": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2453],
      "op": "SLOAD",
      "path": "0"
    },
    "973": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "975": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "MLOAD",
      "path": "0"
    },
    "976": {
      "op": "PUSH4",
      "value": "0x3DDFE34F"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP2",
      "path": "0"
    },
    "985": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "MSTORE",
      "path": "0"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "op": "SUB"
    },
    "994": {
      "op": "DUP5"
    },
    "995": {
      "op": "DUP2"
    },
    "996": {
      "op": "AND"
    },
    "997": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "999": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP4",
      "path": "0"
    },
    "1000": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "ADD",
      "path": "0"
    },
    "1001": {
      "op": "MSTORE"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1004": {
      "op": "DUP3"
    },
    "1005": {
      "op": "ADD"
    },
    "1006": {
      "op": "DUP5"
    },
    "1007": {
      "op": "SWAP1"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2414, 2422],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1011": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2414, 2422],
      "op": "SWAP3",
      "path": "0"
    },
    "1012": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2453],
      "op": "AND",
      "path": "0"
    },
    "1013": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2453],
      "op": "SWAP1",
      "path": "0"
    },
    "1014": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2460],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BBFC69E"
    },
    "1019": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2460],
      "op": "SWAP1",
      "path": "0"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1022": {
      "op": "ADD"
    },
    "1023": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1025": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1027": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "MLOAD",
      "path": "0"
    },
    "1028": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP1",
      "path": "0"
    },
    "1029": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP4",
      "path": "0"
    },
    "1030": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "SUB",
      "path": "0"
    },
    "1031": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP2",
      "path": "0"
    },
    "1032": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP7",
      "path": "0"
    },
    "1033": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "GAS",
      "path": "0"
    },
    "1034": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "STATICCALL",
      "path": "0"
    },
    "1035": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "ISZERO",
      "path": "0"
    },
    "1036": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP1",
      "path": "0"
    },
    "1037": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "ISZERO",
      "path": "0"
    },
    "1038": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41B"
    },
    "1041": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "JUMPI",
      "path": "0"
    },
    "1042": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1043": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1045": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP1",
      "path": "0"
    },
    "1046": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1047": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1048": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1050": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "REVERT",
      "path": "0"
    },
    "1051": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1052": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "POP",
      "path": "0"
    },
    "1053": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "POP",
      "path": "0"
    },
    "1054": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "POP",
      "path": "0"
    },
    "1055": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "POP",
      "path": "0"
    },
    "1056": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1058": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "MLOAD",
      "path": "0"
    },
    "1059": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1060": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1062": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "NOT",
      "path": "0"
    },
    "1063": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1065": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP3",
      "path": "0"
    },
    "1066": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "ADD",
      "path": "0"
    },
    "1067": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "AND",
      "path": "0"
    },
    "1068": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP3",
      "path": "0"
    },
    "1069": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "ADD",
      "path": "0"
    },
    "1070": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP1",
      "path": "0"
    },
    "1071": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1073": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "MSTORE",
      "path": "0"
    },
    "1074": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "POP",
      "path": "0"
    },
    "1075": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "DUP2",
      "path": "0"
    },
    "1076": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "ADD",
      "path": "0"
    },
    "1077": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "SWAP1",
      "path": "0"
    },
    "1078": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH2",
      "path": "0",
      "value": "0x367"
    },
    "1081": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "SWAP2",
      "path": "0"
    },
    "1082": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "SWAP1",
      "path": "0"
    },
    "1083": {
      "fn": "ShapeShiftDAORouter.vaults",
      "offset": [2445, 2481],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F93"
    },
    "1086": {
      "fn": "ShapeShiftDAORouter.vaults",
      "jump": "i",
      "offset": [2445, 2481],
      "op": "JUMP",
      "path": "0"
    },
    "1087": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1088": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6428, 6435],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1090": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6466, 6630],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x450"
    },
    "1093": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6499, 6504],
      "op": "DUP5",
      "path": "0"
    },
    "1094": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6"
    },
    "1095": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6553, 6562],
      "op": "DUP6",
      "path": "0"
    },
    "1096": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6580, 6586],
      "op": "DUP6",
      "path": "0"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1099": {
      "op": "NOT"
    },
    "1100": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6466, 6474],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC15"
    },
    "1103": {
      "fn": "ShapeShiftDAORouter.deposit",
      "jump": "i",
      "offset": [6466, 6630],
      "op": "JUMP",
      "path": "0"
    },
    "1104": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6466, 6630],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1105": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6447, 6630],
      "op": "SWAP1",
      "path": "0"
    },
    "1106": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6447, 6630],
      "op": "POP",
      "path": "0"
    },
    "1107": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1108": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "SWAP4",
      "path": "0"
    },
    "1109": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "SWAP3",
      "path": "0"
    },
    "1110": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "POP",
      "path": "0"
    },
    "1111": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "POP",
      "path": "0"
    },
    "1112": {
      "fn": "ShapeShiftDAORouter.deposit",
      "offset": [6313, 6637],
      "op": "POP",
      "path": "0"
    },
    "1113": {
      "fn": "ShapeShiftDAORouter.deposit",
      "jump": "o",
      "offset": [6313, 6637],
      "op": "JUMP",
      "path": "0"
    },
    "1114": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1115": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3954, 3969],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1117": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4005, 4016],
      "op": "DUP2",
      "path": "0",
      "statement": 8
    },
    "1118": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3989, 4001],
      "op": "DUP4",
      "path": "0"
    },
    "1119": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3989, 4016],
      "op": "GT",
      "path": "0"
    },
    "1120": {
      "branch": 67,
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3989, 4016],
      "op": "ISZERO",
      "path": "0"
    },
    "1121": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3981, 4017],
      "op": "PUSH2",
      "path": "0",
      "value": "0x469"
    },
    "1124": {
      "branch": 67,
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3981, 4017],
      "op": "JUMPI",
      "path": "0"
    },
    "1125": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3981, 4017],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1127": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3981, 4017],
      "op": "DUP1",
      "path": "0"
    },
    "1128": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3981, 4017],
      "op": "REVERT",
      "path": "0"
    },
    "1129": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3981, 4017],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1130": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4051, 4062],
      "op": "DUP2",
      "path": "0"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1133": {
      "op": "NOT"
    },
    "1134": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4076, 4104],
      "op": "DUP2",
      "path": "0"
    },
    "1135": {
      "branch": 68,
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4076, 4104],
      "op": "EQ",
      "path": "0"
    },
    "1136": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4072, 4171],
      "op": "ISZERO",
      "path": "0"
    },
    "1137": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4072, 4171],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F0"
    },
    "1140": {
      "branch": 68,
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4072, 4171],
      "op": "JUMPI",
      "path": "0"
    },
    "1141": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4170, 4171],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x1"
    },
    "1143": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4141],
      "op": "DUP1",
      "path": "0"
    },
    "1144": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4141],
      "op": "SLOAD",
      "path": "0"
    },
    "1145": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1147": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "MLOAD",
      "path": "0"
    },
    "1148": {
      "op": "PUSH4",
      "value": "0xF9C7BBA5"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1155": {
      "op": "SHL"
    },
    "1156": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP2",
      "path": "0"
    },
    "1157": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "MSTORE",
      "path": "0"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "op": "SUB"
    },
    "1166": {
      "op": "DUP10"
    },
    "1167": {
      "op": "DUP2"
    },
    "1168": {
      "op": "AND"
    },
    "1169": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1171": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP4",
      "path": "0"
    },
    "1172": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "ADD",
      "path": "0"
    },
    "1173": {
      "op": "MSTORE"
    },
    "1174": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4141],
      "op": "SWAP1",
      "path": "0"
    },
    "1175": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4141],
      "op": "SWAP2",
      "path": "0"
    },
    "1176": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4141],
      "op": "AND",
      "path": "0"
    },
    "1177": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4141],
      "op": "SWAP1",
      "path": "0"
    },
    "1178": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4151],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF9C7BBA5"
    },
    "1183": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4151],
      "op": "SWAP1",
      "path": "0"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1186": {
      "op": "ADD"
    },
    "1187": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1189": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1191": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "MLOAD",
      "path": "0"
    },
    "1192": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP1",
      "path": "0"
    },
    "1193": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP4",
      "path": "0"
    },
    "1194": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "SUB",
      "path": "0"
    },
    "1195": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP2",
      "path": "0"
    },
    "1196": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP7",
      "path": "0"
    },
    "1197": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "GAS",
      "path": "0"
    },
    "1198": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "STATICCALL",
      "path": "0"
    },
    "1199": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "ISZERO",
      "path": "0"
    },
    "1200": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP1",
      "path": "0"
    },
    "1201": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "ISZERO",
      "path": "0"
    },
    "1202": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BF"
    },
    "1205": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "JUMPI",
      "path": "0"
    },
    "1206": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1207": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1209": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP1",
      "path": "0"
    },
    "1210": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1211": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1212": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1214": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "REVERT",
      "path": "0"
    },
    "1215": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1216": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "POP",
      "path": "0"
    },
    "1217": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "POP",
      "path": "0"
    },
    "1218": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "POP",
      "path": "0"
    },
    "1219": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "POP",
      "path": "0"
    },
    "1220": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1222": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "MLOAD",
      "path": "0"
    },
    "1223": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1224": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1226": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "NOT",
      "path": "0"
    },
    "1227": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1229": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP3",
      "path": "0"
    },
    "1230": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "ADD",
      "path": "0"
    },
    "1231": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "AND",
      "path": "0"
    },
    "1232": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP3",
      "path": "0"
    },
    "1233": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "ADD",
      "path": "0"
    },
    "1234": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP1",
      "path": "0"
    },
    "1235": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1237": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "MSTORE",
      "path": "0"
    },
    "1238": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "POP",
      "path": "0"
    },
    "1239": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "DUP2",
      "path": "0"
    },
    "1240": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "ADD",
      "path": "0"
    },
    "1241": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "SWAP1",
      "path": "0"
    },
    "1242": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E3"
    },
    "1245": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "SWAP2",
      "path": "0"
    },
    "1246": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "SWAP1",
      "path": "0"
    },
    "1247": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "1250": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4133, 4167],
      "op": "JUMP",
      "path": "0"
    },
    "1251": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4167],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1252": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4171],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4ED"
    },
    "1255": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4171],
      "op": "SWAP2",
      "path": "0"
    },
    "1256": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4171],
      "op": "SWAP1",
      "path": "0"
    },
    "1257": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4171],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "1260": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4133, 4171],
      "op": "JUMP",
      "path": "0"
    },
    "1261": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4133, 4171],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1262": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4118, 4171],
      "op": "SWAP1",
      "path": "0"
    },
    "1263": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4118, 4171],
      "op": "POP",
      "path": "0"
    },
    "1264": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4072, 4171],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1265": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4199, 4211],
      "op": "DUP4",
      "path": "0"
    },
    "1266": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4182, 4477],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1267": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4218, 4230],
      "op": "DUP2",
      "path": "0"
    },
    "1268": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4213, 4214],
      "op": "DUP2",
      "path": "0"
    },
    "1269": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4213, 4230],
      "op": "GT",
      "path": "0"
    },
    "1270": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4182, 4477],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E3"
    },
    "1273": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4182, 4477],
      "op": "JUMPI",
      "path": "0"
    },
    "1274": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1276": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4276],
      "op": "SLOAD",
      "path": "0"
    },
    "1277": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1279": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "MLOAD",
      "path": "0"
    },
    "1280": {
      "op": "PUSH4",
      "value": "0x3DDFE34F"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1287": {
      "op": "SHL"
    },
    "1288": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP2",
      "path": "0"
    },
    "1289": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "MSTORE",
      "path": "0"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1296": {
      "op": "SHL"
    },
    "1297": {
      "op": "SUB"
    },
    "1298": {
      "op": "DUP10"
    },
    "1299": {
      "op": "DUP2"
    },
    "1300": {
      "op": "AND"
    },
    "1301": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1303": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP4",
      "path": "0"
    },
    "1304": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "ADD",
      "path": "0"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1308": {
      "op": "DUP3"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "DUP5"
    },
    "1311": {
      "op": "SWAP1"
    },
    "1312": {
      "op": "MSTORE"
    },
    "1313": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4251, 4265],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1315": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4251, 4265],
      "op": "SWAP3",
      "path": "0"
    },
    "1316": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4276],
      "op": "AND",
      "path": "0"
    },
    "1317": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4276],
      "op": "SWAP1",
      "path": "0"
    },
    "1318": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4283],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BBFC69E"
    },
    "1323": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4283],
      "op": "SWAP1",
      "path": "0"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1326": {
      "op": "ADD"
    },
    "1327": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1329": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1331": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "MLOAD",
      "path": "0"
    },
    "1332": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP1",
      "path": "0"
    },
    "1333": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP4",
      "path": "0"
    },
    "1334": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "SUB",
      "path": "0"
    },
    "1335": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP2",
      "path": "0"
    },
    "1336": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP7",
      "path": "0"
    },
    "1337": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "GAS",
      "path": "0"
    },
    "1338": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "STATICCALL",
      "path": "0"
    },
    "1339": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "ISZERO",
      "path": "0"
    },
    "1340": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP1",
      "path": "0"
    },
    "1341": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "ISZERO",
      "path": "0"
    },
    "1342": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54B"
    },
    "1345": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "JUMPI",
      "path": "0"
    },
    "1346": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1347": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1349": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP1",
      "path": "0"
    },
    "1350": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1351": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1352": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1354": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "REVERT",
      "path": "0"
    },
    "1355": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1356": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "POP",
      "path": "0"
    },
    "1357": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "POP",
      "path": "0"
    },
    "1358": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "POP",
      "path": "0"
    },
    "1359": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "POP",
      "path": "0"
    },
    "1360": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1362": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "MLOAD",
      "path": "0"
    },
    "1363": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1364": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1366": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "NOT",
      "path": "0"
    },
    "1367": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1369": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP3",
      "path": "0"
    },
    "1370": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "ADD",
      "path": "0"
    },
    "1371": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "AND",
      "path": "0"
    },
    "1372": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP3",
      "path": "0"
    },
    "1373": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "ADD",
      "path": "0"
    },
    "1374": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP1",
      "path": "0"
    },
    "1375": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1377": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "MSTORE",
      "path": "0"
    },
    "1378": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "POP",
      "path": "0"
    },
    "1379": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "DUP2",
      "path": "0"
    },
    "1380": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "ADD",
      "path": "0"
    },
    "1381": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "SWAP1",
      "path": "0"
    },
    "1382": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56F"
    },
    "1385": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "SWAP2",
      "path": "0"
    },
    "1386": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "SWAP1",
      "path": "0"
    },
    "1387": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F93"
    },
    "1390": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4268, 4293],
      "op": "JUMP",
      "path": "0"
    },
    "1391": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4268, 4293],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1392": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4251, 4293],
      "op": "SWAP1",
      "path": "0"
    },
    "1393": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4251, 4293],
      "op": "POP",
      "path": "0"
    },
    "1394": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4307, 4332],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1396": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4413],
      "op": "DUP2",
      "path": "0"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1403": {
      "op": "SHL"
    },
    "1404": {
      "op": "SUB"
    },
    "1405": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4422],
      "op": "AND",
      "path": "0"
    },
    "1406": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4422],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "1411": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1413": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "MLOAD",
      "path": "0"
    },
    "1414": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP2",
      "path": "0"
    },
    "1415": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1420": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "AND",
      "path": "0"
    },
    "1421": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1423": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "SHL",
      "path": "0"
    },
    "1424": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP2",
      "path": "0"
    },
    "1425": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "MSTORE",
      "path": "0"
    },
    "1426": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1428": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "ADD",
      "path": "0"
    },
    "1429": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1431": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1433": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "MLOAD",
      "path": "0"
    },
    "1434": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP1",
      "path": "0"
    },
    "1435": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP4",
      "path": "0"
    },
    "1436": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "SUB",
      "path": "0"
    },
    "1437": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP2",
      "path": "0"
    },
    "1438": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP7",
      "path": "0"
    },
    "1439": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "GAS",
      "path": "0"
    },
    "1440": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "STATICCALL",
      "path": "0"
    },
    "1441": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "ISZERO",
      "path": "0"
    },
    "1442": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP1",
      "path": "0"
    },
    "1443": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "ISZERO",
      "path": "0"
    },
    "1444": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B1"
    },
    "1447": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "JUMPI",
      "path": "0"
    },
    "1448": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1449": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1451": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP1",
      "path": "0"
    },
    "1452": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1453": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1454": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1456": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "REVERT",
      "path": "0"
    },
    "1457": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1458": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "POP",
      "path": "0"
    },
    "1459": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "POP",
      "path": "0"
    },
    "1460": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "POP",
      "path": "0"
    },
    "1461": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "POP",
      "path": "0"
    },
    "1462": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1464": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "MLOAD",
      "path": "0"
    },
    "1465": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1466": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1468": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "NOT",
      "path": "0"
    },
    "1469": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1471": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP3",
      "path": "0"
    },
    "1472": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "ADD",
      "path": "0"
    },
    "1473": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "AND",
      "path": "0"
    },
    "1474": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP3",
      "path": "0"
    },
    "1475": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "ADD",
      "path": "0"
    },
    "1476": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP1",
      "path": "0"
    },
    "1477": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1479": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "MSTORE",
      "path": "0"
    },
    "1480": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "POP",
      "path": "0"
    },
    "1481": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "DUP2",
      "path": "0"
    },
    "1482": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "ADD",
      "path": "0"
    },
    "1483": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "SWAP1",
      "path": "0"
    },
    "1484": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D5"
    },
    "1487": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "SWAP2",
      "path": "0"
    },
    "1488": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "SWAP1",
      "path": "0"
    },
    "1489": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "1492": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4408, 4424],
      "op": "JUMP",
      "path": "0"
    },
    "1493": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4408, 4424],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1494": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4404, 4424],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E0"
    },
    "1497": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4404, 4424],
      "op": "SWAP1",
      "path": "0"
    },
    "1498": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4404, 4406],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1500": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4404, 4424],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C1"
    },
    "1503": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4404, 4424],
      "op": "JUMP",
      "path": "0"
    },
    "1504": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4404, 4424],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1505": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4384],
      "op": "DUP3",
      "path": "0"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1512": {
      "op": "SHL"
    },
    "1513": {
      "op": "SUB"
    },
    "1514": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4398],
      "op": "AND",
      "path": "0"
    },
    "1515": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4398],
      "op": "PUSH4",
      "path": "0",
      "value": "0x99530B06"
    },
    "1520": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1522": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "MLOAD",
      "path": "0"
    },
    "1523": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP2",
      "path": "0"
    },
    "1524": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1529": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "AND",
      "path": "0"
    },
    "1530": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1532": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "SHL",
      "path": "0"
    },
    "1533": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP2",
      "path": "0"
    },
    "1534": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "MSTORE",
      "path": "0"
    },
    "1535": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1537": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "ADD",
      "path": "0"
    },
    "1538": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1540": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1542": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "MLOAD",
      "path": "0"
    },
    "1543": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP1",
      "path": "0"
    },
    "1544": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP4",
      "path": "0"
    },
    "1545": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "SUB",
      "path": "0"
    },
    "1546": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP2",
      "path": "0"
    },
    "1547": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP7",
      "path": "0"
    },
    "1548": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "GAS",
      "path": "0"
    },
    "1549": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "STATICCALL",
      "path": "0"
    },
    "1550": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "ISZERO",
      "path": "0"
    },
    "1551": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP1",
      "path": "0"
    },
    "1552": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "ISZERO",
      "path": "0"
    },
    "1553": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61E"
    },
    "1556": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "JUMPI",
      "path": "0"
    },
    "1557": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1558": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1560": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP1",
      "path": "0"
    },
    "1561": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1562": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1563": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1565": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "REVERT",
      "path": "0"
    },
    "1566": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1567": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "POP",
      "path": "0"
    },
    "1568": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "POP",
      "path": "0"
    },
    "1569": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "POP",
      "path": "0"
    },
    "1570": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "POP",
      "path": "0"
    },
    "1571": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1573": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "MLOAD",
      "path": "0"
    },
    "1574": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1575": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1577": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "NOT",
      "path": "0"
    },
    "1578": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1580": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP3",
      "path": "0"
    },
    "1581": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "ADD",
      "path": "0"
    },
    "1582": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "AND",
      "path": "0"
    },
    "1583": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP3",
      "path": "0"
    },
    "1584": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "ADD",
      "path": "0"
    },
    "1585": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP1",
      "path": "0"
    },
    "1586": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1588": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "MSTORE",
      "path": "0"
    },
    "1589": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "POP",
      "path": "0"
    },
    "1590": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "DUP2",
      "path": "0"
    },
    "1591": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "ADD",
      "path": "0"
    },
    "1592": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "SWAP1",
      "path": "0"
    },
    "1593": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH2",
      "path": "0",
      "value": "0x642"
    },
    "1596": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "SWAP2",
      "path": "0"
    },
    "1597": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "SWAP1",
      "path": "0"
    },
    "1598": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "1601": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4379, 4400],
      "op": "JUMP",
      "path": "0"
    },
    "1602": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4379, 4400],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1603": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1605": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "MLOAD",
      "path": "0"
    },
    "1606": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1613": {
      "op": "SHL"
    },
    "1614": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP2",
      "path": "0"
    },
    "1615": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "MSTORE",
      "path": "0"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1622": {
      "op": "SHL"
    },
    "1623": {
      "op": "SUB"
    },
    "1624": {
      "op": "DUP12"
    },
    "1625": {
      "op": "DUP2"
    },
    "1626": {
      "op": "AND"
    },
    "1627": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1629": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP4",
      "path": "0"
    },
    "1630": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "ADD",
      "path": "0"
    },
    "1631": {
      "op": "MSTORE"
    },
    "1632": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4351],
      "op": "DUP6",
      "path": "0"
    },
    "1633": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4351],
      "op": "AND",
      "path": "0"
    },
    "1634": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4351],
      "op": "SWAP1",
      "path": "0"
    },
    "1635": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4351],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "1640": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4351],
      "op": "SWAP1",
      "path": "0"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1643": {
      "op": "ADD"
    },
    "1644": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1646": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1648": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "MLOAD",
      "path": "0"
    },
    "1649": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP1",
      "path": "0"
    },
    "1650": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP4",
      "path": "0"
    },
    "1651": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "SUB",
      "path": "0"
    },
    "1652": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP2",
      "path": "0"
    },
    "1653": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP7",
      "path": "0"
    },
    "1654": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "GAS",
      "path": "0"
    },
    "1655": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "STATICCALL",
      "path": "0"
    },
    "1656": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "ISZERO",
      "path": "0"
    },
    "1657": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP1",
      "path": "0"
    },
    "1658": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "ISZERO",
      "path": "0"
    },
    "1659": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH2",
      "path": "0",
      "value": "0x688"
    },
    "1662": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "JUMPI",
      "path": "0"
    },
    "1663": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1664": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1666": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP1",
      "path": "0"
    },
    "1667": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1668": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1669": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1671": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "REVERT",
      "path": "0"
    },
    "1672": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1673": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "POP",
      "path": "0"
    },
    "1674": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "POP",
      "path": "0"
    },
    "1675": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "POP",
      "path": "0"
    },
    "1676": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "POP",
      "path": "0"
    },
    "1677": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1679": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "MLOAD",
      "path": "0"
    },
    "1680": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1681": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1683": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "NOT",
      "path": "0"
    },
    "1684": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1686": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP3",
      "path": "0"
    },
    "1687": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "ADD",
      "path": "0"
    },
    "1688": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "AND",
      "path": "0"
    },
    "1689": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP3",
      "path": "0"
    },
    "1690": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "ADD",
      "path": "0"
    },
    "1691": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP1",
      "path": "0"
    },
    "1692": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1694": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "MSTORE",
      "path": "0"
    },
    "1695": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "POP",
      "path": "0"
    },
    "1696": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "DUP2",
      "path": "0"
    },
    "1697": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "ADD",
      "path": "0"
    },
    "1698": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "SWAP1",
      "path": "0"
    },
    "1699": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AC"
    },
    "1702": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "SWAP2",
      "path": "0"
    },
    "1703": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "SWAP1",
      "path": "0"
    },
    "1704": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "1707": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4336, 4360],
      "op": "JUMP",
      "path": "0"
    },
    "1708": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4360],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1709": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4400],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B6"
    },
    "1712": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4400],
      "op": "SWAP2",
      "path": "0"
    },
    "1713": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4400],
      "op": "SWAP1",
      "path": "0"
    },
    "1714": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4400],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20CD"
    },
    "1717": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4336, 4400],
      "op": "JUMP",
      "path": "0"
    },
    "1718": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4336, 4400],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1719": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4335, 4424],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C0"
    },
    "1722": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4335, 4424],
      "op": "SWAP2",
      "path": "0"
    },
    "1723": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4335, 4424],
      "op": "SWAP1",
      "path": "0"
    },
    "1724": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4335, 4424],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20EC"
    },
    "1727": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4335, 4424],
      "op": "JUMP",
      "path": "0"
    },
    "1728": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4335, 4424],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1729": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4307, 4424],
      "op": "SWAP1",
      "path": "0"
    },
    "1730": {
      "op": "POP"
    },
    "1731": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4438, 4466],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x6CC"
    },
    "1734": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4307, 4424],
      "op": "DUP2",
      "path": "0"
    },
    "1735": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4438, 4466],
      "op": "DUP7",
      "path": "0"
    },
    "1736": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4438, 4466],
      "op": "PUSH2",
      "path": "0",
      "value": "0x210E"
    },
    "1739": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4438, 4466],
      "op": "JUMP",
      "path": "0"
    },
    "1740": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4438, 4466],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1741": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4438, 4466],
      "op": "SWAP5",
      "path": "0"
    },
    "1742": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4438, 4466],
      "op": "POP",
      "path": "0"
    },
    "1743": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4237, 4477],
      "op": "POP",
      "path": "0"
    },
    "1744": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4237, 4477],
      "op": "POP",
      "path": "0"
    },
    "1745": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4232, 4235],
      "op": "DUP1",
      "path": "0",
      "statement": 11
    },
    "1746": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4232, 4235],
      "op": "DUP1",
      "path": "0"
    },
    "1747": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4232, 4235],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DB"
    },
    "1750": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4232, 4235],
      "op": "SWAP1",
      "path": "0"
    },
    "1751": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4232, 4235],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2126"
    },
    "1754": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "i",
      "offset": [4232, 4235],
      "op": "JUMP",
      "path": "0"
    },
    "1755": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4232, 4235],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1756": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4232, 4235],
      "op": "SWAP2",
      "path": "0"
    },
    "1757": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4232, 4235],
      "op": "POP",
      "path": "0"
    },
    "1758": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4232, 4235],
      "op": "POP",
      "path": "0"
    },
    "1759": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4182, 4477],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F2"
    },
    "1762": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4182, 4477],
      "op": "JUMP",
      "path": "0"
    },
    "1763": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4182, 4477],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1764": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [4182, 4477],
      "op": "POP",
      "path": "0"
    },
    "1765": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3971, 4483],
      "op": "POP",
      "path": "0"
    },
    "1766": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "SWAP5",
      "path": "0"
    },
    "1767": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "SWAP4",
      "path": "0"
    },
    "1768": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "POP",
      "path": "0"
    },
    "1769": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "POP",
      "path": "0"
    },
    "1770": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "POP",
      "path": "0"
    },
    "1771": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "offset": [3791, 4483],
      "op": "POP",
      "path": "0"
    },
    "1772": {
      "fn": "ShapeShiftDAORouter.totalVaultBalance",
      "jump": "o",
      "offset": [3791, 4483],
      "op": "JUMP",
      "path": "0"
    },
    "1773": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1664, 2187],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1774": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1776": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "2"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1783": {
      "op": "SHL"
    },
    "1784": {
      "op": "SUB"
    },
    "1785": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "2"
    },
    "1786": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6"
    },
    "1787": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "2"
    },
    "1788": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "2",
      "value": "0x717"
    },
    "1791": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "2"
    },
    "1792": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1794": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "2"
    },
    "1795": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1801": {
      "op": "SHL"
    },
    "1802": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "2"
    },
    "1803": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "2"
    },
    "1804": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1806": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "2"
    },
    "1807": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A"
    },
    "1810": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "2"
    },
    "1811": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F5E"
    },
    "1814": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "2"
    },
    "1815": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1816": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1787],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1818": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1787],
      "op": "SLOAD",
      "path": "0"
    },
    "1819": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1821": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP1",
      "path": "0"
    },
    "1822": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "MLOAD",
      "path": "0"
    },
    "1823": {
      "op": "PUSH4",
      "value": "0x5AA6E675"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1830": {
      "op": "SHL"
    },
    "1831": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP2",
      "path": "0"
    },
    "1832": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "MSTORE",
      "path": "0"
    },
    "1833": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "SWAP1",
      "path": "0"
    },
    "1834": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "MLOAD",
      "path": "0"
    },
    "1835": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1739, 1776],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1837": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1739, 1776],
      "op": "SWAP3",
      "path": "0"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1844": {
      "op": "SHL"
    },
    "1845": {
      "op": "SUB"
    },
    "1846": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1787],
      "op": "AND",
      "path": "0"
    },
    "1847": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1787],
      "op": "SWAP2",
      "path": "0"
    },
    "1848": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1798],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5AA6E675"
    },
    "1853": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1798],
      "op": "SWAP2",
      "path": "0"
    },
    "1854": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1856": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP1",
      "path": "0"
    },
    "1857": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP4",
      "path": "0"
    },
    "1858": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "ADD",
      "path": "0"
    },
    "1859": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "SWAP3",
      "path": "0"
    },
    "1860": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1862": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "SWAP3",
      "path": "0"
    },
    "1863": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "SWAP2",
      "path": "0"
    },
    "1864": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "SWAP1",
      "path": "0"
    },
    "1865": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP3",
      "path": "0"
    },
    "1866": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "SWAP1",
      "path": "0"
    },
    "1867": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "SUB",
      "path": "0"
    },
    "1868": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "ADD",
      "path": "0"
    },
    "1869": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP2",
      "path": "0"
    },
    "1870": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1787],
      "op": "DUP7",
      "path": "0"
    },
    "1871": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "GAS",
      "path": "0"
    },
    "1872": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "STATICCALL",
      "path": "0"
    },
    "1873": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "ISZERO",
      "path": "0"
    },
    "1874": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP1",
      "path": "0"
    },
    "1875": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "ISZERO",
      "path": "0"
    },
    "1876": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH2",
      "path": "0",
      "value": "0x761"
    },
    "1879": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "JUMPI",
      "path": "0"
    },
    "1880": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1881": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1883": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP1",
      "path": "0"
    },
    "1884": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1885": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1886": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1888": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "REVERT",
      "path": "0"
    },
    "1889": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1890": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "POP",
      "path": "0"
    },
    "1891": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "POP",
      "path": "0"
    },
    "1892": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "POP",
      "path": "0"
    },
    "1893": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "POP",
      "path": "0"
    },
    "1894": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1896": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "MLOAD",
      "path": "0"
    },
    "1897": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1898": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1900": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "NOT",
      "path": "0"
    },
    "1901": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1903": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP3",
      "path": "0"
    },
    "1904": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "ADD",
      "path": "0"
    },
    "1905": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "AND",
      "path": "0"
    },
    "1906": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP3",
      "path": "0"
    },
    "1907": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "ADD",
      "path": "0"
    },
    "1908": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP1",
      "path": "0"
    },
    "1909": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1911": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "MSTORE",
      "path": "0"
    },
    "1912": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "POP",
      "path": "0"
    },
    "1913": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "DUP2",
      "path": "0"
    },
    "1914": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "ADD",
      "path": "0"
    },
    "1915": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "SWAP1",
      "path": "0"
    },
    "1916": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH2",
      "path": "0",
      "value": "0x785"
    },
    "1919": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "SWAP2",
      "path": "0"
    },
    "1920": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "SWAP1",
      "path": "0"
    },
    "1921": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F93"
    },
    "1924": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "jump": "i",
      "offset": [1779, 1800],
      "op": "JUMP",
      "path": "0"
    },
    "1925": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1779, 1800],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1926": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1895],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x1"
    },
    "1928": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "DUP1",
      "path": "0"
    },
    "1929": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "SLOAD",
      "path": "0"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1936": {
      "op": "SHL"
    },
    "1937": {
      "op": "SUB"
    },
    "1938": {
      "op": "NOT"
    },
    "1939": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "AND",
      "path": "0"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1946": {
      "op": "SHL"
    },
    "1947": {
      "op": "SUB"
    },
    "1948": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "DUP6",
      "path": "0"
    },
    "1949": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "AND",
      "path": "0"
    },
    "1950": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "SWAP1",
      "path": "0"
    },
    "1951": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "DUP2",
      "path": "0"
    },
    "1952": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "OR",
      "path": "0"
    },
    "1953": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "SWAP1",
      "path": "0"
    },
    "1954": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "SWAP2",
      "path": "0"
    },
    "1955": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "SSTORE",
      "path": "0"
    },
    "1956": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x40"
    },
    "1958": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP1",
      "path": "0"
    },
    "1959": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "MLOAD",
      "path": "0"
    },
    "1960": {
      "op": "PUSH4",
      "value": "0x5AA6E675"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1967": {
      "op": "SHL"
    },
    "1968": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP2",
      "path": "0"
    },
    "1969": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "MSTORE",
      "path": "0"
    },
    "1970": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SWAP1",
      "path": "0"
    },
    "1971": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "MLOAD",
      "path": "0"
    },
    "1972": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1739, 1800],
      "op": "SWAP3",
      "path": "0"
    },
    "1973": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1739, 1800],
      "op": "SWAP4",
      "path": "0"
    },
    "1974": {
      "op": "POP"
    },
    "1975": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "SWAP1",
      "path": "0"
    },
    "1976": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "SWAP2",
      "path": "0"
    },
    "1977": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2136],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5AA6E675"
    },
    "1982": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2136],
      "op": "SWAP2",
      "path": "0"
    },
    "1983": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1985": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP1",
      "path": "0"
    },
    "1986": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP3",
      "path": "0"
    },
    "1987": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "ADD",
      "path": "0"
    },
    "1988": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SWAP3",
      "path": "0"
    },
    "1989": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1991": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SWAP3",
      "path": "0"
    },
    "1992": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SWAP1",
      "path": "0"
    },
    "1993": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SWAP2",
      "path": "0"
    },
    "1994": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SWAP1",
      "path": "0"
    },
    "1995": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP3",
      "path": "0"
    },
    "1996": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SWAP1",
      "path": "0"
    },
    "1997": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SUB",
      "path": "0"
    },
    "1998": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "ADD",
      "path": "0"
    },
    "1999": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP2",
      "path": "0"
    },
    "2000": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1887, 1924],
      "op": "DUP7",
      "path": "0"
    },
    "2001": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "GAS",
      "path": "0"
    },
    "2002": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "STATICCALL",
      "path": "0"
    },
    "2003": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "ISZERO",
      "path": "0"
    },
    "2004": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP1",
      "path": "0"
    },
    "2005": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "ISZERO",
      "path": "0"
    },
    "2006": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E3"
    },
    "2009": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "JUMPI",
      "path": "0"
    },
    "2010": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2011": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2013": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP1",
      "path": "0"
    },
    "2014": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2015": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2016": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2018": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "REVERT",
      "path": "0"
    },
    "2019": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2020": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "POP",
      "path": "0"
    },
    "2021": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "POP",
      "path": "0"
    },
    "2022": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "POP",
      "path": "0"
    },
    "2023": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "POP",
      "path": "0"
    },
    "2024": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2026": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "MLOAD",
      "path": "0"
    },
    "2027": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2028": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2030": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "NOT",
      "path": "0"
    },
    "2031": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2033": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP3",
      "path": "0"
    },
    "2034": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "ADD",
      "path": "0"
    },
    "2035": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "AND",
      "path": "0"
    },
    "2036": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP3",
      "path": "0"
    },
    "2037": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "ADD",
      "path": "0"
    },
    "2038": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP1",
      "path": "0"
    },
    "2039": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2041": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "MSTORE",
      "path": "0"
    },
    "2042": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "POP",
      "path": "0"
    },
    "2043": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "DUP2",
      "path": "0"
    },
    "2044": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "ADD",
      "path": "0"
    },
    "2045": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SWAP1",
      "path": "0"
    },
    "2046": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH2",
      "path": "0",
      "value": "0x807"
    },
    "2049": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SWAP2",
      "path": "0"
    },
    "2050": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "SWAP1",
      "path": "0"
    },
    "2051": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F93"
    },
    "2054": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "jump": "i",
      "offset": [2117, 2138],
      "op": "JUMP",
      "path": "0"
    },
    "2055": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2117, 2138],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2062": {
      "op": "SHL"
    },
    "2063": {
      "op": "SUB"
    },
    "2064": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2084, 2138],
      "op": "AND",
      "path": "0"
    },
    "2065": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2084, 2113],
      "op": "DUP2",
      "path": "0"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2072": {
      "op": "SHL"
    },
    "2073": {
      "op": "SUB"
    },
    "2074": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2084, 2138],
      "op": "AND",
      "path": "0"
    },
    "2075": {
      "branch": 69,
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2084, 2138],
      "op": "EQ",
      "path": "0"
    },
    "2076": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85A"
    },
    "2079": {
      "branch": 69,
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "JUMPI",
      "path": "0"
    },
    "2080": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2082": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "MLOAD",
      "path": "0"
    },
    "2083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2089": {
      "op": "SHL"
    },
    "2090": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "DUP2",
      "path": "0"
    },
    "2091": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "MSTORE",
      "path": "0"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2094": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2096": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "DUP3",
      "path": "0"
    },
    "2097": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "ADD",
      "path": "0"
    },
    "2098": {
      "op": "MSTORE"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2103": {
      "op": "DUP3"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "op": "MSTORE"
    },
    "2106": {
      "op": "PUSH16",
      "value": "0x696E76616C6964207265676973747279"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2125": {
      "op": "SHL"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2128": {
      "op": "DUP3"
    },
    "2129": {
      "op": "ADD"
    },
    "2130": {
      "op": "MSTORE"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39A"
    },
    "2137": {
      "op": "JUMP"
    },
    "2138": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [2063, 2180],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2139": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1729, 2187],
      "op": "POP",
      "path": "0"
    },
    "2140": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "offset": [1664, 2187],
      "op": "POP",
      "path": "0"
    },
    "2141": {
      "fn": "ShapeShiftDAORouter.setRegistry",
      "jump": "o",
      "offset": [1664, 2187],
      "op": "JUMP",
      "path": "0"
    },
    "2142": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17023, 17184],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2143": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17089, 17096],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2145": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17115, 17177],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x367"
    },
    "2148": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17131, 17136],
      "op": "DUP4",
      "path": "0"
    },
    "2149": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6"
    },
    "2150": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17153, 17159],
      "op": "DUP5",
      "path": "0"
    },
    "2151": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17161, 17162],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2155": {
      "op": "NOT"
    },
    "2156": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17115, 17123],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1597"
    },
    "2159": {
      "fn": "ShapeShiftDAORouter.migrate",
      "jump": "i",
      "offset": [17115, 17177],
      "op": "JUMP",
      "path": "0"
    },
    "2160": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16290, 16553],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2161": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16340, 16347],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2163": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16378, 16546],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x36A"
    },
    "2166": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16411, 16416],
      "op": "DUP3",
      "path": "0"
    },
    "2167": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2170": {
      "op": "NOT"
    },
    "2171": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16501, 16502],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2175": {
      "op": "NOT"
    },
    "2176": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [16378, 16386],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1597"
    },
    "2179": {
      "fn": "ShapeShiftDAORouter.migrate",
      "jump": "i",
      "offset": [16378, 16546],
      "op": "JUMP",
      "path": "0"
    },
    "2180": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11138, 11483],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2181": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11254, 11261],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2183": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11292, 11476],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x450"
    },
    "2186": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11326, 11331],
      "op": "DUP5",
      "path": "0"
    },
    "2187": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6"
    },
    "2188": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11380, 11389],
      "op": "DUP6",
      "path": "0"
    },
    "2189": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11407, 11413],
      "op": "DUP6",
      "path": "0"
    },
    "2190": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11431, 11432],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2194": {
      "op": "NOT"
    },
    "2195": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [11292, 11301],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107B"
    },
    "2198": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "jump": "i",
      "offset": [11292, 11476],
      "op": "JUMP",
      "path": "0"
    },
    "2199": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2200": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5326, 5340],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2202": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5376, 5387],
      "op": "DUP2",
      "path": "0",
      "statement": 17
    },
    "2203": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5360, 5372],
      "op": "DUP4",
      "path": "0"
    },
    "2204": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5360, 5387],
      "op": "GT",
      "path": "0"
    },
    "2205": {
      "branch": 70,
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5360, 5387],
      "op": "ISZERO",
      "path": "0"
    },
    "2206": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5352, 5388],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A6"
    },
    "2209": {
      "branch": 70,
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5352, 5388],
      "op": "JUMPI",
      "path": "0"
    },
    "2210": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5352, 5388],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2212": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5352, 5388],
      "op": "DUP1",
      "path": "0"
    },
    "2213": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5352, 5388],
      "op": "REVERT",
      "path": "0"
    },
    "2214": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5352, 5388],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2215": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5422, 5433],
      "op": "DUP2",
      "path": "0"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2218": {
      "op": "NOT"
    },
    "2219": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5447, 5475],
      "op": "DUP2",
      "path": "0"
    },
    "2220": {
      "branch": 71,
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5447, 5475],
      "op": "EQ",
      "path": "0"
    },
    "2221": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5443, 5542],
      "op": "ISZERO",
      "path": "0"
    },
    "2222": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5443, 5542],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92D"
    },
    "2225": {
      "branch": 71,
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5443, 5542],
      "op": "JUMPI",
      "path": "0"
    },
    "2226": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5541, 5542],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1"
    },
    "2228": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5512],
      "op": "DUP1",
      "path": "0"
    },
    "2229": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5512],
      "op": "SLOAD",
      "path": "0"
    },
    "2230": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2232": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "MLOAD",
      "path": "0"
    },
    "2233": {
      "op": "PUSH4",
      "value": "0xF9C7BBA5"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2240": {
      "op": "SHL"
    },
    "2241": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP2",
      "path": "0"
    },
    "2242": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "MSTORE",
      "path": "0"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2249": {
      "op": "SHL"
    },
    "2250": {
      "op": "SUB"
    },
    "2251": {
      "op": "DUP9"
    },
    "2252": {
      "op": "DUP2"
    },
    "2253": {
      "op": "AND"
    },
    "2254": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2256": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP4",
      "path": "0"
    },
    "2257": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "ADD",
      "path": "0"
    },
    "2258": {
      "op": "MSTORE"
    },
    "2259": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5512],
      "op": "SWAP1",
      "path": "0"
    },
    "2260": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5512],
      "op": "SWAP2",
      "path": "0"
    },
    "2261": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5512],
      "op": "AND",
      "path": "0"
    },
    "2262": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5512],
      "op": "SWAP1",
      "path": "0"
    },
    "2263": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5522],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF9C7BBA5"
    },
    "2268": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5522],
      "op": "SWAP1",
      "path": "0"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2271": {
      "op": "ADD"
    },
    "2272": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2274": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2276": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "MLOAD",
      "path": "0"
    },
    "2277": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP1",
      "path": "0"
    },
    "2278": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP4",
      "path": "0"
    },
    "2279": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "SUB",
      "path": "0"
    },
    "2280": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP2",
      "path": "0"
    },
    "2281": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP7",
      "path": "0"
    },
    "2282": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "GAS",
      "path": "0"
    },
    "2283": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "STATICCALL",
      "path": "0"
    },
    "2284": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "ISZERO",
      "path": "0"
    },
    "2285": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP1",
      "path": "0"
    },
    "2286": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "ISZERO",
      "path": "0"
    },
    "2287": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "2290": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "JUMPI",
      "path": "0"
    },
    "2291": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2292": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2294": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP1",
      "path": "0"
    },
    "2295": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2296": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2297": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2299": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "REVERT",
      "path": "0"
    },
    "2300": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2301": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "POP",
      "path": "0"
    },
    "2302": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "POP",
      "path": "0"
    },
    "2303": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "POP",
      "path": "0"
    },
    "2304": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "POP",
      "path": "0"
    },
    "2305": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2307": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "MLOAD",
      "path": "0"
    },
    "2308": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2309": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2311": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "NOT",
      "path": "0"
    },
    "2312": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2314": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP3",
      "path": "0"
    },
    "2315": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "ADD",
      "path": "0"
    },
    "2316": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "AND",
      "path": "0"
    },
    "2317": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP3",
      "path": "0"
    },
    "2318": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "ADD",
      "path": "0"
    },
    "2319": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP1",
      "path": "0"
    },
    "2320": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2322": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "MSTORE",
      "path": "0"
    },
    "2323": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "POP",
      "path": "0"
    },
    "2324": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "DUP2",
      "path": "0"
    },
    "2325": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "ADD",
      "path": "0"
    },
    "2326": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "SWAP1",
      "path": "0"
    },
    "2327": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH2",
      "path": "0",
      "value": "0x920"
    },
    "2330": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "SWAP2",
      "path": "0"
    },
    "2331": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "SWAP1",
      "path": "0"
    },
    "2332": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "2335": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [5504, 5538],
      "op": "JUMP",
      "path": "0"
    },
    "2336": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5538],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2337": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5542],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92A"
    },
    "2340": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5542],
      "op": "SWAP2",
      "path": "0"
    },
    "2341": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5542],
      "op": "SWAP1",
      "path": "0"
    },
    "2342": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5542],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "2345": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [5504, 5542],
      "op": "JUMP",
      "path": "0"
    },
    "2346": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5504, 5542],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2347": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5489, 5542],
      "op": "SWAP1",
      "path": "0"
    },
    "2348": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5489, 5542],
      "op": "POP",
      "path": "0"
    },
    "2349": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5443, 5542],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2350": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5570, 5582],
      "op": "DUP4",
      "path": "0"
    },
    "2351": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5553, 5718],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2352": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5589, 5601],
      "op": "DUP2",
      "path": "0"
    },
    "2353": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5584, 5585],
      "op": "DUP2",
      "path": "0"
    },
    "2354": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5584, 5601],
      "op": "GT",
      "path": "0"
    },
    "2355": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5553, 5718],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA30"
    },
    "2358": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5553, 5718],
      "op": "JUMPI",
      "path": "0"
    },
    "2359": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5647],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2361": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5647],
      "op": "SLOAD",
      "path": "0"
    },
    "2362": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2364": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "MLOAD",
      "path": "0"
    },
    "2365": {
      "op": "PUSH4",
      "value": "0x3DDFE34F"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2372": {
      "op": "SHL"
    },
    "2373": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP2",
      "path": "0"
    },
    "2374": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "MSTORE",
      "path": "0"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2381": {
      "op": "SHL"
    },
    "2382": {
      "op": "SUB"
    },
    "2383": {
      "op": "DUP9"
    },
    "2384": {
      "op": "DUP2"
    },
    "2385": {
      "op": "AND"
    },
    "2386": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2388": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP4",
      "path": "0"
    },
    "2389": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "ADD",
      "path": "0"
    },
    "2390": {
      "op": "MSTORE"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2393": {
      "op": "DUP3"
    },
    "2394": {
      "op": "ADD"
    },
    "2395": {
      "op": "DUP5"
    },
    "2396": {
      "op": "SWAP1"
    },
    "2397": {
      "op": "MSTORE"
    },
    "2398": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5622, 5636],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2400": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5622, 5636],
      "op": "SWAP3",
      "path": "0"
    },
    "2401": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5647],
      "op": "AND",
      "path": "0"
    },
    "2402": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5647],
      "op": "SWAP1",
      "path": "0"
    },
    "2403": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5654],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BBFC69E"
    },
    "2408": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5654],
      "op": "SWAP1",
      "path": "0"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2414": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2416": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "MLOAD",
      "path": "0"
    },
    "2417": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP1",
      "path": "0"
    },
    "2418": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP4",
      "path": "0"
    },
    "2419": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "SUB",
      "path": "0"
    },
    "2420": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP2",
      "path": "0"
    },
    "2421": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP7",
      "path": "0"
    },
    "2422": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "GAS",
      "path": "0"
    },
    "2423": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "STATICCALL",
      "path": "0"
    },
    "2424": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "ISZERO",
      "path": "0"
    },
    "2425": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP1",
      "path": "0"
    },
    "2426": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "ISZERO",
      "path": "0"
    },
    "2427": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH2",
      "path": "0",
      "value": "0x988"
    },
    "2430": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "JUMPI",
      "path": "0"
    },
    "2431": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2432": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2434": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP1",
      "path": "0"
    },
    "2435": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2436": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2437": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2439": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "REVERT",
      "path": "0"
    },
    "2440": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2441": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "POP",
      "path": "0"
    },
    "2442": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "POP",
      "path": "0"
    },
    "2443": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "POP",
      "path": "0"
    },
    "2444": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "POP",
      "path": "0"
    },
    "2445": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2447": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "MLOAD",
      "path": "0"
    },
    "2448": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2449": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2451": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "NOT",
      "path": "0"
    },
    "2452": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2454": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP3",
      "path": "0"
    },
    "2455": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "ADD",
      "path": "0"
    },
    "2456": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "AND",
      "path": "0"
    },
    "2457": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP3",
      "path": "0"
    },
    "2458": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "ADD",
      "path": "0"
    },
    "2459": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP1",
      "path": "0"
    },
    "2460": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2462": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "MSTORE",
      "path": "0"
    },
    "2463": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "POP",
      "path": "0"
    },
    "2464": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "DUP2",
      "path": "0"
    },
    "2465": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "ADD",
      "path": "0"
    },
    "2466": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "SWAP1",
      "path": "0"
    },
    "2467": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9AC"
    },
    "2470": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "SWAP2",
      "path": "0"
    },
    "2471": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "SWAP1",
      "path": "0"
    },
    "2472": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F93"
    },
    "2475": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [5639, 5664],
      "op": "JUMP",
      "path": "0"
    },
    "2476": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5639, 5664],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2477": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5622, 5664],
      "op": "SWAP1",
      "path": "0"
    },
    "2478": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5622, 5664],
      "op": "POP",
      "path": "0"
    },
    "2479": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5693],
      "op": "DUP1",
      "path": "0",
      "statement": 19
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2486": {
      "op": "SHL"
    },
    "2487": {
      "op": "SUB"
    },
    "2488": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5705],
      "op": "AND",
      "path": "0"
    },
    "2489": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5705],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1E1D114"
    },
    "2494": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2496": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "MLOAD",
      "path": "0"
    },
    "2497": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP2",
      "path": "0"
    },
    "2498": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2503": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "AND",
      "path": "0"
    },
    "2504": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2506": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "SHL",
      "path": "0"
    },
    "2507": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP2",
      "path": "0"
    },
    "2508": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "MSTORE",
      "path": "0"
    },
    "2509": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2511": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "ADD",
      "path": "0"
    },
    "2512": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2514": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2516": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "MLOAD",
      "path": "0"
    },
    "2517": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP1",
      "path": "0"
    },
    "2518": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP4",
      "path": "0"
    },
    "2519": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "SUB",
      "path": "0"
    },
    "2520": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP2",
      "path": "0"
    },
    "2521": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP7",
      "path": "0"
    },
    "2522": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "GAS",
      "path": "0"
    },
    "2523": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "STATICCALL",
      "path": "0"
    },
    "2524": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "ISZERO",
      "path": "0"
    },
    "2525": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP1",
      "path": "0"
    },
    "2526": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "ISZERO",
      "path": "0"
    },
    "2527": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EC"
    },
    "2530": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "JUMPI",
      "path": "0"
    },
    "2531": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2532": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2534": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP1",
      "path": "0"
    },
    "2535": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2536": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2537": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2539": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "REVERT",
      "path": "0"
    },
    "2540": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2541": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "POP",
      "path": "0"
    },
    "2542": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "POP",
      "path": "0"
    },
    "2543": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "POP",
      "path": "0"
    },
    "2544": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "POP",
      "path": "0"
    },
    "2545": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2547": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "MLOAD",
      "path": "0"
    },
    "2548": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2549": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2551": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "NOT",
      "path": "0"
    },
    "2552": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2554": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP3",
      "path": "0"
    },
    "2555": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "ADD",
      "path": "0"
    },
    "2556": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "AND",
      "path": "0"
    },
    "2557": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP3",
      "path": "0"
    },
    "2558": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "ADD",
      "path": "0"
    },
    "2559": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP1",
      "path": "0"
    },
    "2560": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2562": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "MSTORE",
      "path": "0"
    },
    "2563": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "POP",
      "path": "0"
    },
    "2564": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "DUP2",
      "path": "0"
    },
    "2565": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "ADD",
      "path": "0"
    },
    "2566": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "SWAP1",
      "path": "0"
    },
    "2567": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA10"
    },
    "2570": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "SWAP2",
      "path": "0"
    },
    "2571": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "SWAP1",
      "path": "0"
    },
    "2572": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "2575": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [5688, 5707],
      "op": "JUMP",
      "path": "0"
    },
    "2576": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5688, 5707],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2577": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5678, 5707],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1A"
    },
    "2580": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5678, 5707],
      "op": "SWAP1",
      "path": "0"
    },
    "2581": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5678, 5707],
      "op": "DUP6",
      "path": "0"
    },
    "2582": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5678, 5707],
      "op": "PUSH2",
      "path": "0",
      "value": "0x210E"
    },
    "2585": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [5678, 5707],
      "op": "JUMP",
      "path": "0"
    },
    "2586": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5678, 5707],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2587": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5678, 5707],
      "op": "SWAP4",
      "path": "0"
    },
    "2588": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5678, 5707],
      "op": "POP",
      "path": "0"
    },
    "2589": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5608, 5718],
      "op": "POP",
      "path": "0"
    },
    "2590": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5603, 5606],
      "op": "DUP1",
      "path": "0",
      "statement": 20
    },
    "2591": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5603, 5606],
      "op": "DUP1",
      "path": "0"
    },
    "2592": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5603, 5606],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA28"
    },
    "2595": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5603, 5606],
      "op": "SWAP1",
      "path": "0"
    },
    "2596": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5603, 5606],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2126"
    },
    "2599": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [5603, 5606],
      "op": "JUMP",
      "path": "0"
    },
    "2600": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5603, 5606],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2601": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5603, 5606],
      "op": "SWAP2",
      "path": "0"
    },
    "2602": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5603, 5606],
      "op": "POP",
      "path": "0"
    },
    "2603": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5603, 5606],
      "op": "POP",
      "path": "0"
    },
    "2604": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5553, 5718],
      "op": "PUSH2",
      "path": "0",
      "value": "0x92F"
    },
    "2607": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5553, 5718],
      "op": "JUMP",
      "path": "0"
    },
    "2608": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5553, 5718],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2609": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5553, 5718],
      "op": "POP",
      "path": "0"
    },
    "2610": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5342, 5724],
      "op": "POP",
      "path": "0"
    },
    "2611": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "SWAP4",
      "path": "0"
    },
    "2612": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "SWAP3",
      "path": "0"
    },
    "2613": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "POP",
      "path": "0"
    },
    "2614": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "POP",
      "path": "0"
    },
    "2615": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [5194, 5724],
      "op": "POP",
      "path": "0"
    },
    "2616": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "o",
      "offset": [5194, 5724],
      "op": "JUMP",
      "path": "0"
    },
    "2617": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2494, 2614],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2618": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2588],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x1"
    },
    "2620": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2588],
      "op": "SLOAD",
      "path": "0"
    },
    "2621": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2623": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "MLOAD",
      "path": "0"
    },
    "2624": {
      "op": "PUSH4",
      "value": "0xE177DC7"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP2",
      "path": "0"
    },
    "2633": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "MSTORE",
      "path": "0"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2640": {
      "op": "SHL"
    },
    "2641": {
      "op": "SUB"
    },
    "2642": {
      "op": "DUP4"
    },
    "2643": {
      "op": "DUP2"
    },
    "2644": {
      "op": "AND"
    },
    "2645": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2647": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP4",
      "path": "0"
    },
    "2648": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "ADD",
      "path": "0"
    },
    "2649": {
      "op": "MSTORE"
    },
    "2650": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2553, 2561],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2652": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2553, 2561],
      "op": "SWAP3",
      "path": "0"
    },
    "2653": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2588],
      "op": "AND",
      "path": "0"
    },
    "2654": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2588],
      "op": "SWAP1",
      "path": "0"
    },
    "2655": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2600],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE177DC70"
    },
    "2660": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2600],
      "op": "SWAP1",
      "path": "0"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2663": {
      "op": "ADD"
    },
    "2664": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2666": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2668": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "MLOAD",
      "path": "0"
    },
    "2669": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP1",
      "path": "0"
    },
    "2670": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP4",
      "path": "0"
    },
    "2671": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "SUB",
      "path": "0"
    },
    "2672": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP2",
      "path": "0"
    },
    "2673": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP7",
      "path": "0"
    },
    "2674": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "GAS",
      "path": "0"
    },
    "2675": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "STATICCALL",
      "path": "0"
    },
    "2676": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "ISZERO",
      "path": "0"
    },
    "2677": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP1",
      "path": "0"
    },
    "2678": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "ISZERO",
      "path": "0"
    },
    "2679": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA84"
    },
    "2682": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "JUMPI",
      "path": "0"
    },
    "2683": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2684": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2686": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP1",
      "path": "0"
    },
    "2687": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2688": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2689": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2691": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "REVERT",
      "path": "0"
    },
    "2692": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2693": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "POP",
      "path": "0"
    },
    "2694": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "POP",
      "path": "0"
    },
    "2695": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "POP",
      "path": "0"
    },
    "2696": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "POP",
      "path": "0"
    },
    "2697": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2699": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "MLOAD",
      "path": "0"
    },
    "2700": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2701": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2703": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "NOT",
      "path": "0"
    },
    "2704": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2706": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP3",
      "path": "0"
    },
    "2707": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "ADD",
      "path": "0"
    },
    "2708": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "AND",
      "path": "0"
    },
    "2709": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP3",
      "path": "0"
    },
    "2710": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "ADD",
      "path": "0"
    },
    "2711": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP1",
      "path": "0"
    },
    "2712": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2714": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "MSTORE",
      "path": "0"
    },
    "2715": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "POP",
      "path": "0"
    },
    "2716": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "DUP2",
      "path": "0"
    },
    "2717": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "ADD",
      "path": "0"
    },
    "2718": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "SWAP1",
      "path": "0"
    },
    "2719": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "2722": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "SWAP2",
      "path": "0"
    },
    "2723": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "SWAP1",
      "path": "0"
    },
    "2724": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "offset": [2580, 2607],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F93"
    },
    "2727": {
      "fn": "ShapeShiftDAORouter.latestVault",
      "jump": "i",
      "offset": [2580, 2607],
      "op": "JUMP",
      "path": "0"
    },
    "2728": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17844, 18202],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2729": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [17991, 17998],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2731": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [18029, 18195],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0x2DC"
    },
    "2734": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [18062, 18067],
      "op": "DUP6",
      "path": "0"
    },
    "2735": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6"
    },
    "2736": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [18116, 18122],
      "op": "DUP7",
      "path": "0"
    },
    "2737": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [18140, 18152],
      "op": "DUP7",
      "path": "0"
    },
    "2738": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [18170, 18181],
      "op": "DUP7",
      "path": "0"
    },
    "2739": {
      "fn": "ShapeShiftDAORouter.migrate",
      "offset": [18029, 18037],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1597"
    },
    "2742": {
      "fn": "ShapeShiftDAORouter.migrate",
      "jump": "i",
      "offset": [18029, 18195],
      "op": "JUMP",
      "path": "0"
    },
    "2743": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2744": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2746": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "2"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2753": {
      "op": "SHL"
    },
    "2754": {
      "op": "SUB"
    },
    "2755": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "2"
    },
    "2756": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6"
    },
    "2757": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "2"
    },
    "2758": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE1"
    },
    "2761": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "2"
    },
    "2762": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2764": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "2"
    },
    "2765": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2771": {
      "op": "SHL"
    },
    "2772": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "2"
    },
    "2773": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "2"
    },
    "2774": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2776": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "2"
    },
    "2777": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A"
    },
    "2780": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "2"
    },
    "2781": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F5E"
    },
    "2784": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "2"
    },
    "2785": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2792": {
      "op": "SHL"
    },
    "2793": {
      "op": "SUB"
    },
    "2794": {
      "fn": "Ownable.transferOwnership",
      "offset": [2006, 2028],
      "op": "DUP2",
      "path": "2",
      "statement": 23
    },
    "2795": {
      "branch": 90,
      "fn": "Ownable.transferOwnership",
      "offset": [2006, 2028],
      "op": "AND",
      "path": "2"
    },
    "2796": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB46"
    },
    "2799": {
      "branch": 90,
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "JUMPI",
      "path": "2"
    },
    "2800": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2802": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "MLOAD",
      "path": "2"
    },
    "2803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2809": {
      "op": "SHL"
    },
    "2810": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "DUP2",
      "path": "2"
    },
    "2811": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "MSTORE",
      "path": "2"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2814": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2816": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "DUP3",
      "path": "2"
    },
    "2817": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "ADD",
      "path": "2"
    },
    "2818": {
      "op": "MSTORE"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2823": {
      "op": "DUP3"
    },
    "2824": {
      "op": "ADD"
    },
    "2825": {
      "op": "MSTORE"
    },
    "2826": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2861": {
      "op": "DUP3"
    },
    "2862": {
      "op": "ADD"
    },
    "2863": {
      "op": "MSTORE"
    },
    "2864": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2873": {
      "op": "SHL"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2876": {
      "op": "DUP3"
    },
    "2877": {
      "op": "ADD"
    },
    "2878": {
      "op": "MSTORE"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2881": {
      "op": "ADD"
    },
    "2882": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A"
    },
    "2885": {
      "op": "JUMP"
    },
    "2886": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2887": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2109],
      "op": "PUSH2",
      "path": "2",
      "statement": 24,
      "value": "0xB4F"
    },
    "2890": {
      "fn": "Ownable.transferOwnership",
      "offset": [2100, 2108],
      "op": "DUP2",
      "path": "2"
    },
    "2891": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2099],
      "op": "PUSH2",
      "path": "2",
      "value": "0x102B"
    },
    "2894": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [2081, 2109],
      "op": "JUMP",
      "path": "2"
    },
    "2895": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2109],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2896": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "POP",
      "path": "2"
    },
    "2897": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "2"
    },
    "2898": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4682, 4814],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2899": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x40"
    },
    "2901": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "MLOAD",
      "path": "0"
    },
    "2902": {
      "op": "PUSH4",
      "value": "0xE0CEC5FB"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2909": {
      "op": "SHL"
    },
    "2910": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP2",
      "path": "0"
    },
    "2911": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "MSTORE",
      "path": "0"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2918": {
      "op": "SHL"
    },
    "2919": {
      "op": "SUB"
    },
    "2920": {
      "op": "DUP3"
    },
    "2921": {
      "op": "AND"
    },
    "2922": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2924": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP3",
      "path": "0"
    },
    "2925": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "ADD",
      "path": "0"
    },
    "2926": {
      "op": "MSTORE"
    },
    "2927": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4741, 4748],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2931": {
      "op": "DUP3"
    },
    "2932": {
      "op": "ADD"
    },
    "2933": {
      "op": "DUP2"
    },
    "2934": {
      "op": "SWAP1"
    },
    "2935": {
      "op": "MSTORE"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2938": {
      "op": "NOT"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2941": {
      "op": "DUP4"
    },
    "2942": {
      "op": "ADD"
    },
    "2943": {
      "op": "MSTORE"
    },
    "2944": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4741, 4748],
      "op": "SWAP1",
      "path": "0"
    },
    "2945": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4771],
      "op": "ADDRESS",
      "path": "0"
    },
    "2946": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4771],
      "op": "SWAP1",
      "path": "0"
    },
    "2947": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4783],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE0CEC5FB"
    },
    "2952": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4783],
      "op": "SWAP1",
      "path": "0"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2957": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2959": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2961": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "MLOAD",
      "path": "0"
    },
    "2962": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP1",
      "path": "0"
    },
    "2963": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP4",
      "path": "0"
    },
    "2964": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "SUB",
      "path": "0"
    },
    "2965": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP2",
      "path": "0"
    },
    "2966": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP7",
      "path": "0"
    },
    "2967": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "GAS",
      "path": "0"
    },
    "2968": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "STATICCALL",
      "path": "0"
    },
    "2969": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "ISZERO",
      "path": "0"
    },
    "2970": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP1",
      "path": "0"
    },
    "2971": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "ISZERO",
      "path": "0"
    },
    "2972": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA9"
    },
    "2975": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "JUMPI",
      "path": "0"
    },
    "2976": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2977": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2979": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP1",
      "path": "0"
    },
    "2980": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2981": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2982": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2984": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "REVERT",
      "path": "0"
    },
    "2985": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2986": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "POP",
      "path": "0"
    },
    "2987": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "POP",
      "path": "0"
    },
    "2988": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "POP",
      "path": "0"
    },
    "2989": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "POP",
      "path": "0"
    },
    "2990": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2992": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "MLOAD",
      "path": "0"
    },
    "2993": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2994": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2996": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "NOT",
      "path": "0"
    },
    "2997": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2999": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP3",
      "path": "0"
    },
    "3000": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "ADD",
      "path": "0"
    },
    "3001": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "AND",
      "path": "0"
    },
    "3002": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP3",
      "path": "0"
    },
    "3003": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "ADD",
      "path": "0"
    },
    "3004": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP1",
      "path": "0"
    },
    "3005": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3007": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "MSTORE",
      "path": "0"
    },
    "3008": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "POP",
      "path": "0"
    },
    "3009": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "DUP2",
      "path": "0"
    },
    "3010": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "ADD",
      "path": "0"
    },
    "3011": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "SWAP1",
      "path": "0"
    },
    "3012": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "3015": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "SWAP2",
      "path": "0"
    },
    "3016": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "SWAP1",
      "path": "0"
    },
    "3017": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "offset": [4767, 4807],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "3020": {
      "fn": "ShapeShiftDAORouter.totalAssets",
      "jump": "i",
      "offset": [4767, 4807],
      "op": "JUMP",
      "path": "0"
    },
    "3021": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10208, 10540],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3022": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10294, 10301],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3024": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10336, 10533],
      "op": "PUSH2",
      "path": "0",
      "statement": 26,
      "value": "0x367"
    },
    "3027": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10370, 10375],
      "op": "DUP4",
      "path": "0"
    },
    "3028": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "6"
    },
    "3029": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10424, 10433],
      "op": "DUP5",
      "path": "0"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3032": {
      "op": "NOT"
    },
    "3033": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10488, 10489],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3037": {
      "op": "NOT"
    },
    "3038": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "offset": [10336, 10345],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107B"
    },
    "3041": {
      "fn": "ShapeShiftDAORouter.withdraw",
      "jump": "i",
      "offset": [10336, 10533],
      "op": "JUMP",
      "path": "0"
    },
    "3042": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2193, 2308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3043": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2284],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x1"
    },
    "3045": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2284],
      "op": "SLOAD",
      "path": "0"
    },
    "3046": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2301],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3048": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2301],
      "op": "MLOAD",
      "path": "0"
    },
    "3049": {
      "op": "PUSH4",
      "value": "0xF9C7BBA5"
    },
    "3054": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3056": {
      "op": "SHL"
    },
    "3057": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2301],
      "op": "DUP2",
      "path": "0"
    },
    "3058": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2301],
      "op": "MSTORE",
      "path": "0"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "op": "SUB"
    },
    "3067": {
      "op": "DUP4"
    },
    "3068": {
      "op": "DUP2"
    },
    "3069": {
      "op": "AND"
    },
    "3070": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2301],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3072": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2301],
      "op": "DUP4",
      "path": "0"
    },
    "3073": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2301],
      "op": "ADD",
      "path": "0"
    },
    "3074": {
      "op": "MSTORE"
    },
    "3075": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2250, 2257],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3077": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2250, 2257],
      "op": "SWAP3",
      "path": "0"
    },
    "3078": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2284],
      "op": "AND",
      "path": "0"
    },
    "3079": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2284],
      "op": "SWAP1",
      "path": "0"
    },
    "3080": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2294],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF9C7BBA5"
    },
    "3085": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2294],
      "op": "SWAP1",
      "path": "0"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3088": {
      "op": "ADD"
    },
    "3089": {
      "fn": "ShapeShiftDAORouter.numVaults",
      "offset": [2276, 2301],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8C"
    },
    "3092": {
      "op": "JUMP"
    },
    "3093": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8342, 9757],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3094": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8509, 8523],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3102": {
      "op": "SHL"
    },
    "3103": {
      "op": "SUB"
    },
    "3104": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8552, 8578],
      "op": "DUP6",
      "path": "0"
    },
    "3105": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8552, 8578],
      "op": "AND",
      "path": "0"
    },
    "3106": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8573, 8577],
      "op": "ADDRESS",
      "path": "0"
    },
    "3107": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8552, 8578],
      "op": "EQ",
      "path": "0"
    },
    "3108": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8552, 8578],
      "op": "ISZERO",
      "path": "0"
    },
    "3109": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8509, 8523],
      "op": "DUP2",
      "path": "0"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3112": {
      "op": "NOT"
    },
    "3113": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8617, 8640],
      "op": "DUP5",
      "path": "0"
    },
    "3114": {
      "branch": 72,
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8617, 8640],
      "op": "EQ",
      "path": "0"
    },
    "3115": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8613, 8790],
      "op": "ISZERO",
      "path": "0"
    },
    "3116": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8613, 8790],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA4"
    },
    "3119": {
      "branch": 72,
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8613, 8790],
      "op": "JUMPI",
      "path": "0"
    },
    "3120": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8672],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x1"
    },
    "3122": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8672],
      "op": "SLOAD",
      "path": "0"
    },
    "3123": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3125": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "MLOAD",
      "path": "0"
    },
    "3126": {
      "op": "PUSH4",
      "value": "0xE177DC7"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "3133": {
      "op": "SHL"
    },
    "3134": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP2",
      "path": "0"
    },
    "3135": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "MSTORE",
      "path": "0"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3142": {
      "op": "SHL"
    },
    "3143": {
      "op": "SUB"
    },
    "3144": {
      "op": "DUP11"
    },
    "3145": {
      "op": "DUP2"
    },
    "3146": {
      "op": "AND"
    },
    "3147": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3149": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP4",
      "path": "0"
    },
    "3150": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "ADD",
      "path": "0"
    },
    "3151": {
      "op": "MSTORE"
    },
    "3152": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8672],
      "op": "SWAP1",
      "path": "0"
    },
    "3153": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8672],
      "op": "SWAP2",
      "path": "0"
    },
    "3154": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8672],
      "op": "AND",
      "path": "0"
    },
    "3155": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8672],
      "op": "SWAP1",
      "path": "0"
    },
    "3156": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8684],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE177DC70"
    },
    "3161": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8684],
      "op": "SWAP1",
      "path": "0"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3164": {
      "op": "ADD"
    },
    "3165": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3167": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3169": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "MLOAD",
      "path": "0"
    },
    "3170": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP1",
      "path": "0"
    },
    "3171": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP4",
      "path": "0"
    },
    "3172": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "SUB",
      "path": "0"
    },
    "3173": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP2",
      "path": "0"
    },
    "3174": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP7",
      "path": "0"
    },
    "3175": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "GAS",
      "path": "0"
    },
    "3176": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "STATICCALL",
      "path": "0"
    },
    "3177": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "ISZERO",
      "path": "0"
    },
    "3178": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP1",
      "path": "0"
    },
    "3179": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "ISZERO",
      "path": "0"
    },
    "3180": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC79"
    },
    "3183": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "JUMPI",
      "path": "0"
    },
    "3184": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3185": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3187": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP1",
      "path": "0"
    },
    "3188": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3189": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3190": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3192": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "REVERT",
      "path": "0"
    },
    "3193": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3194": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "POP",
      "path": "0"
    },
    "3195": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "POP",
      "path": "0"
    },
    "3196": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "POP",
      "path": "0"
    },
    "3197": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "POP",
      "path": "0"
    },
    "3198": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3200": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "MLOAD",
      "path": "0"
    },
    "3201": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3202": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3204": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "NOT",
      "path": "0"
    },
    "3205": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3207": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP3",
      "path": "0"
    },
    "3208": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "ADD",
      "path": "0"
    },
    "3209": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "AND",
      "path": "0"
    },
    "3210": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP3",
      "path": "0"
    },
    "3211": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "ADD",
      "path": "0"
    },
    "3212": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP1",
      "path": "0"
    },
    "3213": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3215": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "MSTORE",
      "path": "0"
    },
    "3216": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "POP",
      "path": "0"
    },
    "3217": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "DUP2",
      "path": "0"
    },
    "3218": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "ADD",
      "path": "0"
    },
    "3219": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "SWAP1",
      "path": "0"
    },
    "3220": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9D"
    },
    "3223": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "SWAP2",
      "path": "0"
    },
    "3224": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "SWAP1",
      "path": "0"
    },
    "3225": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F93"
    },
    "3228": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [8664, 8700],
      "op": "JUMP",
      "path": "0"
    },
    "3229": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8664, 8700],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3230": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8656, 8700],
      "op": "SWAP1",
      "path": "0"
    },
    "3231": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8656, 8700],
      "op": "POP",
      "path": "0"
    },
    "3232": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8613, 8790],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1C"
    },
    "3235": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8613, 8790],
      "op": "JUMP",
      "path": "0"
    },
    "3236": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8613, 8790],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3237": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8747],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x1"
    },
    "3239": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8747],
      "op": "SLOAD",
      "path": "0"
    },
    "3240": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3242": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "MLOAD",
      "path": "0"
    },
    "3243": {
      "op": "PUSH4",
      "value": "0x3DDFE34F"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3250": {
      "op": "SHL"
    },
    "3251": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP2",
      "path": "0"
    },
    "3252": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "MSTORE",
      "path": "0"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3259": {
      "op": "SHL"
    },
    "3260": {
      "op": "SUB"
    },
    "3261": {
      "op": "DUP11"
    },
    "3262": {
      "op": "DUP2"
    },
    "3263": {
      "op": "AND"
    },
    "3264": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3266": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP4",
      "path": "0"
    },
    "3267": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "ADD",
      "path": "0"
    },
    "3268": {
      "op": "MSTORE"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "ADD"
    },
    "3273": {
      "op": "DUP8"
    },
    "3274": {
      "op": "SWAP1"
    },
    "3275": {
      "op": "MSTORE"
    },
    "3276": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8747],
      "op": "SWAP1",
      "path": "0"
    },
    "3277": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8747],
      "op": "SWAP2",
      "path": "0"
    },
    "3278": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8747],
      "op": "AND",
      "path": "0"
    },
    "3279": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8747],
      "op": "SWAP1",
      "path": "0"
    },
    "3280": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8754],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BBFC69E"
    },
    "3285": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8754],
      "op": "SWAP1",
      "path": "0"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3288": {
      "op": "ADD"
    },
    "3289": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3291": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3293": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "MLOAD",
      "path": "0"
    },
    "3294": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP1",
      "path": "0"
    },
    "3295": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP4",
      "path": "0"
    },
    "3296": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "SUB",
      "path": "0"
    },
    "3297": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP2",
      "path": "0"
    },
    "3298": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP7",
      "path": "0"
    },
    "3299": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "GAS",
      "path": "0"
    },
    "3300": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "STATICCALL",
      "path": "0"
    },
    "3301": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "ISZERO",
      "path": "0"
    },
    "3302": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP1",
      "path": "0"
    },
    "3303": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "ISZERO",
      "path": "0"
    },
    "3304": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF5"
    },
    "3307": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "JUMPI",
      "path": "0"
    },
    "3308": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3309": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3311": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP1",
      "path": "0"
    },
    "3312": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3313": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3314": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3316": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "REVERT",
      "path": "0"
    },
    "3317": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3318": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "POP",
      "path": "0"
    },
    "3319": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "POP",
      "path": "0"
    },
    "3320": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "POP",
      "path": "0"
    },
    "3321": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "POP",
      "path": "0"
    },
    "3322": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3324": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "MLOAD",
      "path": "0"
    },
    "3325": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3326": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3328": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "NOT",
      "path": "0"
    },
    "3329": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3331": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP3",
      "path": "0"
    },
    "3332": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "ADD",
      "path": "0"
    },
    "3333": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "AND",
      "path": "0"
    },
    "3334": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP3",
      "path": "0"
    },
    "3335": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "ADD",
      "path": "0"
    },
    "3336": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP1",
      "path": "0"
    },
    "3337": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3339": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "MSTORE",
      "path": "0"
    },
    "3340": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "POP",
      "path": "0"
    },
    "3341": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "DUP2",
      "path": "0"
    },
    "3342": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "ADD",
      "path": "0"
    },
    "3343": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "SWAP1",
      "path": "0"
    },
    "3344": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD19"
    },
    "3347": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "SWAP2",
      "path": "0"
    },
    "3348": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "SWAP1",
      "path": "0"
    },
    "3349": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F93"
    },
    "3352": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [8739, 8779],
      "op": "JUMP",
      "path": "0"
    },
    "3353": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8739, 8779],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3354": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8731, 8779],
      "op": "SWAP1",
      "path": "0"
    },
    "3355": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8731, 8779],
      "op": "POP",
      "path": "0"
    },
    "3356": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8613, 8790],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3357": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3359": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "MLOAD",
      "path": "0"
    },
    "3360": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3367": {
      "op": "SHL"
    },
    "3368": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP2",
      "path": "0"
    },
    "3369": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "MSTORE",
      "path": "0"
    },
    "3370": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8828, 8832],
      "op": "ADDRESS",
      "path": "0"
    },
    "3371": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3373": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP3",
      "path": "0"
    },
    "3374": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "ADD",
      "path": "0"
    },
    "3375": {
      "op": "MSTORE"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3382": {
      "op": "SHL"
    },
    "3383": {
      "op": "SUB"
    },
    "3384": {
      "op": "DUP3"
    },
    "3385": {
      "op": "DUP2"
    },
    "3386": {
      "op": "AND"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3389": {
      "op": "DUP4"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "MSTORE"
    },
    "3392": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8853, 8859],
      "op": "DUP7",
      "path": "0"
    },
    "3393": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8853, 8859],
      "op": "SWAP2",
      "path": "0"
    },
    "3394": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8819],
      "op": "SWAP1",
      "path": "0"
    },
    "3395": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8819],
      "op": "DUP11",
      "path": "0"
    },
    "3396": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8819],
      "op": "AND",
      "path": "0"
    },
    "3397": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8819],
      "op": "SWAP1",
      "path": "0"
    },
    "3398": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8819],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "3403": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8819],
      "op": "SWAP1",
      "path": "0"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3406": {
      "op": "ADD"
    },
    "3407": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3409": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3411": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "MLOAD",
      "path": "0"
    },
    "3412": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP1",
      "path": "0"
    },
    "3413": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP4",
      "path": "0"
    },
    "3414": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "SUB",
      "path": "0"
    },
    "3415": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP2",
      "path": "0"
    },
    "3416": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP7",
      "path": "0"
    },
    "3417": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "GAS",
      "path": "0"
    },
    "3418": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "STATICCALL",
      "path": "0"
    },
    "3419": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "ISZERO",
      "path": "0"
    },
    "3420": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP1",
      "path": "0"
    },
    "3421": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "ISZERO",
      "path": "0"
    },
    "3422": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6B"
    },
    "3425": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "JUMPI",
      "path": "0"
    },
    "3426": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3427": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3429": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP1",
      "path": "0"
    },
    "3430": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3431": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3432": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3434": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "REVERT",
      "path": "0"
    },
    "3435": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3436": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "POP",
      "path": "0"
    },
    "3437": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "POP",
      "path": "0"
    },
    "3438": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "POP",
      "path": "0"
    },
    "3439": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "POP",
      "path": "0"
    },
    "3440": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3442": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "MLOAD",
      "path": "0"
    },
    "3443": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3444": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3446": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "NOT",
      "path": "0"
    },
    "3447": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3449": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP3",
      "path": "0"
    },
    "3450": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "ADD",
      "path": "0"
    },
    "3451": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "AND",
      "path": "0"
    },
    "3452": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP3",
      "path": "0"
    },
    "3453": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "ADD",
      "path": "0"
    },
    "3454": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP1",
      "path": "0"
    },
    "3455": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3457": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "MSTORE",
      "path": "0"
    },
    "3458": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "POP",
      "path": "0"
    },
    "3459": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "DUP2",
      "path": "0"
    },
    "3460": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "ADD",
      "path": "0"
    },
    "3461": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "SWAP1",
      "path": "0"
    },
    "3462": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8F"
    },
    "3465": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "SWAP2",
      "path": "0"
    },
    "3466": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "SWAP1",
      "path": "0"
    },
    "3467": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "3470": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [8804, 8850],
      "op": "JUMP",
      "path": "0"
    },
    "3471": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8850],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3472": {
      "branch": 73,
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8804, 8859],
      "op": "LT",
      "path": "0"
    },
    "3473": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8800, 9078],
      "op": "ISZERO",
      "path": "0"
    },
    "3474": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8800, 9078],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDAE"
    },
    "3477": {
      "branch": 73,
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8800, 9078],
      "op": "JUMPI",
      "path": "0"
    },
    "3478": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8875, 8922],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xDA1"
    },
    "3481": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8897, 8902],
      "op": "DUP9",
      "path": "0"
    },
    "3482": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8912, 8917],
      "op": "DUP3",
      "path": "0"
    },
    "3483": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8920, 8921],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3485": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8875, 8896],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B8"
    },
    "3488": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [8875, 8922],
      "op": "JUMP",
      "path": "0"
    },
    "3489": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8875, 8922],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3490": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8981, 9045],
      "op": "PUSH2",
      "path": "0",
      "statement": 31,
      "value": "0xDAE"
    },
    "3493": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9003, 9008],
      "op": "DUP9",
      "path": "0"
    },
    "3494": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9018, 9023],
      "op": "DUP3",
      "path": "0"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3497": {
      "op": "NOT"
    },
    "3498": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8981, 9002],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19B8"
    },
    "3501": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [8981, 9045],
      "op": "JUMP",
      "path": "0"
    },
    "3502": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8981, 9045],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3505": {
      "op": "NOT"
    },
    "3506": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9092, 9098],
      "op": "DUP6",
      "path": "0"
    },
    "3507": {
      "branch": 74,
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9092, 9120],
      "op": "EQ",
      "path": "0"
    },
    "3508": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9088, 9157],
      "op": "ISZERO",
      "path": "0"
    },
    "3509": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9088, 9157],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE25"
    },
    "3512": {
      "branch": 74,
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9088, 9157],
      "op": "JUMPI",
      "path": "0"
    },
    "3513": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x40"
    },
    "3515": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "MLOAD",
      "path": "0"
    },
    "3516": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3523": {
      "op": "SHL"
    },
    "3524": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP2",
      "path": "0"
    },
    "3525": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "MSTORE",
      "path": "0"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3532": {
      "op": "SHL"
    },
    "3533": {
      "op": "SUB"
    },
    "3534": {
      "op": "DUP9"
    },
    "3535": {
      "op": "DUP2"
    },
    "3536": {
      "op": "AND"
    },
    "3537": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3539": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP4",
      "path": "0"
    },
    "3540": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "ADD",
      "path": "0"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9146],
      "op": "DUP10",
      "path": "0"
    },
    "3543": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9146],
      "op": "AND",
      "path": "0"
    },
    "3544": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9146],
      "op": "SWAP1",
      "path": "0"
    },
    "3545": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9146],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "3550": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9146],
      "op": "SWAP1",
      "path": "0"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3553": {
      "op": "ADD"
    },
    "3554": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3556": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3558": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "MLOAD",
      "path": "0"
    },
    "3559": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP1",
      "path": "0"
    },
    "3560": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP4",
      "path": "0"
    },
    "3561": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "SUB",
      "path": "0"
    },
    "3562": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP2",
      "path": "0"
    },
    "3563": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP7",
      "path": "0"
    },
    "3564": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "GAS",
      "path": "0"
    },
    "3565": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "STATICCALL",
      "path": "0"
    },
    "3566": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "ISZERO",
      "path": "0"
    },
    "3567": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP1",
      "path": "0"
    },
    "3568": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "ISZERO",
      "path": "0"
    },
    "3569": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFE"
    },
    "3572": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "JUMPI",
      "path": "0"
    },
    "3573": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3574": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3576": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP1",
      "path": "0"
    },
    "3577": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3578": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3579": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3581": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "REVERT",
      "path": "0"
    },
    "3582": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3583": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "POP",
      "path": "0"
    },
    "3584": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "POP",
      "path": "0"
    },
    "3585": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "POP",
      "path": "0"
    },
    "3586": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "POP",
      "path": "0"
    },
    "3587": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3589": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "MLOAD",
      "path": "0"
    },
    "3590": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3591": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3593": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "NOT",
      "path": "0"
    },
    "3594": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3596": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP3",
      "path": "0"
    },
    "3597": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "ADD",
      "path": "0"
    },
    "3598": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "AND",
      "path": "0"
    },
    "3599": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP3",
      "path": "0"
    },
    "3600": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "ADD",
      "path": "0"
    },
    "3601": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP1",
      "path": "0"
    },
    "3602": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3604": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "MSTORE",
      "path": "0"
    },
    "3605": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "POP",
      "path": "0"
    },
    "3606": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "DUP2",
      "path": "0"
    },
    "3607": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "ADD",
      "path": "0"
    },
    "3608": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "SWAP1",
      "path": "0"
    },
    "3609": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE22"
    },
    "3612": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "SWAP2",
      "path": "0"
    },
    "3613": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "SWAP1",
      "path": "0"
    },
    "3614": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "3617": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [9131, 9157],
      "op": "JUMP",
      "path": "0"
    },
    "3618": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9131, 9157],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3619": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9122, 9157],
      "op": "SWAP5",
      "path": "0"
    },
    "3620": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9122, 9157],
      "op": "POP",
      "path": "0"
    },
    "3621": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9088, 9157],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3622": {
      "branch": 75,
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9172, 9181],
      "op": "DUP2",
      "path": "0"
    },
    "3623": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9168, 9751],
      "op": "ISZERO",
      "path": "0"
    },
    "3624": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9168, 9751],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAA"
    },
    "3627": {
      "branch": 75,
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9168, 9751],
      "op": "JUMPI",
      "path": "0"
    },
    "3628": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3630": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "MLOAD",
      "path": "0"
    },
    "3631": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3638": {
      "op": "SHL"
    },
    "3639": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP2",
      "path": "0"
    },
    "3640": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "MSTORE",
      "path": "0"
    },
    "3641": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9241, 9245],
      "op": "ADDRESS",
      "path": "0"
    },
    "3642": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3644": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP3",
      "path": "0"
    },
    "3645": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "ADD",
      "path": "0"
    },
    "3646": {
      "op": "MSTORE"
    },
    "3647": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9197, 9214],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3649": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9197, 9214],
      "op": "SWAP1",
      "path": "0"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3656": {
      "op": "SHL"
    },
    "3657": {
      "op": "SUB"
    },
    "3658": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9232],
      "op": "DUP11",
      "path": "0"
    },
    "3659": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9232],
      "op": "AND",
      "path": "0"
    },
    "3660": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9232],
      "op": "SWAP1",
      "path": "0"
    },
    "3661": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9232],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "3666": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9232],
      "op": "SWAP1",
      "path": "0"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3669": {
      "op": "ADD"
    },
    "3670": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3672": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3674": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "MLOAD",
      "path": "0"
    },
    "3675": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP1",
      "path": "0"
    },
    "3676": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP4",
      "path": "0"
    },
    "3677": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "SUB",
      "path": "0"
    },
    "3678": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP2",
      "path": "0"
    },
    "3679": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP7",
      "path": "0"
    },
    "3680": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "GAS",
      "path": "0"
    },
    "3681": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "STATICCALL",
      "path": "0"
    },
    "3682": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "ISZERO",
      "path": "0"
    },
    "3683": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP1",
      "path": "0"
    },
    "3684": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "ISZERO",
      "path": "0"
    },
    "3685": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE72"
    },
    "3688": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "JUMPI",
      "path": "0"
    },
    "3689": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3690": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3692": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP1",
      "path": "0"
    },
    "3693": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3694": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3695": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3697": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "REVERT",
      "path": "0"
    },
    "3698": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3699": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "POP",
      "path": "0"
    },
    "3700": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "POP",
      "path": "0"
    },
    "3701": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "POP",
      "path": "0"
    },
    "3702": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "POP",
      "path": "0"
    },
    "3703": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3705": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "MLOAD",
      "path": "0"
    },
    "3706": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3707": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3709": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "NOT",
      "path": "0"
    },
    "3710": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3712": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP3",
      "path": "0"
    },
    "3713": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "ADD",
      "path": "0"
    },
    "3714": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "AND",
      "path": "0"
    },
    "3715": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP3",
      "path": "0"
    },
    "3716": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "ADD",
      "path": "0"
    },
    "3717": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP1",
      "path": "0"
    },
    "3718": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3720": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "MSTORE",
      "path": "0"
    },
    "3721": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "POP",
      "path": "0"
    },
    "3722": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "DUP2",
      "path": "0"
    },
    "3723": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "ADD",
      "path": "0"
    },
    "3724": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "SWAP1",
      "path": "0"
    },
    "3725": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE96"
    },
    "3728": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "SWAP2",
      "path": "0"
    },
    "3729": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "SWAP1",
      "path": "0"
    },
    "3730": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "3733": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [9217, 9247],
      "op": "JUMP",
      "path": "0"
    },
    "3734": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9217, 9247],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3735": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9197, 9247],
      "op": "SWAP1",
      "path": "0"
    },
    "3736": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9197, 9247],
      "op": "POP",
      "path": "0"
    },
    "3737": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9261, 9328],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0xEA4"
    },
    "3740": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9288, 9293],
      "op": "DUP10",
      "path": "0"
    },
    "3741": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9295, 9304],
      "op": "DUP10",
      "path": "0"
    },
    "3742": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9314, 9318],
      "op": "ADDRESS",
      "path": "0"
    },
    "3743": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9321, 9327],
      "op": "DUP10",
      "path": "0"
    },
    "3744": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9261, 9287],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B05"
    },
    "3747": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [9261, 9328],
      "op": "JUMP",
      "path": "0"
    },
    "3748": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9261, 9328],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3749": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x40"
    },
    "3751": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "MLOAD",
      "path": "0"
    },
    "3752": {
      "op": "PUSH4",
      "value": "0x6E553F65"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3759": {
      "op": "SHL"
    },
    "3760": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP2",
      "path": "0"
    },
    "3761": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "MSTORE",
      "path": "0"
    },
    "3762": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3764": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP2",
      "path": "0"
    },
    "3765": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "ADD",
      "path": "0"
    },
    "3766": {
      "op": "DUP8"
    },
    "3767": {
      "op": "SWAP1"
    },
    "3768": {
      "op": "MSTORE"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3775": {
      "op": "SHL"
    },
    "3776": {
      "op": "SUB"
    },
    "3777": {
      "op": "DUP9"
    },
    "3778": {
      "op": "DUP2"
    },
    "3779": {
      "op": "AND"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3782": {
      "op": "DUP4"
    },
    "3783": {
      "op": "ADD"
    },
    "3784": {
      "op": "MSTORE"
    },
    "3785": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9365],
      "op": "DUP4",
      "path": "0"
    },
    "3786": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9365],
      "op": "AND",
      "path": "0"
    },
    "3787": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9365],
      "op": "SWAP1",
      "path": "0"
    },
    "3788": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9365],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6E553F65"
    },
    "3793": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9365],
      "op": "SWAP1",
      "path": "0"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3796": {
      "op": "ADD"
    },
    "3797": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3799": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3801": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "MLOAD",
      "path": "0"
    },
    "3802": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP1",
      "path": "0"
    },
    "3803": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP4",
      "path": "0"
    },
    "3804": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "SUB",
      "path": "0"
    },
    "3805": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP2",
      "path": "0"
    },
    "3806": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3808": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP8",
      "path": "0"
    },
    "3809": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "GAS",
      "path": "0"
    },
    "3810": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "CALL",
      "path": "0"
    },
    "3811": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "ISZERO",
      "path": "0"
    },
    "3812": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP1",
      "path": "0"
    },
    "3813": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "ISZERO",
      "path": "0"
    },
    "3814": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEF3"
    },
    "3817": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "JUMPI",
      "path": "0"
    },
    "3818": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3819": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3821": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP1",
      "path": "0"
    },
    "3822": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3823": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3824": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3826": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "REVERT",
      "path": "0"
    },
    "3827": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3828": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "POP",
      "path": "0"
    },
    "3829": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "POP",
      "path": "0"
    },
    "3830": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "POP",
      "path": "0"
    },
    "3831": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "POP",
      "path": "0"
    },
    "3832": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3834": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "MLOAD",
      "path": "0"
    },
    "3835": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3836": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3838": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "NOT",
      "path": "0"
    },
    "3839": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3841": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP3",
      "path": "0"
    },
    "3842": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "ADD",
      "path": "0"
    },
    "3843": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "AND",
      "path": "0"
    },
    "3844": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP3",
      "path": "0"
    },
    "3845": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "ADD",
      "path": "0"
    },
    "3846": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP1",
      "path": "0"
    },
    "3847": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3849": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "MSTORE",
      "path": "0"
    },
    "3850": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "POP",
      "path": "0"
    },
    "3851": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "DUP2",
      "path": "0"
    },
    "3852": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "ADD",
      "path": "0"
    },
    "3853": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "SWAP1",
      "path": "0"
    },
    "3854": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF17"
    },
    "3857": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "SWAP2",
      "path": "0"
    },
    "3858": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "SWAP1",
      "path": "0"
    },
    "3859": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "3862": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [9352, 9384],
      "op": "JUMP",
      "path": "0"
    },
    "3863": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9352, 9384],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3864": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3866": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "MLOAD",
      "path": "0"
    },
    "3867": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3874": {
      "op": "SHL"
    },
    "3875": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP2",
      "path": "0"
    },
    "3876": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "MSTORE",
      "path": "0"
    },
    "3877": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9450, 9454],
      "op": "ADDRESS",
      "path": "0"
    },
    "3878": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3880": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP3",
      "path": "0"
    },
    "3881": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "ADD",
      "path": "0"
    },
    "3882": {
      "op": "MSTORE"
    },
    "3883": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9343, 9384],
      "op": "SWAP1",
      "path": "0"
    },
    "3884": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9343, 9384],
      "op": "SWAP5",
      "path": "0"
    },
    "3885": {
      "op": "POP"
    },
    "3886": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9399, 9423],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3888": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9399, 9423],
      "op": "SWAP1",
      "path": "0"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3895": {
      "op": "SHL"
    },
    "3896": {
      "op": "SUB"
    },
    "3897": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9441],
      "op": "DUP12",
      "path": "0"
    },
    "3898": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9441],
      "op": "AND",
      "path": "0"
    },
    "3899": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9441],
      "op": "SWAP1",
      "path": "0"
    },
    "3900": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9441],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "3905": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9441],
      "op": "SWAP1",
      "path": "0"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3908": {
      "op": "ADD"
    },
    "3909": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3911": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3913": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "MLOAD",
      "path": "0"
    },
    "3914": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP1",
      "path": "0"
    },
    "3915": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP4",
      "path": "0"
    },
    "3916": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "SUB",
      "path": "0"
    },
    "3917": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP2",
      "path": "0"
    },
    "3918": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP7",
      "path": "0"
    },
    "3919": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "GAS",
      "path": "0"
    },
    "3920": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "STATICCALL",
      "path": "0"
    },
    "3921": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "ISZERO",
      "path": "0"
    },
    "3922": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP1",
      "path": "0"
    },
    "3923": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "ISZERO",
      "path": "0"
    },
    "3924": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF61"
    },
    "3927": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "JUMPI",
      "path": "0"
    },
    "3928": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3929": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3931": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP1",
      "path": "0"
    },
    "3932": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3933": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3934": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3936": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "REVERT",
      "path": "0"
    },
    "3937": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3938": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "POP",
      "path": "0"
    },
    "3939": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "POP",
      "path": "0"
    },
    "3940": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "POP",
      "path": "0"
    },
    "3941": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "POP",
      "path": "0"
    },
    "3942": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3944": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "MLOAD",
      "path": "0"
    },
    "3945": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3946": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3948": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "NOT",
      "path": "0"
    },
    "3949": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3951": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP3",
      "path": "0"
    },
    "3952": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "ADD",
      "path": "0"
    },
    "3953": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "AND",
      "path": "0"
    },
    "3954": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP3",
      "path": "0"
    },
    "3955": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "ADD",
      "path": "0"
    },
    "3956": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP1",
      "path": "0"
    },
    "3957": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3959": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "MSTORE",
      "path": "0"
    },
    "3960": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "POP",
      "path": "0"
    },
    "3961": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "DUP2",
      "path": "0"
    },
    "3962": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "ADD",
      "path": "0"
    },
    "3963": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "SWAP1",
      "path": "0"
    },
    "3964": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF85"
    },
    "3967": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "SWAP2",
      "path": "0"
    },
    "3968": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "SWAP1",
      "path": "0"
    },
    "3969": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "3972": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [9426, 9456],
      "op": "JUMP",
      "path": "0"
    },
    "3973": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9426, 9456],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3974": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9399, 9456],
      "op": "SWAP1",
      "path": "0"
    },
    "3975": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9399, 9456],
      "op": "POP",
      "path": "0"
    },
    "3976": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9493, 9502],
      "op": "DUP2",
      "path": "0"
    },
    "3977": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9474, 9490],
      "op": "DUP2",
      "path": "0"
    },
    "3978": {
      "branch": 76,
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9474, 9502],
      "op": "GT",
      "path": "0"
    },
    "3979": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9470, 9668],
      "op": "ISZERO",
      "path": "0"
    },
    "3980": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9470, 9668],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA3"
    },
    "3983": {
      "branch": 76,
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9470, 9668],
      "op": "JUMPI",
      "path": "0"
    },
    "3984": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9520, 9668],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0xFA3"
    },
    "3987": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9564, 9569],
      "op": "DUP11",
      "path": "0"
    },
    "3988": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9591, 9600],
      "op": "DUP11",
      "path": "0"
    },
    "3989": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9622, 9650],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9E"
    },
    "3992": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9641, 9650],
      "op": "DUP6",
      "path": "0"
    },
    "3993": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9622, 9638],
      "op": "DUP6",
      "path": "0"
    },
    "3994": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9622, 9650],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "3997": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [9622, 9650],
      "op": "JUMP",
      "path": "0"
    },
    "3998": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9622, 9650],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3999": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9520, 9542],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B43"
    },
    "4002": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [9520, 9668],
      "op": "JUMP",
      "path": "0"
    },
    "4003": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9520, 9668],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4004": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9183, 9679],
      "op": "POP",
      "path": "0"
    },
    "4005": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9183, 9679],
      "op": "POP",
      "path": "0"
    },
    "4006": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9168, 9751],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1020"
    },
    "4009": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9168, 9751],
      "op": "JUMP",
      "path": "0"
    },
    "4010": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9168, 9751],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4011": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x40"
    },
    "4013": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "MLOAD",
      "path": "0"
    },
    "4014": {
      "op": "PUSH4",
      "value": "0x6E553F65"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4021": {
      "op": "SHL"
    },
    "4022": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP2",
      "path": "0"
    },
    "4023": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "MSTORE",
      "path": "0"
    },
    "4024": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4026": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP2",
      "path": "0"
    },
    "4027": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "ADD",
      "path": "0"
    },
    "4028": {
      "op": "DUP7"
    },
    "4029": {
      "op": "SWAP1"
    },
    "4030": {
      "op": "MSTORE"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4037": {
      "op": "SHL"
    },
    "4038": {
      "op": "SUB"
    },
    "4039": {
      "op": "DUP8"
    },
    "4040": {
      "op": "DUP2"
    },
    "4041": {
      "op": "AND"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4044": {
      "op": "DUP4"
    },
    "4045": {
      "op": "ADD"
    },
    "4046": {
      "op": "MSTORE"
    },
    "4047": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9721],
      "op": "DUP3",
      "path": "0"
    },
    "4048": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9721],
      "op": "AND",
      "path": "0"
    },
    "4049": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9721],
      "op": "SWAP1",
      "path": "0"
    },
    "4050": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9721],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6E553F65"
    },
    "4055": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9721],
      "op": "SWAP1",
      "path": "0"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4058": {
      "op": "ADD"
    },
    "4059": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4061": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4063": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "MLOAD",
      "path": "0"
    },
    "4064": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP1",
      "path": "0"
    },
    "4065": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP4",
      "path": "0"
    },
    "4066": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "SUB",
      "path": "0"
    },
    "4067": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP2",
      "path": "0"
    },
    "4068": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4070": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP8",
      "path": "0"
    },
    "4071": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "GAS",
      "path": "0"
    },
    "4072": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "CALL",
      "path": "0"
    },
    "4073": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "ISZERO",
      "path": "0"
    },
    "4074": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP1",
      "path": "0"
    },
    "4075": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "ISZERO",
      "path": "0"
    },
    "4076": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF9"
    },
    "4079": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "JUMPI",
      "path": "0"
    },
    "4080": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4081": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4083": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP1",
      "path": "0"
    },
    "4084": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4085": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4086": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4088": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "REVERT",
      "path": "0"
    },
    "4089": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4090": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "POP",
      "path": "0"
    },
    "4091": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "POP",
      "path": "0"
    },
    "4092": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "POP",
      "path": "0"
    },
    "4093": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "POP",
      "path": "0"
    },
    "4094": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4096": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "MLOAD",
      "path": "0"
    },
    "4097": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4098": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4100": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "NOT",
      "path": "0"
    },
    "4101": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4103": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP3",
      "path": "0"
    },
    "4104": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "ADD",
      "path": "0"
    },
    "4105": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "AND",
      "path": "0"
    },
    "4106": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP3",
      "path": "0"
    },
    "4107": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "ADD",
      "path": "0"
    },
    "4108": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP1",
      "path": "0"
    },
    "4109": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4111": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "MSTORE",
      "path": "0"
    },
    "4112": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "POP",
      "path": "0"
    },
    "4113": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "DUP2",
      "path": "0"
    },
    "4114": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "ADD",
      "path": "0"
    },
    "4115": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "SWAP1",
      "path": "0"
    },
    "4116": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101D"
    },
    "4119": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "SWAP2",
      "path": "0"
    },
    "4120": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "SWAP1",
      "path": "0"
    },
    "4121": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "4124": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "i",
      "offset": [9708, 9740],
      "op": "JUMP",
      "path": "0"
    },
    "4125": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9708, 9740],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4126": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9699, 9740],
      "op": "SWAP3",
      "path": "0"
    },
    "4127": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9699, 9740],
      "op": "POP",
      "path": "0"
    },
    "4128": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [9168, 9751],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4129": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8525, 9757],
      "op": "POP",
      "path": "0"
    },
    "4130": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8525, 9757],
      "op": "POP",
      "path": "0"
    },
    "4131": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8342, 9757],
      "op": "SWAP6",
      "path": "0"
    },
    "4132": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8342, 9757],
      "op": "SWAP5",
      "path": "0"
    },
    "4133": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8342, 9757],
      "op": "POP",
      "path": "0"
    },
    "4134": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8342, 9757],
      "op": "POP",
      "path": "0"
    },
    "4135": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8342, 9757],
      "op": "POP",
      "path": "0"
    },
    "4136": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8342, 9757],
      "op": "POP",
      "path": "0"
    },
    "4137": {
      "fn": "ShapeShiftDAORouter._deposit",
      "offset": [8342, 9757],
      "op": "POP",
      "path": "0"
    },
    "4138": {
      "fn": "ShapeShiftDAORouter._deposit",
      "jump": "o",
      "offset": [8342, 9757],
      "op": "JUMP",
      "path": "0"
    },
    "4139": {
      "fn": "Ownable._transferOwnership",
      "offset": [2270, 2457],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4140": {
      "fn": "Ownable._transferOwnership",
      "offset": [2343, 2359],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4142": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "DUP1",
      "path": "2"
    },
    "4143": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SLOAD",
      "path": "2"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4150": {
      "op": "SHL"
    },
    "4151": {
      "op": "SUB"
    },
    "4152": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP4",
      "path": "2",
      "statement": 37
    },
    "4153": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP2",
      "path": "2"
    },
    "4154": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "AND",
      "path": "2"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4161": {
      "op": "SHL"
    },
    "4162": {
      "op": "SUB"
    },
    "4163": {
      "op": "NOT"
    },
    "4164": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP4",
      "path": "2"
    },
    "4165": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "AND",
      "path": "2"
    },
    "4166": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP2",
      "path": "2"
    },
    "4167": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "OR",
      "path": "2"
    },
    "4168": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP5",
      "path": "2"
    },
    "4169": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "SSTORE",
      "path": "2"
    },
    "4170": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x40"
    },
    "4172": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "MLOAD",
      "path": "2"
    },
    "4173": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP2",
      "path": "2"
    },
    "4174": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP1",
      "path": "2"
    },
    "4175": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP3",
      "path": "2"
    },
    "4176": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "AND",
      "path": "2"
    },
    "4177": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP3",
      "path": "2"
    },
    "4178": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "DUP4",
      "path": "2"
    },
    "4179": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP2",
      "path": "2"
    },
    "4180": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4213": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "SWAP2",
      "path": "2"
    },
    "4214": {
      "fn": "Ownable._transferOwnership",
      "offset": [2343, 2359],
      "op": "SWAP1",
      "path": "2"
    },
    "4215": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "LOG3",
      "path": "2"
    },
    "4216": {
      "fn": "Ownable._transferOwnership",
      "offset": [2333, 2457],
      "op": "POP",
      "path": "2"
    },
    "4217": {
      "fn": "Ownable._transferOwnership",
      "offset": [2270, 2457],
      "op": "POP",
      "path": "2"
    },
    "4218": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [2270, 2457],
      "op": "JUMP",
      "path": "2"
    },
    "4219": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13557, 15967],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4220": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13760, 13777],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4222": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13813, 13824],
      "op": "DUP2",
      "path": "0",
      "statement": 39
    },
    "4223": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13797, 13809],
      "op": "DUP4",
      "path": "0"
    },
    "4224": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13797, 13824],
      "op": "GT",
      "path": "0"
    },
    "4225": {
      "branch": 77,
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13797, 13824],
      "op": "ISZERO",
      "path": "0"
    },
    "4226": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13789, 13825],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108A"
    },
    "4229": {
      "branch": 77,
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13789, 13825],
      "op": "JUMPI",
      "path": "0"
    },
    "4230": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13789, 13825],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4232": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13789, 13825],
      "op": "DUP1",
      "path": "0"
    },
    "4233": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13789, 13825],
      "op": "REVERT",
      "path": "0"
    },
    "4234": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13789, 13825],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4235": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13859, 13870],
      "op": "DUP2",
      "path": "0"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4238": {
      "op": "NOT"
    },
    "4239": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13884, 13912],
      "op": "DUP2",
      "path": "0"
    },
    "4240": {
      "branch": 78,
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13884, 13912],
      "op": "EQ",
      "path": "0"
    },
    "4241": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13880, 13979],
      "op": "ISZERO",
      "path": "0"
    },
    "4242": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13880, 13979],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1111"
    },
    "4245": {
      "branch": 78,
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13880, 13979],
      "op": "JUMPI",
      "path": "0"
    },
    "4246": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13978, 13979],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x1"
    },
    "4248": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13949],
      "op": "DUP1",
      "path": "0"
    },
    "4249": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13949],
      "op": "SLOAD",
      "path": "0"
    },
    "4250": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4252": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "MLOAD",
      "path": "0"
    },
    "4253": {
      "op": "PUSH4",
      "value": "0xF9C7BBA5"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4260": {
      "op": "SHL"
    },
    "4261": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP2",
      "path": "0"
    },
    "4262": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "MSTORE",
      "path": "0"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4269": {
      "op": "SHL"
    },
    "4270": {
      "op": "SUB"
    },
    "4271": {
      "op": "DUP12"
    },
    "4272": {
      "op": "DUP2"
    },
    "4273": {
      "op": "AND"
    },
    "4274": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4276": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP4",
      "path": "0"
    },
    "4277": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "ADD",
      "path": "0"
    },
    "4278": {
      "op": "MSTORE"
    },
    "4279": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13949],
      "op": "SWAP1",
      "path": "0"
    },
    "4280": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13949],
      "op": "SWAP2",
      "path": "0"
    },
    "4281": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13949],
      "op": "AND",
      "path": "0"
    },
    "4282": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13949],
      "op": "SWAP1",
      "path": "0"
    },
    "4283": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13959],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF9C7BBA5"
    },
    "4288": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13959],
      "op": "SWAP1",
      "path": "0"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4291": {
      "op": "ADD"
    },
    "4292": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4294": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4296": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "MLOAD",
      "path": "0"
    },
    "4297": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP1",
      "path": "0"
    },
    "4298": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP4",
      "path": "0"
    },
    "4299": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "SUB",
      "path": "0"
    },
    "4300": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP2",
      "path": "0"
    },
    "4301": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP7",
      "path": "0"
    },
    "4302": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "GAS",
      "path": "0"
    },
    "4303": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "STATICCALL",
      "path": "0"
    },
    "4304": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "ISZERO",
      "path": "0"
    },
    "4305": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP1",
      "path": "0"
    },
    "4306": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "ISZERO",
      "path": "0"
    },
    "4307": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E0"
    },
    "4310": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "JUMPI",
      "path": "0"
    },
    "4311": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4312": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4314": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP1",
      "path": "0"
    },
    "4315": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4316": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4317": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4319": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "REVERT",
      "path": "0"
    },
    "4320": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4321": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "POP",
      "path": "0"
    },
    "4322": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "POP",
      "path": "0"
    },
    "4323": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "POP",
      "path": "0"
    },
    "4324": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "POP",
      "path": "0"
    },
    "4325": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4327": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "MLOAD",
      "path": "0"
    },
    "4328": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4329": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4331": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "NOT",
      "path": "0"
    },
    "4332": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4334": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP3",
      "path": "0"
    },
    "4335": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "ADD",
      "path": "0"
    },
    "4336": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "AND",
      "path": "0"
    },
    "4337": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP3",
      "path": "0"
    },
    "4338": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "ADD",
      "path": "0"
    },
    "4339": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP1",
      "path": "0"
    },
    "4340": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4342": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "MSTORE",
      "path": "0"
    },
    "4343": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "POP",
      "path": "0"
    },
    "4344": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "DUP2",
      "path": "0"
    },
    "4345": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "ADD",
      "path": "0"
    },
    "4346": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "SWAP1",
      "path": "0"
    },
    "4347": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1104"
    },
    "4350": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "SWAP2",
      "path": "0"
    },
    "4351": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "SWAP1",
      "path": "0"
    },
    "4352": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "4355": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [13941, 13975],
      "op": "JUMP",
      "path": "0"
    },
    "4356": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13975],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4357": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13979],
      "op": "PUSH2",
      "path": "0",
      "value": "0x110E"
    },
    "4360": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13979],
      "op": "SWAP2",
      "path": "0"
    },
    "4361": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13979],
      "op": "SWAP1",
      "path": "0"
    },
    "4362": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13979],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "4365": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [13941, 13979],
      "op": "JUMP",
      "path": "0"
    },
    "4366": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13941, 13979],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4367": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13926, 13979],
      "op": "SWAP1",
      "path": "0"
    },
    "4368": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13926, 13979],
      "op": "POP",
      "path": "0"
    },
    "4369": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13880, 13979],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4370": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14020, 14032],
      "op": "DUP4",
      "path": "0"
    },
    "4371": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13990, 15961],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4372": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14062, 14068],
      "op": "DUP6",
      "path": "0"
    },
    "4373": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14059],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111F"
    },
    "4376": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14055],
      "op": "DUP5",
      "path": "0"
    },
    "4377": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14058, 14059],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4379": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14059],
      "op": "PUSH2",
      "path": "0",
      "value": "0x210E"
    },
    "4382": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14046, 14059],
      "op": "JUMP",
      "path": "0"
    },
    "4383": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14059],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4384": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14068],
      "op": "LT",
      "path": "0"
    },
    "4385": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14089],
      "op": "DUP1",
      "path": "0"
    },
    "4386": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14089],
      "op": "ISZERO",
      "path": "0"
    },
    "4387": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14089],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112C"
    },
    "4390": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14089],
      "op": "JUMPI",
      "path": "0"
    },
    "4391": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14089],
      "op": "POP",
      "path": "0"
    },
    "4392": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14077, 14089],
      "op": "DUP2",
      "path": "0"
    },
    "4393": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14072, 14073],
      "op": "DUP2",
      "path": "0"
    },
    "4394": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14072, 14089],
      "op": "GT",
      "path": "0"
    },
    "4395": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14072, 14089],
      "op": "ISZERO",
      "path": "0"
    },
    "4396": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14046, 14089],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4397": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13990, 15961],
      "op": "ISZERO",
      "path": "0"
    },
    "4398": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13990, 15961],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158B"
    },
    "4401": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13990, 15961],
      "op": "JUMPI",
      "path": "0"
    },
    "4402": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14156],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4404": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14156],
      "op": "SLOAD",
      "path": "0"
    },
    "4405": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4407": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "MLOAD",
      "path": "0"
    },
    "4408": {
      "op": "PUSH4",
      "value": "0x3DDFE34F"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4415": {
      "op": "SHL"
    },
    "4416": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP2",
      "path": "0"
    },
    "4417": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "MSTORE",
      "path": "0"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4424": {
      "op": "SHL"
    },
    "4425": {
      "op": "SUB"
    },
    "4426": {
      "op": "DUP12"
    },
    "4427": {
      "op": "DUP2"
    },
    "4428": {
      "op": "AND"
    },
    "4429": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4431": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP4",
      "path": "0"
    },
    "4432": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "ADD",
      "path": "0"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4436": {
      "op": "DUP3"
    },
    "4437": {
      "op": "ADD"
    },
    "4438": {
      "op": "DUP5"
    },
    "4439": {
      "op": "SWAP1"
    },
    "4440": {
      "op": "MSTORE"
    },
    "4441": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14131, 14145],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4443": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14131, 14145],
      "op": "SWAP3",
      "path": "0"
    },
    "4444": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14156],
      "op": "AND",
      "path": "0"
    },
    "4445": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14156],
      "op": "SWAP1",
      "path": "0"
    },
    "4446": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14163],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BBFC69E"
    },
    "4451": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14163],
      "op": "SWAP1",
      "path": "0"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4454": {
      "op": "ADD"
    },
    "4455": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4457": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4459": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "MLOAD",
      "path": "0"
    },
    "4460": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP1",
      "path": "0"
    },
    "4461": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP4",
      "path": "0"
    },
    "4462": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "SUB",
      "path": "0"
    },
    "4463": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP2",
      "path": "0"
    },
    "4464": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP7",
      "path": "0"
    },
    "4465": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "GAS",
      "path": "0"
    },
    "4466": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "STATICCALL",
      "path": "0"
    },
    "4467": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "ISZERO",
      "path": "0"
    },
    "4468": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP1",
      "path": "0"
    },
    "4469": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "ISZERO",
      "path": "0"
    },
    "4470": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1183"
    },
    "4473": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "JUMPI",
      "path": "0"
    },
    "4474": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4475": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4477": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP1",
      "path": "0"
    },
    "4478": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4479": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4480": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4482": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "REVERT",
      "path": "0"
    },
    "4483": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4484": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "POP",
      "path": "0"
    },
    "4485": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "POP",
      "path": "0"
    },
    "4486": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "POP",
      "path": "0"
    },
    "4487": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "POP",
      "path": "0"
    },
    "4488": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4490": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "MLOAD",
      "path": "0"
    },
    "4491": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4492": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4494": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "NOT",
      "path": "0"
    },
    "4495": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4497": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP3",
      "path": "0"
    },
    "4498": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "ADD",
      "path": "0"
    },
    "4499": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "AND",
      "path": "0"
    },
    "4500": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP3",
      "path": "0"
    },
    "4501": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "ADD",
      "path": "0"
    },
    "4502": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP1",
      "path": "0"
    },
    "4503": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4505": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "MSTORE",
      "path": "0"
    },
    "4506": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "POP",
      "path": "0"
    },
    "4507": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "DUP2",
      "path": "0"
    },
    "4508": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "ADD",
      "path": "0"
    },
    "4509": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "SWAP1",
      "path": "0"
    },
    "4510": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A7"
    },
    "4513": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "SWAP2",
      "path": "0"
    },
    "4514": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "SWAP1",
      "path": "0"
    },
    "4515": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F93"
    },
    "4518": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14148, 14182],
      "op": "JUMP",
      "path": "0"
    },
    "4519": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14148, 14182],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4520": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4522": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "MLOAD",
      "path": "0"
    },
    "4523": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4530": {
      "op": "SHL"
    },
    "4531": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP2",
      "path": "0"
    },
    "4532": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "MSTORE",
      "path": "0"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4539": {
      "op": "SHL"
    },
    "4540": {
      "op": "SUB"
    },
    "4541": {
      "op": "DUP12"
    },
    "4542": {
      "op": "DUP2"
    },
    "4543": {
      "op": "AND"
    },
    "4544": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4546": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP4",
      "path": "0"
    },
    "4547": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "ADD",
      "path": "0"
    },
    "4548": {
      "op": "MSTORE"
    },
    "4549": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14131, 14182],
      "op": "SWAP2",
      "path": "0"
    },
    "4550": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14131, 14182],
      "op": "SWAP3",
      "path": "0"
    },
    "4551": {
      "op": "POP"
    },
    "4552": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14197, 14220],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4554": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14197, 14220],
      "op": "SWAP2",
      "path": "0"
    },
    "4555": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14223, 14334],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1283"
    },
    "4558": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14223, 14334],
      "op": "SWAP2",
      "path": "0"
    },
    "4559": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14264],
      "op": "SWAP1",
      "path": "0"
    },
    "4560": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14264],
      "op": "DUP5",
      "path": "0"
    },
    "4561": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14264],
      "op": "AND",
      "path": "0"
    },
    "4562": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14264],
      "op": "SWAP1",
      "path": "0"
    },
    "4563": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14264],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "4568": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14264],
      "op": "SWAP1",
      "path": "0"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4571": {
      "op": "ADD"
    },
    "4572": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4574": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4576": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "MLOAD",
      "path": "0"
    },
    "4577": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP1",
      "path": "0"
    },
    "4578": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP4",
      "path": "0"
    },
    "4579": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "SUB",
      "path": "0"
    },
    "4580": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP2",
      "path": "0"
    },
    "4581": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP7",
      "path": "0"
    },
    "4582": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "GAS",
      "path": "0"
    },
    "4583": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "STATICCALL",
      "path": "0"
    },
    "4584": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "ISZERO",
      "path": "0"
    },
    "4585": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP1",
      "path": "0"
    },
    "4586": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "ISZERO",
      "path": "0"
    },
    "4587": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F8"
    },
    "4590": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "JUMPI",
      "path": "0"
    },
    "4591": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4592": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4594": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP1",
      "path": "0"
    },
    "4595": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4596": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4597": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4599": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "REVERT",
      "path": "0"
    },
    "4600": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4601": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "POP",
      "path": "0"
    },
    "4602": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "POP",
      "path": "0"
    },
    "4603": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "POP",
      "path": "0"
    },
    "4604": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "POP",
      "path": "0"
    },
    "4605": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4607": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "MLOAD",
      "path": "0"
    },
    "4608": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4609": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4611": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "NOT",
      "path": "0"
    },
    "4612": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4614": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP3",
      "path": "0"
    },
    "4615": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "ADD",
      "path": "0"
    },
    "4616": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "AND",
      "path": "0"
    },
    "4617": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP3",
      "path": "0"
    },
    "4618": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "ADD",
      "path": "0"
    },
    "4619": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP1",
      "path": "0"
    },
    "4620": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4622": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "MSTORE",
      "path": "0"
    },
    "4623": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "POP",
      "path": "0"
    },
    "4624": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "DUP2",
      "path": "0"
    },
    "4625": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "ADD",
      "path": "0"
    },
    "4626": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "SWAP1",
      "path": "0"
    },
    "4627": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121C"
    },
    "4630": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "SWAP2",
      "path": "0"
    },
    "4631": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "SWAP1",
      "path": "0"
    },
    "4632": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "4635": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14249, 14276],
      "op": "JUMP",
      "path": "0"
    },
    "4636": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14249, 14276],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4637": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14299],
      "op": "DUP4",
      "path": "0"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4644": {
      "op": "SHL"
    },
    "4645": {
      "op": "SUB"
    },
    "4646": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14318],
      "op": "AND",
      "path": "0"
    },
    "4647": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14318],
      "op": "PUSH4",
      "path": "0",
      "value": "0x75DE2902"
    },
    "4652": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4654": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "MLOAD",
      "path": "0"
    },
    "4655": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP2",
      "path": "0"
    },
    "4656": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4661": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "AND",
      "path": "0"
    },
    "4662": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4664": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "SHL",
      "path": "0"
    },
    "4665": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP2",
      "path": "0"
    },
    "4666": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "MSTORE",
      "path": "0"
    },
    "4667": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4669": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "ADD",
      "path": "0"
    },
    "4670": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4672": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4674": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "MLOAD",
      "path": "0"
    },
    "4675": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP1",
      "path": "0"
    },
    "4676": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP4",
      "path": "0"
    },
    "4677": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "SUB",
      "path": "0"
    },
    "4678": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP2",
      "path": "0"
    },
    "4679": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP7",
      "path": "0"
    },
    "4680": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "GAS",
      "path": "0"
    },
    "4681": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "STATICCALL",
      "path": "0"
    },
    "4682": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "ISZERO",
      "path": "0"
    },
    "4683": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP1",
      "path": "0"
    },
    "4684": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "ISZERO",
      "path": "0"
    },
    "4685": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125A"
    },
    "4688": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "JUMPI",
      "path": "0"
    },
    "4689": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4690": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4692": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP1",
      "path": "0"
    },
    "4693": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4694": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4695": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4697": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "REVERT",
      "path": "0"
    },
    "4698": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4699": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "POP",
      "path": "0"
    },
    "4700": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "POP",
      "path": "0"
    },
    "4701": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "POP",
      "path": "0"
    },
    "4702": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "POP",
      "path": "0"
    },
    "4703": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4705": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "MLOAD",
      "path": "0"
    },
    "4706": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4707": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4709": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "NOT",
      "path": "0"
    },
    "4710": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4712": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP3",
      "path": "0"
    },
    "4713": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "ADD",
      "path": "0"
    },
    "4714": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "AND",
      "path": "0"
    },
    "4715": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP3",
      "path": "0"
    },
    "4716": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "ADD",
      "path": "0"
    },
    "4717": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP1",
      "path": "0"
    },
    "4718": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4720": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "MSTORE",
      "path": "0"
    },
    "4721": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "POP",
      "path": "0"
    },
    "4722": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "DUP2",
      "path": "0"
    },
    "4723": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "ADD",
      "path": "0"
    },
    "4724": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "SWAP1",
      "path": "0"
    },
    "4725": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x127E"
    },
    "4728": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "SWAP2",
      "path": "0"
    },
    "4729": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "SWAP1",
      "path": "0"
    },
    "4730": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "4733": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14294, 14320],
      "op": "JUMP",
      "path": "0"
    },
    "4734": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14294, 14320],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4735": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14223, 14231],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B73"
    },
    "4738": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14223, 14334],
      "op": "JUMP",
      "path": "0"
    },
    "4739": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14223, 14334],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4740": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x40"
    },
    "4742": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "MLOAD",
      "path": "0"
    },
    "4743": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4750": {
      "op": "SHL"
    },
    "4751": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "DUP2",
      "path": "0"
    },
    "4752": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "MSTORE",
      "path": "0"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4759": {
      "op": "SHL"
    },
    "4760": {
      "op": "SUB"
    },
    "4761": {
      "op": "DUP13"
    },
    "4762": {
      "op": "DUP2"
    },
    "4763": {
      "op": "AND"
    },
    "4764": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4766": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "DUP4",
      "path": "0"
    },
    "4767": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "ADD",
      "path": "0"
    },
    "4768": {
      "op": "MSTORE"
    },
    "4769": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14547, 14551],
      "op": "ADDRESS",
      "path": "0"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4772": {
      "op": "DUP4"
    },
    "4773": {
      "op": "ADD"
    },
    "4774": {
      "op": "MSTORE"
    },
    "4775": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14197, 14334],
      "op": "SWAP2",
      "path": "0"
    },
    "4776": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14197, 14334],
      "op": "SWAP3",
      "path": "0"
    },
    "4777": {
      "op": "POP"
    },
    "4778": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14452, 14567],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12D9"
    },
    "4781": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14452, 14567],
      "op": "SWAP2",
      "path": "0"
    },
    "4782": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14197, 14334],
      "op": "DUP4",
      "path": "0"
    },
    "4783": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14197, 14334],
      "op": "SWAP2",
      "path": "0"
    },
    "4784": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14526],
      "op": "SWAP1",
      "path": "0"
    },
    "4785": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14526],
      "op": "DUP6",
      "path": "0"
    },
    "4786": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14526],
      "op": "AND",
      "path": "0"
    },
    "4787": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14526],
      "op": "SWAP1",
      "path": "0"
    },
    "4788": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14526],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "4793": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14526],
      "op": "SWAP1",
      "path": "0"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4796": {
      "op": "ADD"
    },
    "4797": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4799": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4801": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "MLOAD",
      "path": "0"
    },
    "4802": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "DUP1",
      "path": "0"
    },
    "4803": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "DUP4",
      "path": "0"
    },
    "4804": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "SUB",
      "path": "0"
    },
    "4805": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "DUP2",
      "path": "0"
    },
    "4806": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "DUP7",
      "path": "0"
    },
    "4807": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "GAS",
      "path": "0"
    },
    "4808": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "STATICCALL",
      "path": "0"
    },
    "4809": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "ISZERO",
      "path": "0"
    },
    "4810": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "DUP1",
      "path": "0"
    },
    "4811": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "ISZERO",
      "path": "0"
    },
    "4812": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "PUSH2",
      "path": "0",
      "value": "0x125A"
    },
    "4815": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "JUMPI",
      "path": "0"
    },
    "4816": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4817": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4819": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "DUP1",
      "path": "0"
    },
    "4820": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4821": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4822": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4824": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14511, 14553],
      "op": "REVERT",
      "path": "0"
    },
    "4825": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14452, 14567],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4826": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14434, 14567],
      "op": "SWAP1",
      "path": "0"
    },
    "4827": {
      "op": "POP"
    },
    "4828": {
      "branch": 79,
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14585, 14605],
      "op": "DUP1",
      "path": "0"
    },
    "4829": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14581, 14615],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E7"
    },
    "4832": {
      "branch": 79,
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14581, 14615],
      "op": "JUMPI",
      "path": "0"
    },
    "4833": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14607, 14615],
      "op": "POP",
      "path": "0",
      "statement": 42
    },
    "4834": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14607, 14615],
      "op": "POP",
      "path": "0"
    },
    "4835": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14607, 14615],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1579"
    },
    "4838": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14607, 14615],
      "op": "JUMP",
      "path": "0"
    },
    "4839": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14581, 14615],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4840": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14630, 14647],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4844": {
      "op": "NOT"
    },
    "4845": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14665, 14671],
      "op": "DUP10",
      "path": "0"
    },
    "4846": {
      "branch": 80,
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14665, 14694],
      "op": "EQ",
      "path": "0"
    },
    "4847": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14661, 15357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F5"
    },
    "4850": {
      "branch": 80,
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14661, 15357],
      "op": "JUMPI",
      "path": "0"
    },
    "4851": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14789, 14812],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4853": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14888],
      "op": "DUP4",
      "path": "0"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4860": {
      "op": "SHL"
    },
    "4861": {
      "op": "SUB"
    },
    "4862": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14902],
      "op": "AND",
      "path": "0"
    },
    "4863": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14902],
      "op": "PUSH4",
      "path": "0",
      "value": "0x99530B06"
    },
    "4868": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4870": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "MLOAD",
      "path": "0"
    },
    "4871": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP2",
      "path": "0"
    },
    "4872": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4877": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "AND",
      "path": "0"
    },
    "4878": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4880": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "SHL",
      "path": "0"
    },
    "4881": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP2",
      "path": "0"
    },
    "4882": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "MSTORE",
      "path": "0"
    },
    "4883": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4885": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "ADD",
      "path": "0"
    },
    "4886": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4888": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4890": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "MLOAD",
      "path": "0"
    },
    "4891": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP1",
      "path": "0"
    },
    "4892": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP4",
      "path": "0"
    },
    "4893": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "SUB",
      "path": "0"
    },
    "4894": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP2",
      "path": "0"
    },
    "4895": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP7",
      "path": "0"
    },
    "4896": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "GAS",
      "path": "0"
    },
    "4897": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "STATICCALL",
      "path": "0"
    },
    "4898": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "ISZERO",
      "path": "0"
    },
    "4899": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP1",
      "path": "0"
    },
    "4900": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "ISZERO",
      "path": "0"
    },
    "4901": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1332"
    },
    "4904": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "JUMPI",
      "path": "0"
    },
    "4905": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4906": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4908": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP1",
      "path": "0"
    },
    "4909": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4910": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4911": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4913": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "REVERT",
      "path": "0"
    },
    "4914": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4915": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "POP",
      "path": "0"
    },
    "4916": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "POP",
      "path": "0"
    },
    "4917": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "POP",
      "path": "0"
    },
    "4918": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "POP",
      "path": "0"
    },
    "4919": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4921": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "MLOAD",
      "path": "0"
    },
    "4922": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4923": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4925": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "NOT",
      "path": "0"
    },
    "4926": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4928": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP3",
      "path": "0"
    },
    "4929": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "ADD",
      "path": "0"
    },
    "4930": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "AND",
      "path": "0"
    },
    "4931": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP3",
      "path": "0"
    },
    "4932": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "ADD",
      "path": "0"
    },
    "4933": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP1",
      "path": "0"
    },
    "4934": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4936": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "MSTORE",
      "path": "0"
    },
    "4937": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "POP",
      "path": "0"
    },
    "4938": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "DUP2",
      "path": "0"
    },
    "4939": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "ADD",
      "path": "0"
    },
    "4940": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "SWAP1",
      "path": "0"
    },
    "4941": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1356"
    },
    "4944": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "SWAP2",
      "path": "0"
    },
    "4945": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "SWAP1",
      "path": "0"
    },
    "4946": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "4949": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14883, 14904],
      "op": "JUMP",
      "path": "0"
    },
    "4950": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14883, 14904],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4951": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14868],
      "op": "DUP5",
      "path": "0"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4958": {
      "op": "SHL"
    },
    "4959": {
      "op": "SUB"
    },
    "4960": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14877],
      "op": "AND",
      "path": "0"
    },
    "4961": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14877],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "4966": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4968": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "MLOAD",
      "path": "0"
    },
    "4969": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP2",
      "path": "0"
    },
    "4970": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4975": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "AND",
      "path": "0"
    },
    "4976": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "4978": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "SHL",
      "path": "0"
    },
    "4979": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP2",
      "path": "0"
    },
    "4980": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "MSTORE",
      "path": "0"
    },
    "4981": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4983": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "ADD",
      "path": "0"
    },
    "4984": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4986": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4988": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "MLOAD",
      "path": "0"
    },
    "4989": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP1",
      "path": "0"
    },
    "4990": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP4",
      "path": "0"
    },
    "4991": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "SUB",
      "path": "0"
    },
    "4992": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP2",
      "path": "0"
    },
    "4993": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP7",
      "path": "0"
    },
    "4994": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "GAS",
      "path": "0"
    },
    "4995": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "STATICCALL",
      "path": "0"
    },
    "4996": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "ISZERO",
      "path": "0"
    },
    "4997": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP1",
      "path": "0"
    },
    "4998": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "ISZERO",
      "path": "0"
    },
    "4999": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1394"
    },
    "5002": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "JUMPI",
      "path": "0"
    },
    "5003": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5004": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5006": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP1",
      "path": "0"
    },
    "5007": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5008": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5009": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5011": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "REVERT",
      "path": "0"
    },
    "5012": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5013": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "POP",
      "path": "0"
    },
    "5014": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "POP",
      "path": "0"
    },
    "5015": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "POP",
      "path": "0"
    },
    "5016": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "POP",
      "path": "0"
    },
    "5017": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5019": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "MLOAD",
      "path": "0"
    },
    "5020": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5021": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5023": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "NOT",
      "path": "0"
    },
    "5024": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5026": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP3",
      "path": "0"
    },
    "5027": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "ADD",
      "path": "0"
    },
    "5028": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "AND",
      "path": "0"
    },
    "5029": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP3",
      "path": "0"
    },
    "5030": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "ADD",
      "path": "0"
    },
    "5031": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP1",
      "path": "0"
    },
    "5032": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5034": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "MSTORE",
      "path": "0"
    },
    "5035": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "POP",
      "path": "0"
    },
    "5036": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "DUP2",
      "path": "0"
    },
    "5037": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "ADD",
      "path": "0"
    },
    "5038": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "SWAP1",
      "path": "0"
    },
    "5039": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B8"
    },
    "5042": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "SWAP2",
      "path": "0"
    },
    "5043": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "SWAP1",
      "path": "0"
    },
    "5044": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "5047": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14863, 14879],
      "op": "JUMP",
      "path": "0"
    },
    "5048": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14863, 14879],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5049": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14859, 14879],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C3"
    },
    "5052": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14859, 14879],
      "op": "SWAP1",
      "path": "0"
    },
    "5053": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14859, 14861],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5055": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14859, 14879],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20C1"
    },
    "5058": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14859, 14879],
      "op": "JUMP",
      "path": "0"
    },
    "5059": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14859, 14879],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5060": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14817, 14835],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13CD"
    },
    "5063": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14826, 14835],
      "op": "DUP10",
      "path": "0"
    },
    "5064": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14817, 14823],
      "op": "DUP14",
      "path": "0"
    },
    "5065": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14817, 14835],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "5068": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14817, 14835],
      "op": "JUMP",
      "path": "0"
    },
    "5069": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14817, 14835],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5070": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14816, 14879],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D7"
    },
    "5073": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14816, 14879],
      "op": "SWAP2",
      "path": "0"
    },
    "5074": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14816, 14879],
      "op": "SWAP1",
      "path": "0"
    },
    "5075": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14816, 14879],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20CD"
    },
    "5078": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14816, 14879],
      "op": "JUMP",
      "path": "0"
    },
    "5079": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14816, 14879],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5080": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14815, 14904],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E1"
    },
    "5083": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14815, 14904],
      "op": "SWAP2",
      "path": "0"
    },
    "5084": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14815, 14904],
      "op": "SWAP1",
      "path": "0"
    },
    "5085": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14815, 14904],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20EC"
    },
    "5088": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14815, 14904],
      "op": "JUMP",
      "path": "0"
    },
    "5089": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14815, 14904],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5090": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14789, 14904],
      "op": "SWAP1",
      "path": "0"
    },
    "5091": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14789, 14904],
      "op": "POP",
      "path": "0"
    },
    "5092": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15234, 15276],
      "op": "PUSH2",
      "path": "0",
      "statement": 43,
      "value": "0x13ED"
    },
    "5095": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15243, 15258],
      "op": "DUP4",
      "path": "0"
    },
    "5096": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15260, 15275],
      "op": "DUP3",
      "path": "0"
    },
    "5097": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15234, 15242],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B73"
    },
    "5100": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [15234, 15276],
      "op": "JUMP",
      "path": "0"
    },
    "5101": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15234, 15276],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5102": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15222, 15276],
      "op": "SWAP2",
      "path": "0"
    },
    "5103": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15222, 15276],
      "op": "POP",
      "path": "0"
    },
    "5104": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14696, 15291],
      "op": "POP",
      "path": "0"
    },
    "5105": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14661, 15357],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F8"
    },
    "5108": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14661, 15357],
      "op": "JUMP",
      "path": "0"
    },
    "5109": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14661, 15357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5110": {
      "op": "POP"
    },
    "5111": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15327, 15342],
      "op": "DUP1",
      "path": "0",
      "statement": 44
    },
    "5112": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14661, 15357],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5113": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5115": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "MLOAD",
      "path": "0"
    },
    "5116": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5123": {
      "op": "SHL"
    },
    "5124": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP2",
      "path": "0"
    },
    "5125": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "MSTORE",
      "path": "0"
    },
    "5126": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15415, 15419],
      "op": "ADDRESS",
      "path": "0"
    },
    "5127": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5129": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP3",
      "path": "0"
    },
    "5130": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "ADD",
      "path": "0"
    },
    "5131": {
      "op": "MSTORE"
    },
    "5132": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15371, 15388],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5134": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15371, 15388],
      "op": "SWAP1",
      "path": "0"
    },
    "5135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5141": {
      "op": "SHL"
    },
    "5142": {
      "op": "SUB"
    },
    "5143": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15406],
      "op": "DUP6",
      "path": "0"
    },
    "5144": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15406],
      "op": "AND",
      "path": "0"
    },
    "5145": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15406],
      "op": "SWAP1",
      "path": "0"
    },
    "5146": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15406],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "5151": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15406],
      "op": "SWAP1",
      "path": "0"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5154": {
      "op": "ADD"
    },
    "5155": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5157": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5159": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "MLOAD",
      "path": "0"
    },
    "5160": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP1",
      "path": "0"
    },
    "5161": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP4",
      "path": "0"
    },
    "5162": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "SUB",
      "path": "0"
    },
    "5163": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP2",
      "path": "0"
    },
    "5164": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP7",
      "path": "0"
    },
    "5165": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "GAS",
      "path": "0"
    },
    "5166": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "STATICCALL",
      "path": "0"
    },
    "5167": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "ISZERO",
      "path": "0"
    },
    "5168": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP1",
      "path": "0"
    },
    "5169": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "ISZERO",
      "path": "0"
    },
    "5170": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143F"
    },
    "5173": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "JUMPI",
      "path": "0"
    },
    "5174": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5175": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5177": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP1",
      "path": "0"
    },
    "5178": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5179": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5180": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5182": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "REVERT",
      "path": "0"
    },
    "5183": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5184": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "POP",
      "path": "0"
    },
    "5185": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "POP",
      "path": "0"
    },
    "5186": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "POP",
      "path": "0"
    },
    "5187": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "POP",
      "path": "0"
    },
    "5188": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5190": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "MLOAD",
      "path": "0"
    },
    "5191": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5192": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5194": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "NOT",
      "path": "0"
    },
    "5195": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5197": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP3",
      "path": "0"
    },
    "5198": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "ADD",
      "path": "0"
    },
    "5199": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "AND",
      "path": "0"
    },
    "5200": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP3",
      "path": "0"
    },
    "5201": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "ADD",
      "path": "0"
    },
    "5202": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP1",
      "path": "0"
    },
    "5203": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5205": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "MSTORE",
      "path": "0"
    },
    "5206": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "POP",
      "path": "0"
    },
    "5207": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "DUP2",
      "path": "0"
    },
    "5208": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "ADD",
      "path": "0"
    },
    "5209": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "SWAP1",
      "path": "0"
    },
    "5210": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1463"
    },
    "5213": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "SWAP2",
      "path": "0"
    },
    "5214": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "SWAP1",
      "path": "0"
    },
    "5215": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "5218": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [15391, 15421],
      "op": "JUMP",
      "path": "0"
    },
    "5219": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15391, 15421],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5220": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15371, 15421],
      "op": "SWAP1",
      "path": "0"
    },
    "5221": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15371, 15421],
      "op": "POP",
      "path": "0"
    },
    "5222": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15436, 15585],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0x1471"
    },
    "5225": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15480, 15485],
      "op": "DUP5",
      "path": "0"
    },
    "5226": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15503, 15513],
      "op": "DUP14",
      "path": "0"
    },
    "5227": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15539, 15543],
      "op": "ADDRESS",
      "path": "0"
    },
    "5228": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15562, 15571],
      "op": "DUP6",
      "path": "0"
    },
    "5229": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15436, 15462],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B05"
    },
    "5232": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [15436, 15585],
      "op": "JUMP",
      "path": "0"
    },
    "5233": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15436, 15585],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5234": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x40"
    },
    "5236": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "MLOAD",
      "path": "0"
    },
    "5237": {
      "op": "PUSH3",
      "value": "0x7B8A67"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5243": {
      "op": "SHL"
    },
    "5244": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP2",
      "path": "0"
    },
    "5245": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "MSTORE",
      "path": "0"
    },
    "5246": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5248": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP2",
      "path": "0"
    },
    "5249": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "ADD",
      "path": "0"
    },
    "5250": {
      "op": "DUP4"
    },
    "5251": {
      "op": "SWAP1"
    },
    "5252": {
      "op": "MSTORE"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5259": {
      "op": "SHL"
    },
    "5260": {
      "op": "SUB"
    },
    "5261": {
      "op": "DUP13"
    },
    "5262": {
      "op": "DUP2"
    },
    "5263": {
      "op": "AND"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5266": {
      "op": "DUP4"
    },
    "5267": {
      "op": "ADD"
    },
    "5268": {
      "op": "MSTORE"
    },
    "5269": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15627],
      "op": "DUP6",
      "path": "0"
    },
    "5270": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15627],
      "op": "AND",
      "path": "0"
    },
    "5271": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15627],
      "op": "SWAP1",
      "path": "0"
    },
    "5272": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15627],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF714CE"
    },
    "5276": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15627],
      "op": "SWAP1",
      "path": "0"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5279": {
      "op": "ADD"
    },
    "5280": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5282": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5284": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "MLOAD",
      "path": "0"
    },
    "5285": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP1",
      "path": "0"
    },
    "5286": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP4",
      "path": "0"
    },
    "5287": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "SUB",
      "path": "0"
    },
    "5288": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP2",
      "path": "0"
    },
    "5289": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5291": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP8",
      "path": "0"
    },
    "5292": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "GAS",
      "path": "0"
    },
    "5293": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "CALL",
      "path": "0"
    },
    "5294": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "ISZERO",
      "path": "0"
    },
    "5295": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP1",
      "path": "0"
    },
    "5296": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "ISZERO",
      "path": "0"
    },
    "5297": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14BE"
    },
    "5300": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "JUMPI",
      "path": "0"
    },
    "5301": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5302": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5304": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP1",
      "path": "0"
    },
    "5305": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5306": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5307": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5309": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "REVERT",
      "path": "0"
    },
    "5310": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5311": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "POP",
      "path": "0"
    },
    "5312": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "POP",
      "path": "0"
    },
    "5313": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "POP",
      "path": "0"
    },
    "5314": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "POP",
      "path": "0"
    },
    "5315": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5317": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "MLOAD",
      "path": "0"
    },
    "5318": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5319": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5321": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "NOT",
      "path": "0"
    },
    "5322": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5324": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP3",
      "path": "0"
    },
    "5325": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "ADD",
      "path": "0"
    },
    "5326": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "AND",
      "path": "0"
    },
    "5327": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP3",
      "path": "0"
    },
    "5328": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "ADD",
      "path": "0"
    },
    "5329": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP1",
      "path": "0"
    },
    "5330": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5332": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "MSTORE",
      "path": "0"
    },
    "5333": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "POP",
      "path": "0"
    },
    "5334": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "DUP2",
      "path": "0"
    },
    "5335": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "ADD",
      "path": "0"
    },
    "5336": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "SWAP1",
      "path": "0"
    },
    "5337": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E2"
    },
    "5340": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "SWAP2",
      "path": "0"
    },
    "5341": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "SWAP1",
      "path": "0"
    },
    "5342": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "5345": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [15613, 15649],
      "op": "JUMP",
      "path": "0"
    },
    "5346": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15613, 15649],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5347": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15600, 15649],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14EC"
    },
    "5350": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15600, 15649],
      "op": "SWAP1",
      "path": "0"
    },
    "5351": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15600, 15649],
      "op": "DUP9",
      "path": "0"
    },
    "5352": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15600, 15649],
      "op": "PUSH2",
      "path": "0",
      "value": "0x210E"
    },
    "5355": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [15600, 15649],
      "op": "JUMP",
      "path": "0"
    },
    "5356": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15600, 15649],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5357": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5359": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "MLOAD",
      "path": "0"
    },
    "5360": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5367": {
      "op": "SHL"
    },
    "5368": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP2",
      "path": "0"
    },
    "5369": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "MSTORE",
      "path": "0"
    },
    "5370": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15715, 15719],
      "op": "ADDRESS",
      "path": "0"
    },
    "5371": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5373": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP3",
      "path": "0"
    },
    "5374": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "ADD",
      "path": "0"
    },
    "5375": {
      "op": "MSTORE"
    },
    "5376": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15600, 15649],
      "op": "SWAP1",
      "path": "0"
    },
    "5377": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15600, 15649],
      "op": "SWAP8",
      "path": "0"
    },
    "5378": {
      "op": "POP"
    },
    "5379": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15664, 15688],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5381": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15664, 15688],
      "op": "SWAP1",
      "path": "0"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5388": {
      "op": "SHL"
    },
    "5389": {
      "op": "SUB"
    },
    "5390": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15706],
      "op": "DUP7",
      "path": "0"
    },
    "5391": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15706],
      "op": "AND",
      "path": "0"
    },
    "5392": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15706],
      "op": "SWAP1",
      "path": "0"
    },
    "5393": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15706],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "5398": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15706],
      "op": "SWAP1",
      "path": "0"
    },
    "5399": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5401": {
      "op": "ADD"
    },
    "5402": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5404": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5406": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "MLOAD",
      "path": "0"
    },
    "5407": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP1",
      "path": "0"
    },
    "5408": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP4",
      "path": "0"
    },
    "5409": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "SUB",
      "path": "0"
    },
    "5410": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP2",
      "path": "0"
    },
    "5411": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP7",
      "path": "0"
    },
    "5412": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "GAS",
      "path": "0"
    },
    "5413": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "STATICCALL",
      "path": "0"
    },
    "5414": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "ISZERO",
      "path": "0"
    },
    "5415": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP1",
      "path": "0"
    },
    "5416": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "ISZERO",
      "path": "0"
    },
    "5417": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1536"
    },
    "5420": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "JUMPI",
      "path": "0"
    },
    "5421": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5422": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5424": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP1",
      "path": "0"
    },
    "5425": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5426": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5427": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5429": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "REVERT",
      "path": "0"
    },
    "5430": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5431": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "POP",
      "path": "0"
    },
    "5432": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "POP",
      "path": "0"
    },
    "5433": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "POP",
      "path": "0"
    },
    "5434": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "POP",
      "path": "0"
    },
    "5435": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5437": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "MLOAD",
      "path": "0"
    },
    "5438": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5439": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5441": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "NOT",
      "path": "0"
    },
    "5442": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5444": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP3",
      "path": "0"
    },
    "5445": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "ADD",
      "path": "0"
    },
    "5446": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "AND",
      "path": "0"
    },
    "5447": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP3",
      "path": "0"
    },
    "5448": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "ADD",
      "path": "0"
    },
    "5449": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP1",
      "path": "0"
    },
    "5450": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5452": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "MSTORE",
      "path": "0"
    },
    "5453": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "POP",
      "path": "0"
    },
    "5454": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "DUP2",
      "path": "0"
    },
    "5455": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "ADD",
      "path": "0"
    },
    "5456": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "SWAP1",
      "path": "0"
    },
    "5457": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155A"
    },
    "5460": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "SWAP2",
      "path": "0"
    },
    "5461": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "SWAP1",
      "path": "0"
    },
    "5462": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "5465": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [15691, 15721],
      "op": "JUMP",
      "path": "0"
    },
    "5466": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15691, 15721],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5467": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15664, 15721],
      "op": "SWAP1",
      "path": "0"
    },
    "5468": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15664, 15721],
      "op": "POP",
      "path": "0"
    },
    "5469": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15758, 15767],
      "op": "DUP2",
      "path": "0"
    },
    "5470": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15739, 15755],
      "op": "DUP2",
      "path": "0"
    },
    "5471": {
      "branch": 81,
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15739, 15767],
      "op": "GT",
      "path": "0"
    },
    "5472": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15735, 15951],
      "op": "ISZERO",
      "path": "0"
    },
    "5473": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15735, 15951],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1573"
    },
    "5476": {
      "branch": 81,
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15735, 15951],
      "op": "JUMPI",
      "path": "0"
    },
    "5477": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15787, 15936],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x1573"
    },
    "5480": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15831, 15836],
      "op": "DUP6",
      "path": "0"
    },
    "5481": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15858, 15868],
      "op": "DUP15",
      "path": "0"
    },
    "5482": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15890, 15918],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9E"
    },
    "5485": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15909, 15918],
      "op": "DUP6",
      "path": "0"
    },
    "5486": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15890, 15906],
      "op": "DUP6",
      "path": "0"
    },
    "5487": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15890, 15918],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "5490": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [15890, 15918],
      "op": "JUMP",
      "path": "0"
    },
    "5491": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [15787, 15936],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5492": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14117, 15961],
      "op": "POP",
      "path": "0"
    },
    "5493": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14117, 15961],
      "op": "POP",
      "path": "0"
    },
    "5494": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14117, 15961],
      "op": "POP",
      "path": "0"
    },
    "5495": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14117, 15961],
      "op": "POP",
      "path": "0"
    },
    "5496": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14117, 15961],
      "op": "POP",
      "path": "0"
    },
    "5497": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13990, 15961],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5498": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14103, 14106],
      "op": "DUP1",
      "path": "0",
      "statement": 48
    },
    "5499": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14103, 14106],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1583"
    },
    "5502": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14103, 14106],
      "op": "DUP2",
      "path": "0"
    },
    "5503": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14103, 14106],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2126"
    },
    "5506": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "i",
      "offset": [14103, 14106],
      "op": "JUMP",
      "path": "0"
    },
    "5507": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14103, 14106],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5508": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14103, 14106],
      "op": "SWAP2",
      "path": "0"
    },
    "5509": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14103, 14106],
      "op": "POP",
      "path": "0"
    },
    "5510": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [14103, 14106],
      "op": "POP",
      "path": "0"
    },
    "5511": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13990, 15961],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1113"
    },
    "5514": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13990, 15961],
      "op": "JUMP",
      "path": "0"
    },
    "5515": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13990, 15961],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5516": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13990, 15961],
      "op": "POP",
      "path": "0"
    },
    "5517": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13779, 15967],
      "op": "POP",
      "path": "0"
    },
    "5518": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13557, 15967],
      "op": "SWAP7",
      "path": "0"
    },
    "5519": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13557, 15967],
      "op": "SWAP6",
      "path": "0"
    },
    "5520": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13557, 15967],
      "op": "POP",
      "path": "0"
    },
    "5521": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13557, 15967],
      "op": "POP",
      "path": "0"
    },
    "5522": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13557, 15967],
      "op": "POP",
      "path": "0"
    },
    "5523": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13557, 15967],
      "op": "POP",
      "path": "0"
    },
    "5524": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13557, 15967],
      "op": "POP",
      "path": "0"
    },
    "5525": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "offset": [13557, 15967],
      "op": "POP",
      "path": "0"
    },
    "5526": {
      "fn": "ShapeShiftDAORouter._withdraw",
      "jump": "o",
      "offset": [13557, 15967],
      "op": "JUMP",
      "path": "0"
    },
    "5527": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [18944, 20544],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5528": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19206, 19207],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5530": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19177],
      "op": "DUP1",
      "path": "0"
    },
    "5531": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19177],
      "op": "SLOAD",
      "path": "0"
    },
    "5532": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5534": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "MLOAD",
      "path": "0"
    },
    "5535": {
      "op": "PUSH4",
      "value": "0xF9C7BBA5"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5542": {
      "op": "SHL"
    },
    "5543": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP2",
      "path": "0"
    },
    "5544": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "MSTORE",
      "path": "0"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5551": {
      "op": "SHL"
    },
    "5552": {
      "op": "SUB"
    },
    "5553": {
      "op": "DUP9"
    },
    "5554": {
      "op": "DUP2"
    },
    "5555": {
      "op": "AND"
    },
    "5556": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5558": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP4",
      "path": "0"
    },
    "5559": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "ADD",
      "path": "0"
    },
    "5560": {
      "op": "MSTORE"
    },
    "5561": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19117, 19133],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5563": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19117, 19133],
      "op": "SWAP4",
      "path": "0"
    },
    "5564": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19117, 19133],
      "op": "DUP5",
      "path": "0"
    },
    "5565": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19117, 19133],
      "op": "SWAP4",
      "path": "0"
    },
    "5566": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19206, 19207],
      "op": "SWAP1",
      "path": "0"
    },
    "5567": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19206, 19207],
      "op": "SWAP3",
      "path": "0"
    },
    "5568": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19177],
      "op": "SWAP2",
      "path": "0"
    },
    "5569": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19177],
      "op": "AND",
      "path": "0"
    },
    "5570": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19177],
      "op": "SWAP1",
      "path": "0"
    },
    "5571": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19187],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF9C7BBA5"
    },
    "5576": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19187],
      "op": "SWAP1",
      "path": "0"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5579": {
      "op": "ADD"
    },
    "5580": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5582": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5584": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "MLOAD",
      "path": "0"
    },
    "5585": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP1",
      "path": "0"
    },
    "5586": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP4",
      "path": "0"
    },
    "5587": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "SUB",
      "path": "0"
    },
    "5588": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP2",
      "path": "0"
    },
    "5589": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP7",
      "path": "0"
    },
    "5590": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "GAS",
      "path": "0"
    },
    "5591": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "STATICCALL",
      "path": "0"
    },
    "5592": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "ISZERO",
      "path": "0"
    },
    "5593": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP1",
      "path": "0"
    },
    "5594": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "ISZERO",
      "path": "0"
    },
    "5595": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15E8"
    },
    "5598": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "JUMPI",
      "path": "0"
    },
    "5599": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5600": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5602": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP1",
      "path": "0"
    },
    "5603": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5604": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5605": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5607": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "REVERT",
      "path": "0"
    },
    "5608": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5609": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "POP",
      "path": "0"
    },
    "5610": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "POP",
      "path": "0"
    },
    "5611": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "POP",
      "path": "0"
    },
    "5612": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "POP",
      "path": "0"
    },
    "5613": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5615": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "MLOAD",
      "path": "0"
    },
    "5616": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5617": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5619": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "NOT",
      "path": "0"
    },
    "5620": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5622": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP3",
      "path": "0"
    },
    "5623": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "ADD",
      "path": "0"
    },
    "5624": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "AND",
      "path": "0"
    },
    "5625": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP3",
      "path": "0"
    },
    "5626": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "ADD",
      "path": "0"
    },
    "5627": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP1",
      "path": "0"
    },
    "5628": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5630": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "MSTORE",
      "path": "0"
    },
    "5631": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "POP",
      "path": "0"
    },
    "5632": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "DUP2",
      "path": "0"
    },
    "5633": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "ADD",
      "path": "0"
    },
    "5634": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "SWAP1",
      "path": "0"
    },
    "5635": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160C"
    },
    "5638": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "SWAP2",
      "path": "0"
    },
    "5639": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "SWAP1",
      "path": "0"
    },
    "5640": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "5643": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19169, 19203],
      "op": "JUMP",
      "path": "0"
    },
    "5644": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19203],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5645": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19207],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1616"
    },
    "5648": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19207],
      "op": "SWAP2",
      "path": "0"
    },
    "5649": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19207],
      "op": "SWAP1",
      "path": "0"
    },
    "5650": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19207],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "5653": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19169, 19207],
      "op": "JUMP",
      "path": "0"
    },
    "5654": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19169, 19207],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5655": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19145, 19207],
      "op": "SWAP1",
      "path": "0"
    },
    "5656": {
      "op": "POP"
    },
    "5657": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19221, 19232],
      "op": "DUP5",
      "path": "0"
    },
    "5658": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19221, 19232],
      "op": "ISZERO",
      "path": "0"
    },
    "5659": {
      "branch": 82,
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19221, 19232],
      "op": "DUP1",
      "path": "0"
    },
    "5660": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19221, 19254],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1623"
    },
    "5663": {
      "branch": 82,
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19221, 19254],
      "op": "JUMPI",
      "path": "0"
    },
    "5664": {
      "op": "POP"
    },
    "5665": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19236, 19254],
      "op": "DUP1",
      "path": "0"
    },
    "5666": {
      "branch": 83,
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19236, 19254],
      "op": "ISZERO",
      "path": "0"
    },
    "5667": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19221, 19254],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5668": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19217, 19264],
      "op": "ISZERO",
      "path": "0"
    },
    "5669": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19217, 19264],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1632"
    },
    "5672": {
      "branch": 83,
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19217, 19264],
      "op": "JUMPI",
      "path": "0"
    },
    "5673": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19263, 19264],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x0"
    },
    "5675": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19256, 19264],
      "op": "SWAP2",
      "path": "0"
    },
    "5676": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19256, 19264],
      "op": "POP",
      "path": "0"
    },
    "5677": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19256, 19264],
      "op": "POP",
      "path": "0"
    },
    "5678": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19256, 19264],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "5681": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19256, 19264],
      "op": "JUMP",
      "path": "0"
    },
    "5682": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19217, 19264],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5683": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19363],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5685": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19363],
      "op": "SLOAD",
      "path": "0"
    },
    "5686": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5688": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "MLOAD",
      "path": "0"
    },
    "5689": {
      "op": "PUSH4",
      "value": "0x3DDFE34F"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5696": {
      "op": "SHL"
    },
    "5697": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP2",
      "path": "0"
    },
    "5698": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "MSTORE",
      "path": "0"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5705": {
      "op": "SHL"
    },
    "5706": {
      "op": "SUB"
    },
    "5707": {
      "op": "DUP10"
    },
    "5708": {
      "op": "DUP2"
    },
    "5709": {
      "op": "AND"
    },
    "5710": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5712": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP4",
      "path": "0"
    },
    "5713": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "ADD",
      "path": "0"
    },
    "5714": {
      "op": "MSTORE"
    },
    "5715": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5717": {
      "op": "DUP3"
    },
    "5718": {
      "op": "ADD"
    },
    "5719": {
      "op": "DUP5"
    },
    "5720": {
      "op": "SWAP1"
    },
    "5721": {
      "op": "MSTORE"
    },
    "5722": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19331, 19352],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5724": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19331, 19352],
      "op": "SWAP3",
      "path": "0"
    },
    "5725": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19363],
      "op": "AND",
      "path": "0"
    },
    "5726": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19363],
      "op": "SWAP1",
      "path": "0"
    },
    "5727": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19370],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7BBFC69E"
    },
    "5732": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19370],
      "op": "SWAP1",
      "path": "0"
    },
    "5733": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5735": {
      "op": "ADD"
    },
    "5736": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5738": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5740": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "MLOAD",
      "path": "0"
    },
    "5741": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP1",
      "path": "0"
    },
    "5742": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP4",
      "path": "0"
    },
    "5743": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "SUB",
      "path": "0"
    },
    "5744": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP2",
      "path": "0"
    },
    "5745": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP7",
      "path": "0"
    },
    "5746": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "GAS",
      "path": "0"
    },
    "5747": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "STATICCALL",
      "path": "0"
    },
    "5748": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "ISZERO",
      "path": "0"
    },
    "5749": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP1",
      "path": "0"
    },
    "5750": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "ISZERO",
      "path": "0"
    },
    "5751": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1684"
    },
    "5754": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "JUMPI",
      "path": "0"
    },
    "5755": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5756": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5758": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP1",
      "path": "0"
    },
    "5759": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5760": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5761": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5763": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "REVERT",
      "path": "0"
    },
    "5764": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5765": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "POP",
      "path": "0"
    },
    "5766": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "POP",
      "path": "0"
    },
    "5767": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "POP",
      "path": "0"
    },
    "5768": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "POP",
      "path": "0"
    },
    "5769": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5771": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "MLOAD",
      "path": "0"
    },
    "5772": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5773": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5775": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "NOT",
      "path": "0"
    },
    "5776": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5778": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP3",
      "path": "0"
    },
    "5779": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "ADD",
      "path": "0"
    },
    "5780": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "AND",
      "path": "0"
    },
    "5781": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP3",
      "path": "0"
    },
    "5782": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "ADD",
      "path": "0"
    },
    "5783": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP1",
      "path": "0"
    },
    "5784": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5786": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "MSTORE",
      "path": "0"
    },
    "5787": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "POP",
      "path": "0"
    },
    "5788": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "DUP2",
      "path": "0"
    },
    "5789": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "ADD",
      "path": "0"
    },
    "5790": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "SWAP1",
      "path": "0"
    },
    "5791": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A8"
    },
    "5794": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "SWAP2",
      "path": "0"
    },
    "5795": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "SWAP1",
      "path": "0"
    },
    "5796": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F93"
    },
    "5799": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19355, 19401],
      "op": "JUMP",
      "path": "0"
    },
    "5800": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19355, 19401],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5801": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19331, 19401],
      "op": "SWAP1",
      "path": "0"
    },
    "5802": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19331, 19401],
      "op": "POP",
      "path": "0"
    },
    "5803": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19411, 19426],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5805": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19429, 19537],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177E"
    },
    "5808": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19451, 19457],
      "op": "DUP8",
      "path": "0"
    },
    "5809": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19513],
      "op": "DUP4",
      "path": "0"
    },
    "5810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5816": {
      "op": "SHL"
    },
    "5817": {
      "op": "SUB"
    },
    "5818": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19525],
      "op": "AND",
      "path": "0"
    },
    "5819": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19525],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1E1D114"
    },
    "5824": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5826": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "MLOAD",
      "path": "0"
    },
    "5827": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP2",
      "path": "0"
    },
    "5828": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5833": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "AND",
      "path": "0"
    },
    "5834": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5836": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "SHL",
      "path": "0"
    },
    "5837": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP2",
      "path": "0"
    },
    "5838": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "MSTORE",
      "path": "0"
    },
    "5839": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5841": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "ADD",
      "path": "0"
    },
    "5842": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5844": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5846": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "MLOAD",
      "path": "0"
    },
    "5847": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP1",
      "path": "0"
    },
    "5848": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP4",
      "path": "0"
    },
    "5849": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "SUB",
      "path": "0"
    },
    "5850": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP2",
      "path": "0"
    },
    "5851": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP7",
      "path": "0"
    },
    "5852": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "GAS",
      "path": "0"
    },
    "5853": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "STATICCALL",
      "path": "0"
    },
    "5854": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "ISZERO",
      "path": "0"
    },
    "5855": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP1",
      "path": "0"
    },
    "5856": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "ISZERO",
      "path": "0"
    },
    "5857": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16EE"
    },
    "5860": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "JUMPI",
      "path": "0"
    },
    "5861": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5862": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5864": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP1",
      "path": "0"
    },
    "5865": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5866": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5867": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5869": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "REVERT",
      "path": "0"
    },
    "5870": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5871": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "POP",
      "path": "0"
    },
    "5872": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "POP",
      "path": "0"
    },
    "5873": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "POP",
      "path": "0"
    },
    "5874": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "POP",
      "path": "0"
    },
    "5875": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5877": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "MLOAD",
      "path": "0"
    },
    "5878": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5879": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5881": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "NOT",
      "path": "0"
    },
    "5882": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5884": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP3",
      "path": "0"
    },
    "5885": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "ADD",
      "path": "0"
    },
    "5886": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "AND",
      "path": "0"
    },
    "5887": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP3",
      "path": "0"
    },
    "5888": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "ADD",
      "path": "0"
    },
    "5889": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP1",
      "path": "0"
    },
    "5890": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5892": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "MSTORE",
      "path": "0"
    },
    "5893": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "POP",
      "path": "0"
    },
    "5894": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "DUP2",
      "path": "0"
    },
    "5895": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "ADD",
      "path": "0"
    },
    "5896": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "SWAP1",
      "path": "0"
    },
    "5897": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1712"
    },
    "5900": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "SWAP2",
      "path": "0"
    },
    "5901": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "SWAP1",
      "path": "0"
    },
    "5902": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "5905": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19501, 19527],
      "op": "JUMP",
      "path": "0"
    },
    "5906": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19501, 19527],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5907": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19483],
      "op": "DUP5",
      "path": "0"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5914": {
      "op": "SHL"
    },
    "5915": {
      "op": "SUB"
    },
    "5916": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19496],
      "op": "AND",
      "path": "0"
    },
    "5917": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19496],
      "op": "PUSH4",
      "path": "0",
      "value": "0xECF70858"
    },
    "5922": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5924": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "MLOAD",
      "path": "0"
    },
    "5925": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP2",
      "path": "0"
    },
    "5926": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5931": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "AND",
      "path": "0"
    },
    "5932": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5934": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "SHL",
      "path": "0"
    },
    "5935": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP2",
      "path": "0"
    },
    "5936": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "MSTORE",
      "path": "0"
    },
    "5937": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5939": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "ADD",
      "path": "0"
    },
    "5940": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5942": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5944": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "MLOAD",
      "path": "0"
    },
    "5945": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP1",
      "path": "0"
    },
    "5946": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP4",
      "path": "0"
    },
    "5947": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "SUB",
      "path": "0"
    },
    "5948": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP2",
      "path": "0"
    },
    "5949": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP7",
      "path": "0"
    },
    "5950": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "GAS",
      "path": "0"
    },
    "5951": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "STATICCALL",
      "path": "0"
    },
    "5952": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "ISZERO",
      "path": "0"
    },
    "5953": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP1",
      "path": "0"
    },
    "5954": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "ISZERO",
      "path": "0"
    },
    "5955": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1750"
    },
    "5958": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "JUMPI",
      "path": "0"
    },
    "5959": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5960": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5962": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP1",
      "path": "0"
    },
    "5963": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5964": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5965": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5967": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "REVERT",
      "path": "0"
    },
    "5968": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5969": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "POP",
      "path": "0"
    },
    "5970": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "POP",
      "path": "0"
    },
    "5971": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "POP",
      "path": "0"
    },
    "5972": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "POP",
      "path": "0"
    },
    "5973": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5975": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "MLOAD",
      "path": "0"
    },
    "5976": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5977": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5979": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "NOT",
      "path": "0"
    },
    "5980": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5982": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP3",
      "path": "0"
    },
    "5983": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "ADD",
      "path": "0"
    },
    "5984": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "AND",
      "path": "0"
    },
    "5985": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP3",
      "path": "0"
    },
    "5986": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "ADD",
      "path": "0"
    },
    "5987": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP1",
      "path": "0"
    },
    "5988": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5990": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "MSTORE",
      "path": "0"
    },
    "5991": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "POP",
      "path": "0"
    },
    "5992": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "DUP2",
      "path": "0"
    },
    "5993": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "ADD",
      "path": "0"
    },
    "5994": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "SWAP1",
      "path": "0"
    },
    "5995": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1774"
    },
    "5998": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "SWAP2",
      "path": "0"
    },
    "5999": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "SWAP1",
      "path": "0"
    },
    "6000": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "6003": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19471, 19498],
      "op": "JUMP",
      "path": "0"
    },
    "6004": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19498],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6005": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19527],
      "op": "PUSH2",
      "path": "0",
      "value": "0x127E"
    },
    "6008": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19527],
      "op": "SWAP2",
      "path": "0"
    },
    "6009": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19527],
      "op": "SWAP1",
      "path": "0"
    },
    "6010": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19471, 19527],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "6013": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19471, 19527],
      "op": "JUMP",
      "path": "0"
    },
    "6014": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19429, 19537],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6015": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6017": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "MLOAD",
      "path": "0"
    },
    "6018": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6025": {
      "op": "SHL"
    },
    "6026": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP2",
      "path": "0"
    },
    "6027": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "MSTORE",
      "path": "0"
    },
    "6028": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19600, 19604],
      "op": "ADDRESS",
      "path": "0"
    },
    "6029": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6031": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP3",
      "path": "0"
    },
    "6032": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "ADD",
      "path": "0"
    },
    "6033": {
      "op": "MSTORE"
    },
    "6034": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19411, 19537],
      "op": "SWAP1",
      "path": "0"
    },
    "6035": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19411, 19537],
      "op": "SWAP2",
      "path": "0"
    },
    "6036": {
      "op": "POP"
    },
    "6037": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19548, 19573],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6039": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19548, 19573],
      "op": "SWAP1",
      "path": "0"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6046": {
      "op": "SHL"
    },
    "6047": {
      "op": "SUB"
    },
    "6048": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19591],
      "op": "DUP12",
      "path": "0"
    },
    "6049": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19591],
      "op": "AND",
      "path": "0"
    },
    "6050": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19591],
      "op": "SWAP1",
      "path": "0"
    },
    "6051": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19591],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "6056": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19591],
      "op": "SWAP1",
      "path": "0"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6059": {
      "op": "ADD"
    },
    "6060": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6062": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6064": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "MLOAD",
      "path": "0"
    },
    "6065": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP1",
      "path": "0"
    },
    "6066": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP4",
      "path": "0"
    },
    "6067": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "SUB",
      "path": "0"
    },
    "6068": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP2",
      "path": "0"
    },
    "6069": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP7",
      "path": "0"
    },
    "6070": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "GAS",
      "path": "0"
    },
    "6071": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "STATICCALL",
      "path": "0"
    },
    "6072": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "ISZERO",
      "path": "0"
    },
    "6073": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP1",
      "path": "0"
    },
    "6074": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "ISZERO",
      "path": "0"
    },
    "6075": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C8"
    },
    "6078": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "JUMPI",
      "path": "0"
    },
    "6079": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6080": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6082": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP1",
      "path": "0"
    },
    "6083": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6084": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6085": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6087": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "REVERT",
      "path": "0"
    },
    "6088": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6089": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "POP",
      "path": "0"
    },
    "6090": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "POP",
      "path": "0"
    },
    "6091": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "POP",
      "path": "0"
    },
    "6092": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "POP",
      "path": "0"
    },
    "6093": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6095": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "MLOAD",
      "path": "0"
    },
    "6096": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6097": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6099": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "NOT",
      "path": "0"
    },
    "6100": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6102": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP3",
      "path": "0"
    },
    "6103": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "ADD",
      "path": "0"
    },
    "6104": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "AND",
      "path": "0"
    },
    "6105": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP3",
      "path": "0"
    },
    "6106": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "ADD",
      "path": "0"
    },
    "6107": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP1",
      "path": "0"
    },
    "6108": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6110": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "MSTORE",
      "path": "0"
    },
    "6111": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "POP",
      "path": "0"
    },
    "6112": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "DUP2",
      "path": "0"
    },
    "6113": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "ADD",
      "path": "0"
    },
    "6114": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "SWAP1",
      "path": "0"
    },
    "6115": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17EC"
    },
    "6118": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "SWAP2",
      "path": "0"
    },
    "6119": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "SWAP1",
      "path": "0"
    },
    "6120": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "6123": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19576, 19606],
      "op": "JUMP",
      "path": "0"
    },
    "6124": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19576, 19606],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6125": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19548, 19606],
      "op": "SWAP1",
      "path": "0"
    },
    "6126": {
      "op": "POP"
    },
    "6127": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19616, 19804],
      "op": "PUSH2",
      "path": "0",
      "statement": 50,
      "value": "0x180A"
    },
    "6130": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19639, 19644],
      "op": "DUP11",
      "path": "0"
    },
    "6131": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19658, 19666],
      "op": "DUP11",
      "path": "0"
    },
    "6132": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19688, 19692],
      "op": "ADDRESS",
      "path": "0"
    },
    "6133": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19707, 19714],
      "op": "DUP6",
      "path": "0"
    },
    "6134": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19728, 19740],
      "op": "DUP12",
      "path": "0"
    },
    "6135": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19754, 19794],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1805"
    },
    "6138": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19763, 19774],
      "op": "DUP13",
      "path": "0"
    },
    "6139": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19776, 19793],
      "op": "PUSH2",
      "path": "0",
      "value": "0x127E"
    },
    "6142": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19792, 19793],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6144": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19776, 19789],
      "op": "DUP14",
      "path": "0"
    },
    "6145": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19776, 19793],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "6148": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19776, 19793],
      "op": "JUMP",
      "path": "0"
    },
    "6149": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19754, 19794],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6150": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19616, 19625],
      "op": "PUSH2",
      "path": "0",
      "value": "0x107B"
    },
    "6153": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19616, 19804],
      "op": "JUMP",
      "path": "0"
    },
    "6154": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19616, 19804],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6155": {
      "op": "POP"
    },
    "6156": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6158": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "MLOAD",
      "path": "0"
    },
    "6159": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6166": {
      "op": "SHL"
    },
    "6167": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP2",
      "path": "0"
    },
    "6168": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "MSTORE",
      "path": "0"
    },
    "6169": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19865, 19869],
      "op": "ADDRESS",
      "path": "0"
    },
    "6170": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6172": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP3",
      "path": "0"
    },
    "6173": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "ADD",
      "path": "0"
    },
    "6174": {
      "op": "MSTORE"
    },
    "6175": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19814, 19838],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6177": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19814, 19838],
      "op": "SWAP1",
      "path": "0"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6184": {
      "op": "SHL"
    },
    "6185": {
      "op": "SUB"
    },
    "6186": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19856],
      "op": "DUP13",
      "path": "0"
    },
    "6187": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19856],
      "op": "AND",
      "path": "0"
    },
    "6188": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19856],
      "op": "SWAP1",
      "path": "0"
    },
    "6189": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19856],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "6194": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19856],
      "op": "SWAP1",
      "path": "0"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6197": {
      "op": "ADD"
    },
    "6198": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6200": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6202": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "MLOAD",
      "path": "0"
    },
    "6203": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP1",
      "path": "0"
    },
    "6204": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP4",
      "path": "0"
    },
    "6205": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "SUB",
      "path": "0"
    },
    "6206": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP2",
      "path": "0"
    },
    "6207": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP7",
      "path": "0"
    },
    "6208": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "GAS",
      "path": "0"
    },
    "6209": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "STATICCALL",
      "path": "0"
    },
    "6210": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "ISZERO",
      "path": "0"
    },
    "6211": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP1",
      "path": "0"
    },
    "6212": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "ISZERO",
      "path": "0"
    },
    "6213": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1852"
    },
    "6216": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "JUMPI",
      "path": "0"
    },
    "6217": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6218": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6220": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP1",
      "path": "0"
    },
    "6221": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6222": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6223": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6225": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "REVERT",
      "path": "0"
    },
    "6226": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6227": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "POP",
      "path": "0"
    },
    "6228": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "POP",
      "path": "0"
    },
    "6229": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "POP",
      "path": "0"
    },
    "6230": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "POP",
      "path": "0"
    },
    "6231": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6233": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "MLOAD",
      "path": "0"
    },
    "6234": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6235": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6237": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "NOT",
      "path": "0"
    },
    "6238": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6240": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP3",
      "path": "0"
    },
    "6241": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "ADD",
      "path": "0"
    },
    "6242": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "AND",
      "path": "0"
    },
    "6243": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP3",
      "path": "0"
    },
    "6244": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "ADD",
      "path": "0"
    },
    "6245": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP1",
      "path": "0"
    },
    "6246": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6248": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "MSTORE",
      "path": "0"
    },
    "6249": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "POP",
      "path": "0"
    },
    "6250": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "DUP2",
      "path": "0"
    },
    "6251": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "ADD",
      "path": "0"
    },
    "6252": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "SWAP1",
      "path": "0"
    },
    "6253": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1876"
    },
    "6256": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "SWAP2",
      "path": "0"
    },
    "6257": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "SWAP1",
      "path": "0"
    },
    "6258": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "6261": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19841, 19871],
      "op": "JUMP",
      "path": "0"
    },
    "6262": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19841, 19871],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6263": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19814, 19871],
      "op": "SWAP1",
      "path": "0"
    },
    "6264": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19814, 19871],
      "op": "POP",
      "path": "0"
    },
    "6265": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19908, 19925],
      "op": "DUP2",
      "path": "0",
      "statement": 51
    },
    "6266": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19889, 19905],
      "op": "DUP2",
      "path": "0"
    },
    "6267": {
      "branch": 84,
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19889, 19925],
      "op": "GT",
      "path": "0"
    },
    "6268": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18B9"
    },
    "6271": {
      "branch": 84,
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "JUMPI",
      "path": "0"
    },
    "6272": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6274": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "MLOAD",
      "path": "0"
    },
    "6275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6281": {
      "op": "SHL"
    },
    "6282": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "DUP2",
      "path": "0"
    },
    "6283": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "MSTORE",
      "path": "0"
    },
    "6284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6286": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6288": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "DUP3",
      "path": "0"
    },
    "6289": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "ADD",
      "path": "0"
    },
    "6290": {
      "op": "MSTORE"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "6293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6295": {
      "op": "DUP3"
    },
    "6296": {
      "op": "ADD"
    },
    "6297": {
      "op": "MSTORE"
    },
    "6298": {
      "op": "PUSH15",
      "value": "0x1DDA5D1A191C985DC819985A5B1959"
    },
    "6314": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "6316": {
      "op": "SHL"
    },
    "6317": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6319": {
      "op": "DUP3"
    },
    "6320": {
      "op": "ADD"
    },
    "6321": {
      "op": "MSTORE"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6324": {
      "op": "ADD"
    },
    "6325": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39A"
    },
    "6328": {
      "op": "JUMP"
    },
    "6329": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19881, 19945],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6330": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19956, 20119],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0x18CF"
    },
    "6333": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19978, 19983],
      "op": "DUP12",
      "path": "0"
    },
    "6334": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20005, 20009],
      "op": "ADDRESS",
      "path": "0"
    },
    "6335": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20024, 20032],
      "op": "DUP13",
      "path": "0"
    },
    "6336": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20046, 20082],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C9"
    },
    "6339": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20065, 20082],
      "op": "DUP7",
      "path": "0"
    },
    "6340": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20046, 20062],
      "op": "DUP7",
      "path": "0"
    },
    "6341": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20046, 20082],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "6344": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [20046, 20082],
      "op": "JUMP",
      "path": "0"
    },
    "6345": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20046, 20082],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6346": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20096, 20109],
      "op": "DUP10",
      "path": "0"
    },
    "6347": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19956, 19964],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC15"
    },
    "6350": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [19956, 20119],
      "op": "JUMP",
      "path": "0"
    },
    "6351": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19956, 20119],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6352": {
      "op": "POP"
    },
    "6353": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6355": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "MLOAD",
      "path": "0"
    },
    "6356": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6363": {
      "op": "SHL"
    },
    "6364": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP2",
      "path": "0"
    },
    "6365": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "MSTORE",
      "path": "0"
    },
    "6366": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20179, 20183],
      "op": "ADDRESS",
      "path": "0"
    },
    "6367": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6369": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP3",
      "path": "0"
    },
    "6370": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "ADD",
      "path": "0"
    },
    "6371": {
      "op": "MSTORE"
    },
    "6372": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20129, 20152],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6374": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20129, 20152],
      "op": "SWAP1",
      "path": "0"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6381": {
      "op": "SHL"
    },
    "6382": {
      "op": "SUB"
    },
    "6383": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20170],
      "op": "DUP14",
      "path": "0"
    },
    "6384": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20170],
      "op": "AND",
      "path": "0"
    },
    "6385": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20170],
      "op": "SWAP1",
      "path": "0"
    },
    "6386": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20170],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "6391": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20170],
      "op": "SWAP1",
      "path": "0"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6394": {
      "op": "ADD"
    },
    "6395": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6397": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6399": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "MLOAD",
      "path": "0"
    },
    "6400": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP1",
      "path": "0"
    },
    "6401": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP4",
      "path": "0"
    },
    "6402": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "SUB",
      "path": "0"
    },
    "6403": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP2",
      "path": "0"
    },
    "6404": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP7",
      "path": "0"
    },
    "6405": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "GAS",
      "path": "0"
    },
    "6406": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "STATICCALL",
      "path": "0"
    },
    "6407": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "ISZERO",
      "path": "0"
    },
    "6408": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP1",
      "path": "0"
    },
    "6409": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "ISZERO",
      "path": "0"
    },
    "6410": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1917"
    },
    "6413": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "JUMPI",
      "path": "0"
    },
    "6414": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6415": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6417": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP1",
      "path": "0"
    },
    "6418": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6419": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6420": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6422": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "REVERT",
      "path": "0"
    },
    "6423": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6424": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "POP",
      "path": "0"
    },
    "6425": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "POP",
      "path": "0"
    },
    "6426": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "POP",
      "path": "0"
    },
    "6427": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "POP",
      "path": "0"
    },
    "6428": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6430": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "MLOAD",
      "path": "0"
    },
    "6431": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6432": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6434": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "NOT",
      "path": "0"
    },
    "6435": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6437": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP3",
      "path": "0"
    },
    "6438": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "ADD",
      "path": "0"
    },
    "6439": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "AND",
      "path": "0"
    },
    "6440": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP3",
      "path": "0"
    },
    "6441": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "ADD",
      "path": "0"
    },
    "6442": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP1",
      "path": "0"
    },
    "6443": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6445": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "MSTORE",
      "path": "0"
    },
    "6446": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "POP",
      "path": "0"
    },
    "6447": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "DUP2",
      "path": "0"
    },
    "6448": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "ADD",
      "path": "0"
    },
    "6449": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "SWAP1",
      "path": "0"
    },
    "6450": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH2",
      "path": "0",
      "value": "0x193B"
    },
    "6453": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "SWAP2",
      "path": "0"
    },
    "6454": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "SWAP1",
      "path": "0"
    },
    "6455": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F45"
    },
    "6458": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [20155, 20185],
      "op": "JUMP",
      "path": "0"
    },
    "6459": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20155, 20185],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6460": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20129, 20185],
      "op": "SWAP1",
      "path": "0"
    },
    "6461": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20129, 20185],
      "op": "POP",
      "path": "0"
    },
    "6462": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20222, 20237],
      "op": "DUP1",
      "path": "0",
      "statement": 53
    },
    "6463": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20203, 20219],
      "op": "DUP3",
      "path": "0"
    },
    "6464": {
      "branch": 85,
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20203, 20237],
      "op": "GT",
      "path": "0"
    },
    "6465": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "PUSH2",
      "path": "0",
      "value": "0x197D"
    },
    "6468": {
      "branch": 85,
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "JUMPI",
      "path": "0"
    },
    "6469": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6471": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "MLOAD",
      "path": "0"
    },
    "6472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6478": {
      "op": "SHL"
    },
    "6479": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "DUP2",
      "path": "0"
    },
    "6480": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "MSTORE",
      "path": "0"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6483": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6485": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "DUP3",
      "path": "0"
    },
    "6486": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "ADD",
      "path": "0"
    },
    "6487": {
      "op": "MSTORE"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "6490": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6492": {
      "op": "DUP3"
    },
    "6493": {
      "op": "ADD"
    },
    "6494": {
      "op": "MSTORE"
    },
    "6495": {
      "op": "PUSH14",
      "value": "0x19195C1BDCDA5D0819985A5B1959"
    },
    "6510": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "6512": {
      "op": "SHL"
    },
    "6513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6515": {
      "op": "DUP3"
    },
    "6516": {
      "op": "ADD"
    },
    "6517": {
      "op": "MSTORE"
    },
    "6518": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6520": {
      "op": "ADD"
    },
    "6521": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39A"
    },
    "6524": {
      "op": "JUMP"
    },
    "6525": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20195, 20256],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6526": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20277, 20311],
      "op": "PUSH2",
      "path": "0",
      "statement": 54,
      "value": "0x1987"
    },
    "6529": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20296, 20311],
      "op": "DUP2",
      "path": "0"
    },
    "6530": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20277, 20293],
      "op": "DUP4",
      "path": "0"
    },
    "6531": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20277, 20311],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "6534": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [20277, 20311],
      "op": "JUMP",
      "path": "0"
    },
    "6535": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20277, 20311],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6536": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20266, 20311],
      "op": "SWAP7",
      "path": "0"
    },
    "6537": {
      "op": "POP"
    },
    "6538": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20266, 20311],
      "op": "DUP7",
      "path": "0"
    },
    "6539": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20326, 20362],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1994"
    },
    "6542": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20345, 20362],
      "op": "DUP5",
      "path": "0"
    },
    "6543": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20326, 20342],
      "op": "DUP5",
      "path": "0"
    },
    "6544": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20326, 20362],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "6547": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [20326, 20362],
      "op": "JUMP",
      "path": "0"
    },
    "6548": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20326, 20362],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6549": {
      "branch": 86,
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20326, 20373],
      "op": "GT",
      "path": "0"
    },
    "6550": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20322, 20538],
      "op": "ISZERO",
      "path": "0"
    },
    "6551": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20322, 20538],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19A9"
    },
    "6554": {
      "branch": 86,
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20322, 20538],
      "op": "JUMPI",
      "path": "0"
    },
    "6555": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20389, 20527],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0x19A9"
    },
    "6558": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20429, 20434],
      "op": "DUP13",
      "path": "0"
    },
    "6559": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20452, 20460],
      "op": "DUP13",
      "path": "0"
    },
    "6560": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20478, 20513],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9E"
    },
    "6563": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20496, 20513],
      "op": "DUP7",
      "path": "0"
    },
    "6564": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20478, 20493],
      "op": "DUP6",
      "path": "0"
    },
    "6565": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20478, 20513],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC6"
    },
    "6568": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "i",
      "offset": [20478, 20513],
      "op": "JUMP",
      "path": "0"
    },
    "6569": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [20389, 20527],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6570": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19135, 20544],
      "op": "POP",
      "path": "0"
    },
    "6571": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19135, 20544],
      "op": "POP",
      "path": "0"
    },
    "6572": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19135, 20544],
      "op": "POP",
      "path": "0"
    },
    "6573": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19135, 20544],
      "op": "POP",
      "path": "0"
    },
    "6574": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19135, 20544],
      "op": "POP",
      "path": "0"
    },
    "6575": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [19135, 20544],
      "op": "POP",
      "path": "0"
    },
    "6576": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [18944, 20544],
      "op": "SWAP6",
      "path": "0"
    },
    "6577": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [18944, 20544],
      "op": "SWAP5",
      "path": "0"
    },
    "6578": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [18944, 20544],
      "op": "POP",
      "path": "0"
    },
    "6579": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [18944, 20544],
      "op": "POP",
      "path": "0"
    },
    "6580": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [18944, 20544],
      "op": "POP",
      "path": "0"
    },
    "6581": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [18944, 20544],
      "op": "POP",
      "path": "0"
    },
    "6582": {
      "fn": "ShapeShiftDAORouter._migrate",
      "offset": [18944, 20544],
      "op": "POP",
      "path": "0"
    },
    "6583": {
      "fn": "ShapeShiftDAORouter._migrate",
      "jump": "o",
      "offset": [18944, 20544],
      "op": "JUMP",
      "path": "0"
    },
    "6584": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1413, 2016],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6585": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1768, 1778],
      "op": "DUP1",
      "path": "4",
      "statement": 56
    },
    "6586": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1768, 1778],
      "op": "ISZERO",
      "path": "4"
    },
    "6587": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1768, 1778],
      "op": "DUP1",
      "path": "4"
    },
    "6588": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1767, 1829],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A32"
    },
    "6591": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1767, 1829],
      "op": "JUMPI",
      "path": "4"
    },
    "6592": {
      "op": "POP"
    },
    "6593": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6595": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "MLOAD",
      "path": "4"
    },
    "6596": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "6601": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6603": {
      "op": "SHL"
    },
    "6604": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP2",
      "path": "4"
    },
    "6605": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "MSTORE",
      "path": "4"
    },
    "6606": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1808, 1812],
      "op": "ADDRESS",
      "path": "4"
    },
    "6607": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6609": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP3",
      "path": "4"
    },
    "6610": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "ADD",
      "path": "4"
    },
    "6611": {
      "op": "MSTORE"
    },
    "6612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6618": {
      "op": "SHL"
    },
    "6619": {
      "op": "SUB"
    },
    "6620": {
      "op": "DUP4"
    },
    "6621": {
      "op": "DUP2"
    },
    "6622": {
      "op": "AND"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6625": {
      "op": "DUP4"
    },
    "6626": {
      "op": "ADD"
    },
    "6627": {
      "op": "MSTORE"
    },
    "6628": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1799],
      "op": "DUP5",
      "path": "4"
    },
    "6629": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1799],
      "op": "AND",
      "path": "4"
    },
    "6630": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1799],
      "op": "SWAP1",
      "path": "4"
    },
    "6631": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1799],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "6636": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1799],
      "op": "SWAP1",
      "path": "4"
    },
    "6637": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6639": {
      "op": "ADD"
    },
    "6640": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6642": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6644": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "MLOAD",
      "path": "4"
    },
    "6645": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP1",
      "path": "4"
    },
    "6646": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP4",
      "path": "4"
    },
    "6647": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "SUB",
      "path": "4"
    },
    "6648": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP2",
      "path": "4"
    },
    "6649": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP7",
      "path": "4"
    },
    "6650": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "GAS",
      "path": "4"
    },
    "6651": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "STATICCALL",
      "path": "4"
    },
    "6652": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "ISZERO",
      "path": "4"
    },
    "6653": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP1",
      "path": "4"
    },
    "6654": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "ISZERO",
      "path": "4"
    },
    "6655": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A0C"
    },
    "6658": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "JUMPI",
      "path": "4"
    },
    "6659": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "6660": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6662": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP1",
      "path": "4"
    },
    "6663": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "6664": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "6665": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6667": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "REVERT",
      "path": "4"
    },
    "6668": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6669": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "POP",
      "path": "4"
    },
    "6670": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "POP",
      "path": "4"
    },
    "6671": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "POP",
      "path": "4"
    },
    "6672": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "POP",
      "path": "4"
    },
    "6673": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6675": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "MLOAD",
      "path": "4"
    },
    "6676": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "6677": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "6679": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "NOT",
      "path": "4"
    },
    "6680": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "6682": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP3",
      "path": "4"
    },
    "6683": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "ADD",
      "path": "4"
    },
    "6684": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "AND",
      "path": "4"
    },
    "6685": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP3",
      "path": "4"
    },
    "6686": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "ADD",
      "path": "4"
    },
    "6687": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP1",
      "path": "4"
    },
    "6688": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6690": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "MSTORE",
      "path": "4"
    },
    "6691": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "POP",
      "path": "4"
    },
    "6692": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "DUP2",
      "path": "4"
    },
    "6693": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "ADD",
      "path": "4"
    },
    "6694": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "SWAP1",
      "path": "4"
    },
    "6695": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A30"
    },
    "6698": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "SWAP2",
      "path": "4"
    },
    "6699": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "SWAP1",
      "path": "4"
    },
    "6700": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F45"
    },
    "6703": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [1784, 1823],
      "op": "JUMP",
      "path": "4"
    },
    "6704": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1823],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6705": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1784, 1828],
      "op": "ISZERO",
      "path": "4"
    },
    "6706": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1767, 1829],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6707": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A9D"
    },
    "6710": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "JUMPI",
      "path": "4"
    },
    "6711": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6713": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "MLOAD",
      "path": "4"
    },
    "6714": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6718": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6720": {
      "op": "SHL"
    },
    "6721": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "DUP2",
      "path": "4"
    },
    "6722": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "MSTORE",
      "path": "4"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6725": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6727": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "DUP3",
      "path": "4"
    },
    "6728": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "ADD",
      "path": "4"
    },
    "6729": {
      "op": "MSTORE"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6734": {
      "op": "DUP3"
    },
    "6735": {
      "op": "ADD"
    },
    "6736": {
      "op": "MSTORE"
    },
    "6737": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6772": {
      "op": "DUP3"
    },
    "6773": {
      "op": "ADD"
    },
    "6774": {
      "op": "MSTORE"
    },
    "6775": {
      "op": "PUSH22",
      "value": "0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365"
    },
    "6798": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6800": {
      "op": "SHL"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6803": {
      "op": "DUP3"
    },
    "6804": {
      "op": "ADD"
    },
    "6805": {
      "op": "MSTORE"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6808": {
      "op": "ADD"
    },
    "6809": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "PUSH2",
      "path": "4",
      "value": "0x39A"
    },
    "6812": {
      "op": "JUMP"
    },
    "6813": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1746, 1909],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6814": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "PUSH1",
      "path": "4",
      "statement": 57,
      "value": "0x40"
    },
    "6816": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "MLOAD",
      "path": "4"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6823": {
      "op": "SHL"
    },
    "6824": {
      "op": "SUB"
    },
    "6825": {
      "op": "DUP4"
    },
    "6826": {
      "op": "AND"
    },
    "6827": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "6829": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "DUP3",
      "path": "4"
    },
    "6830": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "ADD",
      "path": "4"
    },
    "6831": {
      "op": "MSTORE"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6834": {
      "op": "DUP2"
    },
    "6835": {
      "op": "ADD"
    },
    "6836": {
      "op": "DUP3"
    },
    "6837": {
      "op": "SWAP1"
    },
    "6838": {
      "op": "MSTORE"
    },
    "6839": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1919, 2009],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B00"
    },
    "6842": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1919, 2009],
      "op": "SWAP1",
      "path": "4"
    },
    "6843": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1939, 1944],
      "op": "DUP5",
      "path": "4"
    },
    "6844": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1939, 1944],
      "op": "SWAP1",
      "path": "4"
    },
    "6845": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6852": {
      "op": "SHL"
    },
    "6853": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1969, 1991],
      "op": "SWAP1",
      "path": "4"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6856": {
      "op": "ADD"
    },
    "6857": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6858": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6860": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "DUP1",
      "path": "4"
    },
    "6861": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "MLOAD",
      "path": "4"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6864": {
      "op": "NOT"
    },
    "6865": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "DUP2",
      "path": "4"
    },
    "6866": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "DUP5",
      "path": "4"
    },
    "6867": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "SUB",
      "path": "4"
    },
    "6868": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "ADD",
      "path": "4"
    },
    "6869": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "DUP2",
      "path": "4"
    },
    "6870": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "MSTORE",
      "path": "4"
    },
    "6871": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "SWAP2",
      "path": "4"
    },
    "6872": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "SWAP1",
      "path": "4"
    },
    "6873": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "MSTORE",
      "path": "4"
    },
    "6874": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6876": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "DUP2",
      "path": "4"
    },
    "6877": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "ADD",
      "path": "4"
    },
    "6878": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "DUP1",
      "path": "4"
    },
    "6879": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "MLOAD",
      "path": "4"
    },
    "6880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6886": {
      "op": "SHL"
    },
    "6887": {
      "op": "SUB"
    },
    "6888": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "AND",
      "path": "4"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6895": {
      "op": "SHL"
    },
    "6896": {
      "op": "SUB"
    },
    "6897": {
      "op": "NOT"
    },
    "6898": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "SWAP1",
      "path": "4"
    },
    "6899": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "SWAP4",
      "path": "4"
    },
    "6900": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "AND",
      "path": "4"
    },
    "6901": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "SWAP3",
      "path": "4"
    },
    "6902": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "SWAP1",
      "path": "4"
    },
    "6903": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "SWAP3",
      "path": "4"
    },
    "6904": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "OR",
      "path": "4"
    },
    "6905": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "SWAP1",
      "path": "4"
    },
    "6906": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "SWAP2",
      "path": "4"
    },
    "6907": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1946, 2008],
      "op": "MSTORE",
      "path": "4"
    },
    "6908": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1919, 1938],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B89"
    },
    "6911": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [1919, 2009],
      "op": "JUMP",
      "path": "4"
    },
    "6912": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1919, 2009],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6913": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1413, 2016],
      "op": "POP",
      "path": "4"
    },
    "6914": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1413, 2016],
      "op": "POP",
      "path": "4"
    },
    "6915": {
      "fn": "SafeERC20.safeApprove",
      "offset": [1413, 2016],
      "op": "POP",
      "path": "4"
    },
    "6916": {
      "fn": "SafeERC20.safeApprove",
      "jump": "o",
      "offset": [1413, 2016],
      "op": "JUMP",
      "path": "4"
    },
    "6917": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6918": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "PUSH1",
      "path": "4",
      "statement": 58,
      "value": "0x40"
    },
    "6920": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "MLOAD",
      "path": "4"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6927": {
      "op": "SHL"
    },
    "6928": {
      "op": "SUB"
    },
    "6929": {
      "op": "DUP1"
    },
    "6930": {
      "op": "DUP6"
    },
    "6931": {
      "op": "AND"
    },
    "6932": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "6934": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "DUP4",
      "path": "4"
    },
    "6935": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "ADD",
      "path": "4"
    },
    "6936": {
      "op": "MSTORE"
    },
    "6937": {
      "op": "DUP4"
    },
    "6938": {
      "op": "AND"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6941": {
      "op": "DUP3"
    },
    "6942": {
      "op": "ADD"
    },
    "6943": {
      "op": "MSTORE"
    },
    "6944": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6946": {
      "op": "DUP2"
    },
    "6947": {
      "op": "ADD"
    },
    "6948": {
      "op": "DUP3"
    },
    "6949": {
      "op": "SWAP1"
    },
    "6950": {
      "op": "MSTORE"
    },
    "6951": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1050, 1146],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B3D"
    },
    "6954": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1050, 1146],
      "op": "SWAP1",
      "path": "4"
    },
    "6955": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1070, 1075],
      "op": "DUP6",
      "path": "4"
    },
    "6956": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1070, 1075],
      "op": "SWAP1",
      "path": "4"
    },
    "6957": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6962": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6964": {
      "op": "SHL"
    },
    "6965": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1100, 1127],
      "op": "SWAP1",
      "path": "4"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6968": {
      "op": "ADD"
    },
    "6969": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1077, 1145],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AC9"
    },
    "6972": {
      "op": "JUMP"
    },
    "6973": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [1050, 1146],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6974": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "POP",
      "path": "4"
    },
    "6975": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "POP",
      "path": "4"
    },
    "6976": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "POP",
      "path": "4"
    },
    "6977": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [912, 1153],
      "op": "POP",
      "path": "4"
    },
    "6978": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [912, 1153],
      "op": "JUMP",
      "path": "4"
    },
    "6979": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [701, 906],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6980": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "4",
      "statement": 59,
      "value": "0x40"
    },
    "6982": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MLOAD",
      "path": "4"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6989": {
      "op": "SHL"
    },
    "6990": {
      "op": "SUB"
    },
    "6991": {
      "op": "DUP4"
    },
    "6992": {
      "op": "AND"
    },
    "6993": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "6995": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP3",
      "path": "4"
    },
    "6996": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "ADD",
      "path": "4"
    },
    "6997": {
      "op": "MSTORE"
    },
    "6998": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7000": {
      "op": "DUP2"
    },
    "7001": {
      "op": "ADD"
    },
    "7002": {
      "op": "DUP3"
    },
    "7003": {
      "op": "SWAP1"
    },
    "7004": {
      "op": "MSTORE"
    },
    "7005": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 899],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B00"
    },
    "7008": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 899],
      "op": "SWAP1",
      "path": "4"
    },
    "7009": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [833, 838],
      "op": "DUP5",
      "path": "4"
    },
    "7010": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [833, 838],
      "op": "SWAP1",
      "path": "4"
    },
    "7011": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7018": {
      "op": "SHL"
    },
    "7019": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [863, 886],
      "op": "SWAP1",
      "path": "4"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7022": {
      "op": "ADD"
    },
    "7023": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AC9"
    },
    "7026": {
      "op": "JUMP"
    },
    "7027": {
      "fn": "Math.min",
      "offset": [446, 550],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7028": {
      "fn": "Math.min",
      "offset": [504, 511],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7030": {
      "fn": "Math.min",
      "offset": [534, 535],
      "op": "DUP2",
      "path": "7",
      "statement": 60
    },
    "7031": {
      "fn": "Math.min",
      "offset": [530, 531],
      "op": "DUP4",
      "path": "7"
    },
    "7032": {
      "branch": 89,
      "fn": "Math.min",
      "offset": [530, 535],
      "op": "LT",
      "path": "7"
    },
    "7033": {
      "fn": "Math.min",
      "offset": [530, 543],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B82"
    },
    "7036": {
      "branch": 89,
      "fn": "Math.min",
      "offset": [530, 543],
      "op": "JUMPI",
      "path": "7"
    },
    "7037": {
      "fn": "Math.min",
      "offset": [542, 543],
      "op": "DUP2",
      "path": "7"
    },
    "7038": {
      "fn": "Math.min",
      "offset": [530, 543],
      "op": "PUSH2",
      "path": "7",
      "value": "0x367"
    },
    "7041": {
      "fn": "Math.min",
      "offset": [530, 543],
      "op": "JUMP",
      "path": "7"
    },
    "7042": {
      "fn": "Math.min",
      "offset": [530, 543],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7043": {
      "op": "POP"
    },
    "7044": {
      "fn": "Math.min",
      "offset": [538, 539],
      "op": "SWAP1",
      "path": "7"
    },
    "7045": {
      "fn": "Math.min",
      "offset": [538, 539],
      "op": "SWAP2",
      "path": "7"
    },
    "7046": {
      "fn": "Math.min",
      "offset": [446, 550],
      "op": "SWAP1",
      "path": "7"
    },
    "7047": {
      "op": "POP"
    },
    "7048": {
      "fn": "Math.min",
      "jump": "o",
      "offset": [446, 550],
      "op": "JUMP",
      "path": "7"
    },
    "7049": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3207, 3913],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7050": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3649],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7052": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BDE"
    },
    "7055": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3680, 3684],
      "op": "DUP3",
      "path": "4"
    },
    "7056": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7058": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MLOAD",
      "path": "4"
    },
    "7059": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP1",
      "path": "4"
    },
    "7060": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7062": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "ADD",
      "path": "4"
    },
    "7063": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7065": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "4"
    },
    "7066": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP1",
      "path": "4"
    },
    "7067": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7069": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP2",
      "path": "4"
    },
    "7070": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "4"
    },
    "7071": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7073": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "ADD",
      "path": "4"
    },
    "7074": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "7107": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP2",
      "path": "4"
    },
    "7108": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "4"
    },
    "7109": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "POP",
      "path": "4"
    },
    "7110": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3660, 3665],
      "op": "DUP6",
      "path": "4"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7117": {
      "op": "SHL"
    },
    "7118": {
      "op": "SUB"
    },
    "7119": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "AND",
      "path": "4"
    },
    "7120": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C5B"
    },
    "7123": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "SWAP1",
      "path": "4"
    },
    "7124": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP3",
      "path": "4"
    },
    "7125": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP2",
      "path": "4"
    },
    "7126": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP1",
      "path": "4"
    },
    "7127": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "7132": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "AND",
      "path": "4"
    },
    "7133": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3652, 3721],
      "op": "JUMP",
      "path": "4"
    },
    "7134": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7135": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3752],
      "op": "DUP1",
      "path": "4"
    },
    "7136": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3752],
      "op": "MLOAD",
      "path": "4"
    },
    "7137": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3721],
      "op": "SWAP1",
      "path": "4"
    },
    "7138": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3721],
      "op": "SWAP2",
      "path": "4"
    },
    "7139": {
      "op": "POP"
    },
    "7140": {
      "branch": 91,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3756],
      "op": "ISZERO",
      "path": "4"
    },
    "7141": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3731, 3907],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B00"
    },
    "7144": {
      "branch": 91,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3731, 3907],
      "op": "JUMPI",
      "path": "4"
    },
    "7145": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3830, 3840],
      "op": "DUP1",
      "path": "4",
      "statement": 61
    },
    "7146": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "DUP1",
      "path": "4"
    },
    "7147": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7149": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "ADD",
      "path": "4"
    },
    "7150": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "4"
    },
    "7151": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "MLOAD",
      "path": "4"
    },
    "7152": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "DUP2",
      "path": "4"
    },
    "7153": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "ADD",
      "path": "4"
    },
    "7154": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "4"
    },
    "7155": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BFC"
    },
    "7158": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP2",
      "path": "4"
    },
    "7159": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "4"
    },
    "7160": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2141"
    },
    "7163": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3819, 3849],
      "op": "JUMP",
      "path": "4"
    },
    "7164": {
      "branch": 92,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7165": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B00"
    },
    "7168": {
      "branch": 92,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "JUMPI",
      "path": "4"
    },
    "7169": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7171": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "MLOAD",
      "path": "4"
    },
    "7172": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7178": {
      "op": "SHL"
    },
    "7179": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "DUP2",
      "path": "4"
    },
    "7180": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "MSTORE",
      "path": "4"
    },
    "7181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7183": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7185": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "DUP3",
      "path": "4"
    },
    "7186": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "ADD",
      "path": "4"
    },
    "7187": {
      "op": "MSTORE"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "7190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7192": {
      "op": "DUP3"
    },
    "7193": {
      "op": "ADD"
    },
    "7194": {
      "op": "MSTORE"
    },
    "7195": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "7228": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7230": {
      "op": "DUP3"
    },
    "7231": {
      "op": "ADD"
    },
    "7232": {
      "op": "MSTORE"
    },
    "7233": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "7246": {
      "op": "SHL"
    },
    "7247": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7249": {
      "op": "DUP3"
    },
    "7250": {
      "op": "ADD"
    },
    "7251": {
      "op": "MSTORE"
    },
    "7252": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7254": {
      "op": "ADD"
    },
    "7255": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH2",
      "path": "4",
      "value": "0x39A"
    },
    "7258": {
      "op": "JUMP"
    },
    "7259": {
      "fn": "Address.functionCall",
      "offset": [3514, 3737],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7260": {
      "fn": "Address.functionCall",
      "offset": [3647, 3659],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "7262": {
      "fn": "Address.functionCall",
      "offset": [3678, 3730],
      "op": "PUSH2",
      "path": "5",
      "statement": 62,
      "value": "0x450"
    },
    "7265": {
      "fn": "Address.functionCall",
      "offset": [3700, 3706],
      "op": "DUP5",
      "path": "5"
    },
    "7266": {
      "fn": "Address.functionCall",
      "offset": [3708, 3712],
      "op": "DUP5",
      "path": "5"
    },
    "7267": {
      "fn": "Address.functionCall",
      "offset": [3714, 3715],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7269": {
      "fn": "Address.functionCall",
      "offset": [3717, 3729],
      "op": "DUP6",
      "path": "5"
    },
    "7270": {
      "fn": "Address.functionCall",
      "offset": [3647, 3659],
      "op": "DUP6",
      "path": "5"
    },
    "7271": {
      "fn": "Address.isContract",
      "offset": [1087, 1107],
      "op": "DUP5",
      "path": "5"
    },
    "7272": {
      "fn": "Address.isContract",
      "offset": [1087, 1107],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "7273": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "PUSH2",
      "path": "5",
      "statement": 63,
      "value": "0x1CB4"
    },
    "7276": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "JUMPI",
      "path": "5"
    },
    "7277": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7279": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "MLOAD",
      "path": "5"
    },
    "7280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7286": {
      "op": "SHL"
    },
    "7287": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "DUP2",
      "path": "5"
    },
    "7288": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "MSTORE",
      "path": "5"
    },
    "7289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7291": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7293": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "DUP3",
      "path": "5"
    },
    "7294": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "ADD",
      "path": "5"
    },
    "7295": {
      "op": "MSTORE"
    },
    "7296": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7300": {
      "op": "DUP3"
    },
    "7301": {
      "op": "ADD"
    },
    "7302": {
      "op": "MSTORE"
    },
    "7303": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "7336": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7338": {
      "op": "DUP3"
    },
    "7339": {
      "op": "ADD"
    },
    "7340": {
      "op": "MSTORE"
    },
    "7341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7343": {
      "op": "ADD"
    },
    "7344": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39A"
    },
    "7347": {
      "op": "JUMP"
    },
    "7348": {
      "fn": "Address.functionCallWithValue",
      "offset": [4881, 4941],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7349": {
      "fn": "Address.functionCallWithValue",
      "offset": [4953, 4965],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7351": {
      "fn": "Address.functionCallWithValue",
      "offset": [4967, 4990],
      "op": "DUP1",
      "path": "5"
    },
    "7352": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5000],
      "op": "DUP7",
      "path": "5"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7359": {
      "op": "SHL"
    },
    "7360": {
      "op": "SUB"
    },
    "7361": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5005],
      "op": "AND",
      "path": "5"
    },
    "7362": {
      "fn": "Address.functionCallWithValue",
      "offset": [5013, 5018],
      "op": "DUP6",
      "path": "5"
    },
    "7363": {
      "fn": "Address.functionCallWithValue",
      "offset": [5020, 5024],
      "op": "DUP8",
      "path": "5"
    },
    "7364": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7366": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "MLOAD",
      "path": "5"
    },
    "7367": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CD0"
    },
    "7370": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SWAP2",
      "path": "5"
    },
    "7371": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SWAP1",
      "path": "5"
    },
    "7372": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH2",
      "path": "5",
      "value": "0x218F"
    },
    "7375": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [4994, 5025],
      "op": "JUMP",
      "path": "5"
    },
    "7376": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7377": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7379": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7381": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "MLOAD",
      "path": "5"
    },
    "7382": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP1",
      "path": "5"
    },
    "7383": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP4",
      "path": "5"
    },
    "7384": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SUB",
      "path": "5"
    },
    "7385": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP2",
      "path": "5"
    },
    "7386": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP6",
      "path": "5"
    },
    "7387": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP8",
      "path": "5"
    },
    "7388": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "GAS",
      "path": "5"
    },
    "7389": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "CALL",
      "path": "5"
    },
    "7390": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SWAP3",
      "path": "5"
    },
    "7391": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "5"
    },
    "7392": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "5"
    },
    "7393": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "5"
    },
    "7394": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7395": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP1",
      "path": "5"
    },
    "7396": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7398": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP2",
      "path": "5"
    },
    "7399": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "EQ",
      "path": "5"
    },
    "7400": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D0D"
    },
    "7403": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "JUMPI",
      "path": "5"
    },
    "7404": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7406": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "MLOAD",
      "path": "5"
    },
    "7407": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SWAP2",
      "path": "5"
    },
    "7408": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "5"
    },
    "7409": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "7411": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "NOT",
      "path": "5"
    },
    "7412": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "7414": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7415": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "ADD",
      "path": "5"
    },
    "7416": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "AND",
      "path": "5"
    },
    "7417": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP3",
      "path": "5"
    },
    "7418": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "ADD",
      "path": "5"
    },
    "7419": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7421": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "MSTORE",
      "path": "5"
    },
    "7422": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7423": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP3",
      "path": "5"
    },
    "7424": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "MSTORE",
      "path": "5"
    },
    "7425": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7426": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7428": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7430": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "DUP5",
      "path": "5"
    },
    "7431": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "ADD",
      "path": "5"
    },
    "7432": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "7433": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D12"
    },
    "7436": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "JUMP",
      "path": "5"
    },
    "7437": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7438": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "7440": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "SWAP2",
      "path": "5"
    },
    "7441": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "5"
    },
    "7442": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7443": {
      "fn": "Address.functionCallWithValue",
      "offset": [4994, 5025],
      "op": "POP",
      "path": "5"
    },
    "7444": {
      "fn": "Address.functionCallWithValue",
      "offset": [4952, 5025],
      "op": "SWAP2",
      "path": "5"
    },
    "7445": {
      "fn": "Address.functionCallWithValue",
      "offset": [4952, 5025],
      "op": "POP",
      "path": "5"
    },
    "7446": {
      "fn": "Address.functionCallWithValue",
      "offset": [4952, 5025],
      "op": "SWAP2",
      "path": "5"
    },
    "7447": {
      "fn": "Address.functionCallWithValue",
      "offset": [4952, 5025],
      "op": "POP",
      "path": "5"
    },
    "7448": {
      "fn": "Address.functionCallWithValue",
      "offset": [5042, 5093],
      "op": "PUSH2",
      "path": "5",
      "statement": 64,
      "value": "0x1D22"
    },
    "7451": {
      "fn": "Address.functionCallWithValue",
      "offset": [5059, 5066],
      "op": "DUP3",
      "path": "5"
    },
    "7452": {
      "fn": "Address.functionCallWithValue",
      "offset": [5068, 5078],
      "op": "DUP3",
      "path": "5"
    },
    "7453": {
      "fn": "Address.functionCallWithValue",
      "offset": [5080, 5092],
      "op": "DUP7",
      "path": "5"
    },
    "7454": {
      "fn": "Address.functionCallWithValue",
      "offset": [5042, 5058],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D2D"
    },
    "7457": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [5042, 5093],
      "op": "JUMP",
      "path": "5"
    },
    "7458": {
      "fn": "Address.functionCallWithValue",
      "offset": [5042, 5093],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7459": {
      "fn": "Address.functionCallWithValue",
      "offset": [5035, 5093],
      "op": "SWAP8",
      "path": "5"
    },
    "7460": {
      "fn": "Address.functionCallWithValue",
      "offset": [4601, 5100],
      "op": "SWAP7",
      "path": "5"
    },
    "7461": {
      "op": "POP"
    },
    "7462": {
      "op": "POP"
    },
    "7463": {
      "op": "POP"
    },
    "7464": {
      "op": "POP"
    },
    "7465": {
      "op": "POP"
    },
    "7466": {
      "op": "POP"
    },
    "7467": {
      "op": "POP"
    },
    "7468": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [4601, 5100],
      "op": "JUMP",
      "path": "5"
    },
    "7469": {
      "fn": "Address.verifyCallResult",
      "offset": [7214, 7906],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7470": {
      "fn": "Address.verifyCallResult",
      "offset": [7360, 7372],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "7472": {
      "branch": 87,
      "fn": "Address.verifyCallResult",
      "offset": [7388, 7395],
      "op": "DUP4",
      "path": "5"
    },
    "7473": {
      "fn": "Address.verifyCallResult",
      "offset": [7384, 7900],
      "op": "ISZERO",
      "path": "5"
    },
    "7474": {
      "fn": "Address.verifyCallResult",
      "offset": [7384, 7900],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D3C"
    },
    "7477": {
      "branch": 87,
      "fn": "Address.verifyCallResult",
      "offset": [7384, 7900],
      "op": "JUMPI",
      "path": "5"
    },
    "7478": {
      "op": "POP"
    },
    "7479": {
      "fn": "Address.verifyCallResult",
      "offset": [7418, 7428],
      "op": "DUP2",
      "path": "5",
      "statement": 65
    },
    "7480": {
      "fn": "Address.verifyCallResult",
      "offset": [7411, 7428],
      "op": "PUSH2",
      "path": "5",
      "value": "0x453"
    },
    "7483": {
      "fn": "Address.verifyCallResult",
      "offset": [7411, 7428],
      "op": "JUMP",
      "path": "5"
    },
    "7484": {
      "fn": "Address.verifyCallResult",
      "offset": [7384, 7900],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7485": {
      "fn": "Address.verifyCallResult",
      "offset": [7529, 7546],
      "op": "DUP3",
      "path": "5"
    },
    "7486": {
      "fn": "Address.verifyCallResult",
      "offset": [7529, 7546],
      "op": "MLOAD",
      "path": "5"
    },
    "7487": {
      "branch": 88,
      "fn": "Address.verifyCallResult",
      "offset": [7529, 7550],
      "op": "ISZERO",
      "path": "5"
    },
    "7488": {
      "fn": "Address.verifyCallResult",
      "offset": [7525, 7890],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D4C"
    },
    "7491": {
      "branch": 88,
      "fn": "Address.verifyCallResult",
      "offset": [7525, 7890],
      "op": "JUMPI",
      "path": "5"
    },
    "7492": {
      "fn": "Address.verifyCallResult",
      "offset": [7723, 7733],
      "op": "DUP3",
      "path": "5"
    },
    "7493": {
      "fn": "Address.verifyCallResult",
      "offset": [7717, 7734],
      "op": "MLOAD",
      "path": "5"
    },
    "7494": {
      "fn": "Address.verifyCallResult",
      "offset": [7783, 7798],
      "op": "DUP1",
      "path": "5"
    },
    "7495": {
      "fn": "Address.verifyCallResult",
      "offset": [7770, 7780],
      "op": "DUP5",
      "path": "5"
    },
    "7496": {
      "fn": "Address.verifyCallResult",
      "offset": [7766, 7768],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7498": {
      "fn": "Address.verifyCallResult",
      "offset": [7762, 7781],
      "op": "ADD",
      "path": "5"
    },
    "7499": {
      "fn": "Address.verifyCallResult",
      "offset": [7755, 7799],
      "op": "REVERT",
      "path": "5"
    },
    "7500": {
      "fn": "Address.verifyCallResult",
      "offset": [7525, 7890],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7501": {
      "fn": "Address.verifyCallResult",
      "offset": [7862, 7874],
      "op": "DUP2",
      "path": "5",
      "statement": 66
    },
    "7502": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7504": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "MLOAD",
      "path": "5"
    },
    "7505": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7511": {
      "op": "SHL"
    },
    "7512": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "DUP2",
      "path": "5"
    },
    "7513": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "MSTORE",
      "path": "5"
    },
    "7514": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7516": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "ADD",
      "path": "5"
    },
    "7517": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39A"
    },
    "7520": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "SWAP2",
      "path": "5"
    },
    "7521": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "SWAP1",
      "path": "5"
    },
    "7522": {
      "fn": "Address.verifyCallResult",
      "offset": [7855, 7875],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21AB"
    },
    "7525": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [7855, 7875],
      "op": "JUMP",
      "path": "5"
    },
    "7526": {
      "op": "JUMPDEST"
    },
    "7527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7533": {
      "op": "SHL"
    },
    "7534": {
      "op": "SUB"
    },
    "7535": {
      "op": "DUP2"
    },
    "7536": {
      "op": "AND"
    },
    "7537": {
      "op": "DUP2"
    },
    "7538": {
      "op": "EQ"
    },
    "7539": {
      "op": "PUSH2",
      "value": "0xB4F"
    },
    "7542": {
      "op": "JUMPI"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7545": {
      "op": "DUP1"
    },
    "7546": {
      "op": "REVERT"
    },
    "7547": {
      "op": "JUMPDEST"
    },
    "7548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7550": {
      "op": "DUP1"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7553": {
      "op": "DUP1"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7556": {
      "op": "DUP6"
    },
    "7557": {
      "op": "DUP8"
    },
    "7558": {
      "op": "SUB"
    },
    "7559": {
      "op": "SLT"
    },
    "7560": {
      "op": "ISZERO"
    },
    "7561": {
      "op": "PUSH2",
      "value": "0x1D91"
    },
    "7564": {
      "op": "JUMPI"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7567": {
      "op": "DUP1"
    },
    "7568": {
      "op": "REVERT"
    },
    "7569": {
      "op": "JUMPDEST"
    },
    "7570": {
      "op": "DUP5"
    },
    "7571": {
      "op": "CALLDATALOAD"
    },
    "7572": {
      "op": "PUSH2",
      "value": "0x1D9C"
    },
    "7575": {
      "op": "DUP2"
    },
    "7576": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7579": {
      "jump": "i",
      "op": "JUMP"
    },
    "7580": {
      "op": "JUMPDEST"
    },
    "7581": {
      "op": "SWAP4"
    },
    "7582": {
      "op": "POP"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7585": {
      "op": "DUP6"
    },
    "7586": {
      "op": "ADD"
    },
    "7587": {
      "op": "CALLDATALOAD"
    },
    "7588": {
      "op": "PUSH2",
      "value": "0x1DAC"
    },
    "7591": {
      "op": "DUP2"
    },
    "7592": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7595": {
      "jump": "i",
      "op": "JUMP"
    },
    "7596": {
      "op": "JUMPDEST"
    },
    "7597": {
      "op": "SWAP4"
    },
    "7598": {
      "op": "SWAP7"
    },
    "7599": {
      "op": "SWAP4"
    },
    "7600": {
      "op": "SWAP6"
    },
    "7601": {
      "op": "POP"
    },
    "7602": {
      "op": "POP"
    },
    "7603": {
      "op": "POP"
    },
    "7604": {
      "op": "POP"
    },
    "7605": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7607": {
      "op": "DUP3"
    },
    "7608": {
      "op": "ADD"
    },
    "7609": {
      "op": "CALLDATALOAD"
    },
    "7610": {
      "op": "SWAP2"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7613": {
      "op": "ADD"
    },
    "7614": {
      "op": "CALLDATALOAD"
    },
    "7615": {
      "op": "SWAP1"
    },
    "7616": {
      "jump": "o",
      "op": "JUMP"
    },
    "7617": {
      "op": "JUMPDEST"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7620": {
      "op": "DUP1"
    },
    "7621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7623": {
      "op": "DUP4"
    },
    "7624": {
      "op": "DUP6"
    },
    "7625": {
      "op": "SUB"
    },
    "7626": {
      "op": "SLT"
    },
    "7627": {
      "op": "ISZERO"
    },
    "7628": {
      "op": "PUSH2",
      "value": "0x1DD4"
    },
    "7631": {
      "op": "JUMPI"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7634": {
      "op": "DUP1"
    },
    "7635": {
      "op": "REVERT"
    },
    "7636": {
      "op": "JUMPDEST"
    },
    "7637": {
      "op": "DUP3"
    },
    "7638": {
      "op": "CALLDATALOAD"
    },
    "7639": {
      "op": "PUSH2",
      "value": "0x1DDF"
    },
    "7642": {
      "op": "DUP2"
    },
    "7643": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7646": {
      "jump": "i",
      "op": "JUMP"
    },
    "7647": {
      "op": "JUMPDEST"
    },
    "7648": {
      "op": "SWAP2"
    },
    "7649": {
      "op": "POP"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7652": {
      "op": "DUP4"
    },
    "7653": {
      "op": "ADD"
    },
    "7654": {
      "op": "CALLDATALOAD"
    },
    "7655": {
      "op": "PUSH2",
      "value": "0x1DEF"
    },
    "7658": {
      "op": "DUP2"
    },
    "7659": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7662": {
      "jump": "i",
      "op": "JUMP"
    },
    "7663": {
      "op": "JUMPDEST"
    },
    "7664": {
      "op": "DUP1"
    },
    "7665": {
      "op": "SWAP2"
    },
    "7666": {
      "op": "POP"
    },
    "7667": {
      "op": "POP"
    },
    "7668": {
      "op": "SWAP3"
    },
    "7669": {
      "op": "POP"
    },
    "7670": {
      "op": "SWAP3"
    },
    "7671": {
      "op": "SWAP1"
    },
    "7672": {
      "op": "POP"
    },
    "7673": {
      "jump": "o",
      "op": "JUMP"
    },
    "7674": {
      "op": "JUMPDEST"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7677": {
      "op": "DUP1"
    },
    "7678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7680": {
      "op": "DUP1"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7685": {
      "op": "DUP7"
    },
    "7686": {
      "op": "DUP9"
    },
    "7687": {
      "op": "SUB"
    },
    "7688": {
      "op": "SLT"
    },
    "7689": {
      "op": "ISZERO"
    },
    "7690": {
      "op": "PUSH2",
      "value": "0x1E12"
    },
    "7693": {
      "op": "JUMPI"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7696": {
      "op": "DUP1"
    },
    "7697": {
      "op": "REVERT"
    },
    "7698": {
      "op": "JUMPDEST"
    },
    "7699": {
      "op": "DUP6"
    },
    "7700": {
      "op": "CALLDATALOAD"
    },
    "7701": {
      "op": "PUSH2",
      "value": "0x1E1D"
    },
    "7704": {
      "op": "DUP2"
    },
    "7705": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7708": {
      "jump": "i",
      "op": "JUMP"
    },
    "7709": {
      "op": "JUMPDEST"
    },
    "7710": {
      "op": "SWAP5"
    },
    "7711": {
      "op": "POP"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7714": {
      "op": "DUP7"
    },
    "7715": {
      "op": "ADD"
    },
    "7716": {
      "op": "CALLDATALOAD"
    },
    "7717": {
      "op": "PUSH2",
      "value": "0x1E2D"
    },
    "7720": {
      "op": "DUP2"
    },
    "7721": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7724": {
      "jump": "i",
      "op": "JUMP"
    },
    "7725": {
      "op": "JUMPDEST"
    },
    "7726": {
      "op": "SWAP5"
    },
    "7727": {
      "op": "SWAP8"
    },
    "7728": {
      "op": "SWAP5"
    },
    "7729": {
      "op": "SWAP7"
    },
    "7730": {
      "op": "POP"
    },
    "7731": {
      "op": "POP"
    },
    "7732": {
      "op": "POP"
    },
    "7733": {
      "op": "POP"
    },
    "7734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7736": {
      "op": "DUP4"
    },
    "7737": {
      "op": "ADD"
    },
    "7738": {
      "op": "CALLDATALOAD"
    },
    "7739": {
      "op": "SWAP3"
    },
    "7740": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7742": {
      "op": "DUP2"
    },
    "7743": {
      "op": "ADD"
    },
    "7744": {
      "op": "CALLDATALOAD"
    },
    "7745": {
      "op": "SWAP3"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7748": {
      "op": "SWAP1"
    },
    "7749": {
      "op": "SWAP2"
    },
    "7750": {
      "op": "ADD"
    },
    "7751": {
      "op": "CALLDATALOAD"
    },
    "7752": {
      "op": "SWAP2"
    },
    "7753": {
      "op": "POP"
    },
    "7754": {
      "jump": "o",
      "op": "JUMP"
    },
    "7755": {
      "op": "JUMPDEST"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7758": {
      "op": "DUP1"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7761": {
      "op": "DUP4"
    },
    "7762": {
      "op": "DUP6"
    },
    "7763": {
      "op": "SUB"
    },
    "7764": {
      "op": "SLT"
    },
    "7765": {
      "op": "ISZERO"
    },
    "7766": {
      "op": "PUSH2",
      "value": "0x1E5E"
    },
    "7769": {
      "op": "JUMPI"
    },
    "7770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7772": {
      "op": "DUP1"
    },
    "7773": {
      "op": "REVERT"
    },
    "7774": {
      "op": "JUMPDEST"
    },
    "7775": {
      "op": "DUP3"
    },
    "7776": {
      "op": "CALLDATALOAD"
    },
    "7777": {
      "op": "PUSH2",
      "value": "0x1E69"
    },
    "7780": {
      "op": "DUP2"
    },
    "7781": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7784": {
      "jump": "i",
      "op": "JUMP"
    },
    "7785": {
      "op": "JUMPDEST"
    },
    "7786": {
      "op": "SWAP5"
    },
    "7787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7789": {
      "op": "SWAP4"
    },
    "7790": {
      "op": "SWAP1"
    },
    "7791": {
      "op": "SWAP4"
    },
    "7792": {
      "op": "ADD"
    },
    "7793": {
      "op": "CALLDATALOAD"
    },
    "7794": {
      "op": "SWAP4"
    },
    "7795": {
      "op": "POP"
    },
    "7796": {
      "op": "POP"
    },
    "7797": {
      "op": "POP"
    },
    "7798": {
      "jump": "o",
      "op": "JUMP"
    },
    "7799": {
      "op": "JUMPDEST"
    },
    "7800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7802": {
      "op": "DUP1"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7807": {
      "op": "DUP5"
    },
    "7808": {
      "op": "DUP7"
    },
    "7809": {
      "op": "SUB"
    },
    "7810": {
      "op": "SLT"
    },
    "7811": {
      "op": "ISZERO"
    },
    "7812": {
      "op": "PUSH2",
      "value": "0x1E8C"
    },
    "7815": {
      "op": "JUMPI"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7818": {
      "op": "DUP1"
    },
    "7819": {
      "op": "REVERT"
    },
    "7820": {
      "op": "JUMPDEST"
    },
    "7821": {
      "op": "DUP4"
    },
    "7822": {
      "op": "CALLDATALOAD"
    },
    "7823": {
      "op": "PUSH2",
      "value": "0x1E97"
    },
    "7826": {
      "op": "DUP2"
    },
    "7827": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7830": {
      "jump": "i",
      "op": "JUMP"
    },
    "7831": {
      "op": "JUMPDEST"
    },
    "7832": {
      "op": "SWAP3"
    },
    "7833": {
      "op": "POP"
    },
    "7834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7836": {
      "op": "DUP5"
    },
    "7837": {
      "op": "ADD"
    },
    "7838": {
      "op": "CALLDATALOAD"
    },
    "7839": {
      "op": "PUSH2",
      "value": "0x1EA7"
    },
    "7842": {
      "op": "DUP2"
    },
    "7843": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7846": {
      "jump": "i",
      "op": "JUMP"
    },
    "7847": {
      "op": "JUMPDEST"
    },
    "7848": {
      "op": "SWAP3"
    },
    "7849": {
      "op": "SWAP6"
    },
    "7850": {
      "op": "SWAP3"
    },
    "7851": {
      "op": "SWAP5"
    },
    "7852": {
      "op": "POP"
    },
    "7853": {
      "op": "POP"
    },
    "7854": {
      "op": "POP"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7857": {
      "op": "SWAP2"
    },
    "7858": {
      "op": "SWAP1"
    },
    "7859": {
      "op": "SWAP2"
    },
    "7860": {
      "op": "ADD"
    },
    "7861": {
      "op": "CALLDATALOAD"
    },
    "7862": {
      "op": "SWAP1"
    },
    "7863": {
      "jump": "o",
      "op": "JUMP"
    },
    "7864": {
      "op": "JUMPDEST"
    },
    "7865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7869": {
      "op": "DUP3"
    },
    "7870": {
      "op": "DUP5"
    },
    "7871": {
      "op": "SUB"
    },
    "7872": {
      "op": "SLT"
    },
    "7873": {
      "op": "ISZERO"
    },
    "7874": {
      "op": "PUSH2",
      "value": "0x1ECA"
    },
    "7877": {
      "op": "JUMPI"
    },
    "7878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7880": {
      "op": "DUP1"
    },
    "7881": {
      "op": "REVERT"
    },
    "7882": {
      "op": "JUMPDEST"
    },
    "7883": {
      "op": "DUP2"
    },
    "7884": {
      "op": "CALLDATALOAD"
    },
    "7885": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "7888": {
      "op": "DUP2"
    },
    "7889": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7892": {
      "jump": "i",
      "op": "JUMP"
    },
    "7893": {
      "op": "JUMPDEST"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7896": {
      "op": "DUP1"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7899": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7901": {
      "op": "DUP5"
    },
    "7902": {
      "op": "DUP7"
    },
    "7903": {
      "op": "SUB"
    },
    "7904": {
      "op": "SLT"
    },
    "7905": {
      "op": "ISZERO"
    },
    "7906": {
      "op": "PUSH2",
      "value": "0x1EEA"
    },
    "7909": {
      "op": "JUMPI"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7912": {
      "op": "DUP1"
    },
    "7913": {
      "op": "REVERT"
    },
    "7914": {
      "op": "JUMPDEST"
    },
    "7915": {
      "op": "DUP4"
    },
    "7916": {
      "op": "CALLDATALOAD"
    },
    "7917": {
      "op": "PUSH2",
      "value": "0x1EF5"
    },
    "7920": {
      "op": "DUP2"
    },
    "7921": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7924": {
      "jump": "i",
      "op": "JUMP"
    },
    "7925": {
      "op": "JUMPDEST"
    },
    "7926": {
      "op": "SWAP6"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7929": {
      "op": "DUP6"
    },
    "7930": {
      "op": "ADD"
    },
    "7931": {
      "op": "CALLDATALOAD"
    },
    "7932": {
      "op": "SWAP6"
    },
    "7933": {
      "op": "POP"
    },
    "7934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7936": {
      "op": "SWAP1"
    },
    "7937": {
      "op": "SWAP5"
    },
    "7938": {
      "op": "ADD"
    },
    "7939": {
      "op": "CALLDATALOAD"
    },
    "7940": {
      "op": "SWAP4"
    },
    "7941": {
      "op": "SWAP3"
    },
    "7942": {
      "op": "POP"
    },
    "7943": {
      "op": "POP"
    },
    "7944": {
      "op": "POP"
    },
    "7945": {
      "jump": "o",
      "op": "JUMP"
    },
    "7946": {
      "op": "JUMPDEST"
    },
    "7947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7949": {
      "op": "DUP1"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7952": {
      "op": "DUP1"
    },
    "7953": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7955": {
      "op": "DUP6"
    },
    "7956": {
      "op": "DUP8"
    },
    "7957": {
      "op": "SUB"
    },
    "7958": {
      "op": "SLT"
    },
    "7959": {
      "op": "ISZERO"
    },
    "7960": {
      "op": "PUSH2",
      "value": "0x1F20"
    },
    "7963": {
      "op": "JUMPI"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7966": {
      "op": "DUP1"
    },
    "7967": {
      "op": "REVERT"
    },
    "7968": {
      "op": "JUMPDEST"
    },
    "7969": {
      "op": "DUP5"
    },
    "7970": {
      "op": "CALLDATALOAD"
    },
    "7971": {
      "op": "PUSH2",
      "value": "0x1F2B"
    },
    "7974": {
      "op": "DUP2"
    },
    "7975": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7978": {
      "jump": "i",
      "op": "JUMP"
    },
    "7979": {
      "op": "JUMPDEST"
    },
    "7980": {
      "op": "SWAP7"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7983": {
      "op": "DUP7"
    },
    "7984": {
      "op": "ADD"
    },
    "7985": {
      "op": "CALLDATALOAD"
    },
    "7986": {
      "op": "SWAP7"
    },
    "7987": {
      "op": "POP"
    },
    "7988": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7990": {
      "op": "DUP7"
    },
    "7991": {
      "op": "ADD"
    },
    "7992": {
      "op": "CALLDATALOAD"
    },
    "7993": {
      "op": "SWAP6"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7996": {
      "op": "ADD"
    },
    "7997": {
      "op": "CALLDATALOAD"
    },
    "7998": {
      "op": "SWAP5"
    },
    "7999": {
      "op": "POP"
    },
    "8000": {
      "op": "SWAP3"
    },
    "8001": {
      "op": "POP"
    },
    "8002": {
      "op": "POP"
    },
    "8003": {
      "op": "POP"
    },
    "8004": {
      "jump": "o",
      "op": "JUMP"
    },
    "8005": {
      "op": "JUMPDEST"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8010": {
      "op": "DUP3"
    },
    "8011": {
      "op": "DUP5"
    },
    "8012": {
      "op": "SUB"
    },
    "8013": {
      "op": "SLT"
    },
    "8014": {
      "op": "ISZERO"
    },
    "8015": {
      "op": "PUSH2",
      "value": "0x1F57"
    },
    "8018": {
      "op": "JUMPI"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8021": {
      "op": "DUP1"
    },
    "8022": {
      "op": "REVERT"
    },
    "8023": {
      "op": "JUMPDEST"
    },
    "8024": {
      "op": "POP"
    },
    "8025": {
      "op": "MLOAD"
    },
    "8026": {
      "op": "SWAP2"
    },
    "8027": {
      "op": "SWAP1"
    },
    "8028": {
      "op": "POP"
    },
    "8029": {
      "jump": "o",
      "op": "JUMP"
    },
    "8030": {
      "op": "JUMPDEST"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8033": {
      "op": "DUP1"
    },
    "8034": {
      "op": "DUP3"
    },
    "8035": {
      "op": "MSTORE"
    },
    "8036": {
      "op": "DUP2"
    },
    "8037": {
      "op": "DUP2"
    },
    "8038": {
      "op": "ADD"
    },
    "8039": {
      "op": "MSTORE"
    },
    "8040": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8073": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8075": {
      "op": "DUP3"
    },
    "8076": {
      "op": "ADD"
    },
    "8077": {
      "op": "MSTORE"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8080": {
      "op": "ADD"
    },
    "8081": {
      "op": "SWAP1"
    },
    "8082": {
      "jump": "o",
      "op": "JUMP"
    },
    "8083": {
      "op": "JUMPDEST"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8088": {
      "op": "DUP3"
    },
    "8089": {
      "op": "DUP5"
    },
    "8090": {
      "op": "SUB"
    },
    "8091": {
      "op": "SLT"
    },
    "8092": {
      "op": "ISZERO"
    },
    "8093": {
      "op": "PUSH2",
      "value": "0x1FA5"
    },
    "8096": {
      "op": "JUMPI"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8099": {
      "op": "DUP1"
    },
    "8100": {
      "op": "REVERT"
    },
    "8101": {
      "op": "JUMPDEST"
    },
    "8102": {
      "op": "DUP2"
    },
    "8103": {
      "op": "MLOAD"
    },
    "8104": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "8107": {
      "op": "DUP2"
    },
    "8108": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "8111": {
      "jump": "i",
      "op": "JUMP"
    },
    "8112": {
      "op": "JUMPDEST"
    },
    "8113": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8120": {
      "op": "SHL"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8123": {
      "op": "MSTORE"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8128": {
      "op": "MSTORE"
    },
    "8129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8133": {
      "op": "REVERT"
    },
    "8134": {
      "op": "JUMPDEST"
    },
    "8135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8137": {
      "op": "DUP3"
    },
    "8138": {
      "op": "DUP3"
    },
    "8139": {
      "op": "LT"
    },
    "8140": {
      "op": "ISZERO"
    },
    "8141": {
      "op": "PUSH2",
      "value": "0x1FD8"
    },
    "8144": {
      "op": "JUMPI"
    },
    "8145": {
      "op": "PUSH2",
      "value": "0x1FD8"
    },
    "8148": {
      "op": "PUSH2",
      "value": "0x1FB0"
    },
    "8151": {
      "jump": "i",
      "op": "JUMP"
    },
    "8152": {
      "op": "JUMPDEST"
    },
    "8153": {
      "op": "POP"
    },
    "8154": {
      "op": "SUB"
    },
    "8155": {
      "op": "SWAP1"
    },
    "8156": {
      "jump": "o",
      "op": "JUMP"
    },
    "8157": {
      "op": "JUMPDEST"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8160": {
      "op": "DUP2"
    },
    "8161": {
      "op": "DUP2"
    },
    "8162": {
      "op": "JUMPDEST"
    },
    "8163": {
      "op": "DUP1"
    },
    "8164": {
      "op": "DUP6"
    },
    "8165": {
      "op": "GT"
    },
    "8166": {
      "op": "ISZERO"
    },
    "8167": {
      "op": "PUSH2",
      "value": "0x2018"
    },
    "8170": {
      "op": "JUMPI"
    },
    "8171": {
      "op": "DUP2"
    },
    "8172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8174": {
      "op": "NOT"
    },
    "8175": {
      "op": "DIV"
    },
    "8176": {
      "op": "DUP3"
    },
    "8177": {
      "op": "GT"
    },
    "8178": {
      "op": "ISZERO"
    },
    "8179": {
      "op": "PUSH2",
      "value": "0x1FFE"
    },
    "8182": {
      "op": "JUMPI"
    },
    "8183": {
      "op": "PUSH2",
      "value": "0x1FFE"
    },
    "8186": {
      "op": "PUSH2",
      "value": "0x1FB0"
    },
    "8189": {
      "jump": "i",
      "op": "JUMP"
    },
    "8190": {
      "op": "JUMPDEST"
    },
    "8191": {
      "op": "DUP1"
    },
    "8192": {
      "op": "DUP6"
    },
    "8193": {
      "op": "AND"
    },
    "8194": {
      "op": "ISZERO"
    },
    "8195": {
      "op": "PUSH2",
      "value": "0x200B"
    },
    "8198": {
      "op": "JUMPI"
    },
    "8199": {
      "op": "SWAP2"
    },
    "8200": {
      "op": "DUP2"
    },
    "8201": {
      "op": "MUL"
    },
    "8202": {
      "op": "SWAP2"
    },
    "8203": {
      "op": "JUMPDEST"
    },
    "8204": {
      "op": "SWAP4"
    },
    "8205": {
      "op": "DUP5"
    },
    "8206": {
      "op": "SHR"
    },
    "8207": {
      "op": "SWAP4"
    },
    "8208": {
      "op": "SWAP1"
    },
    "8209": {
      "op": "DUP1"
    },
    "8210": {
      "op": "MUL"
    },
    "8211": {
      "op": "SWAP1"
    },
    "8212": {
      "op": "PUSH2",
      "value": "0x1FE2"
    },
    "8215": {
      "op": "JUMP"
    },
    "8216": {
      "op": "JUMPDEST"
    },
    "8217": {
      "op": "POP"
    },
    "8218": {
      "op": "SWAP3"
    },
    "8219": {
      "op": "POP"
    },
    "8220": {
      "op": "SWAP3"
    },
    "8221": {
      "op": "SWAP1"
    },
    "8222": {
      "op": "POP"
    },
    "8223": {
      "jump": "o",
      "op": "JUMP"
    },
    "8224": {
      "op": "JUMPDEST"
    },
    "8225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8227": {
      "op": "DUP3"
    },
    "8228": {
      "op": "PUSH2",
      "value": "0x202F"
    },
    "8231": {
      "op": "JUMPI"
    },
    "8232": {
      "op": "POP"
    },
    "8233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8235": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "8238": {
      "op": "JUMP"
    },
    "8239": {
      "op": "JUMPDEST"
    },
    "8240": {
      "op": "DUP2"
    },
    "8241": {
      "op": "PUSH2",
      "value": "0x203C"
    },
    "8244": {
      "op": "JUMPI"
    },
    "8245": {
      "op": "POP"
    },
    "8246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8248": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "8251": {
      "op": "JUMP"
    },
    "8252": {
      "op": "JUMPDEST"
    },
    "8253": {
      "op": "DUP2"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8256": {
      "op": "DUP2"
    },
    "8257": {
      "op": "EQ"
    },
    "8258": {
      "op": "PUSH2",
      "value": "0x2052"
    },
    "8261": {
      "op": "JUMPI"
    },
    "8262": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8264": {
      "op": "DUP2"
    },
    "8265": {
      "op": "EQ"
    },
    "8266": {
      "op": "PUSH2",
      "value": "0x205C"
    },
    "8269": {
      "op": "JUMPI"
    },
    "8270": {
      "op": "PUSH2",
      "value": "0x2078"
    },
    "8273": {
      "op": "JUMP"
    },
    "8274": {
      "op": "JUMPDEST"
    },
    "8275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8277": {
      "op": "SWAP2"
    },
    "8278": {
      "op": "POP"
    },
    "8279": {
      "op": "POP"
    },
    "8280": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "8283": {
      "op": "JUMP"
    },
    "8284": {
      "op": "JUMPDEST"
    },
    "8285": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8287": {
      "op": "DUP5"
    },
    "8288": {
      "op": "GT"
    },
    "8289": {
      "op": "ISZERO"
    },
    "8290": {
      "op": "PUSH2",
      "value": "0x206D"
    },
    "8293": {
      "op": "JUMPI"
    },
    "8294": {
      "op": "PUSH2",
      "value": "0x206D"
    },
    "8297": {
      "op": "PUSH2",
      "value": "0x1FB0"
    },
    "8300": {
      "jump": "i",
      "op": "JUMP"
    },
    "8301": {
      "op": "JUMPDEST"
    },
    "8302": {
      "op": "POP"
    },
    "8303": {
      "op": "POP"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8306": {
      "op": "DUP3"
    },
    "8307": {
      "op": "SHL"
    },
    "8308": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "8311": {
      "op": "JUMP"
    },
    "8312": {
      "op": "JUMPDEST"
    },
    "8313": {
      "op": "POP"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8316": {
      "op": "DUP4"
    },
    "8317": {
      "op": "LT"
    },
    "8318": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "8321": {
      "op": "DUP4"
    },
    "8322": {
      "op": "LT"
    },
    "8323": {
      "op": "AND"
    },
    "8324": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "8326": {
      "op": "DUP5"
    },
    "8327": {
      "op": "LT"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "8330": {
      "op": "DUP5"
    },
    "8331": {
      "op": "LT"
    },
    "8332": {
      "op": "AND"
    },
    "8333": {
      "op": "OR"
    },
    "8334": {
      "op": "ISZERO"
    },
    "8335": {
      "op": "PUSH2",
      "value": "0x209B"
    },
    "8338": {
      "op": "JUMPI"
    },
    "8339": {
      "op": "POP"
    },
    "8340": {
      "op": "DUP2"
    },
    "8341": {
      "op": "DUP2"
    },
    "8342": {
      "op": "EXP"
    },
    "8343": {
      "op": "PUSH2",
      "value": "0x36A"
    },
    "8346": {
      "op": "JUMP"
    },
    "8347": {
      "op": "JUMPDEST"
    },
    "8348": {
      "op": "PUSH2",
      "value": "0x20A5"
    },
    "8351": {
      "op": "DUP4"
    },
    "8352": {
      "op": "DUP4"
    },
    "8353": {
      "op": "PUSH2",
      "value": "0x1FDD"
    },
    "8356": {
      "jump": "i",
      "op": "JUMP"
    },
    "8357": {
      "op": "JUMPDEST"
    },
    "8358": {
      "op": "DUP1"
    },
    "8359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8361": {
      "op": "NOT"
    },
    "8362": {
      "op": "DIV"
    },
    "8363": {
      "op": "DUP3"
    },
    "8364": {
      "op": "GT"
    },
    "8365": {
      "op": "ISZERO"
    },
    "8366": {
      "op": "PUSH2",
      "value": "0x20B9"
    },
    "8369": {
      "op": "JUMPI"
    },
    "8370": {
      "op": "PUSH2",
      "value": "0x20B9"
    },
    "8373": {
      "op": "PUSH2",
      "value": "0x1FB0"
    },
    "8376": {
      "jump": "i",
      "op": "JUMP"
    },
    "8377": {
      "op": "JUMPDEST"
    },
    "8378": {
      "op": "MUL"
    },
    "8379": {
      "op": "SWAP4"
    },
    "8380": {
      "op": "SWAP3"
    },
    "8381": {
      "op": "POP"
    },
    "8382": {
      "op": "POP"
    },
    "8383": {
      "op": "POP"
    },
    "8384": {
      "jump": "o",
      "op": "JUMP"
    },
    "8385": {
      "op": "JUMPDEST"
    },
    "8386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8388": {
      "op": "PUSH2",
      "value": "0x367"
    },
    "8391": {
      "op": "DUP4"
    },
    "8392": {
      "op": "DUP4"
    },
    "8393": {
      "op": "PUSH2",
      "value": "0x2020"
    },
    "8396": {
      "jump": "i",
      "op": "JUMP"
    },
    "8397": {
      "op": "JUMPDEST"
    },
    "8398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8400": {
      "op": "DUP2"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8403": {
      "op": "NOT"
    },
    "8404": {
      "op": "DIV"
    },
    "8405": {
      "op": "DUP4"
    },
    "8406": {
      "op": "GT"
    },
    "8407": {
      "op": "DUP3"
    },
    "8408": {
      "op": "ISZERO"
    },
    "8409": {
      "op": "ISZERO"
    },
    "8410": {
      "op": "AND"
    },
    "8411": {
      "op": "ISZERO"
    },
    "8412": {
      "op": "PUSH2",
      "value": "0x20E7"
    },
    "8415": {
      "op": "JUMPI"
    },
    "8416": {
      "op": "PUSH2",
      "value": "0x20E7"
    },
    "8419": {
      "op": "PUSH2",
      "value": "0x1FB0"
    },
    "8422": {
      "jump": "i",
      "op": "JUMP"
    },
    "8423": {
      "op": "JUMPDEST"
    },
    "8424": {
      "op": "POP"
    },
    "8425": {
      "op": "MUL"
    },
    "8426": {
      "op": "SWAP1"
    },
    "8427": {
      "jump": "o",
      "op": "JUMP"
    },
    "8428": {
      "op": "JUMPDEST"
    },
    "8429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8431": {
      "op": "DUP3"
    },
    "8432": {
      "op": "PUSH2",
      "value": "0x2109"
    },
    "8435": {
      "op": "JUMPI"
    },
    "8436": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8443": {
      "op": "SHL"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8446": {
      "op": "MSTORE"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8449": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8451": {
      "op": "MSTORE"
    },
    "8452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8456": {
      "op": "REVERT"
    },
    "8457": {
      "op": "JUMPDEST"
    },
    "8458": {
      "op": "POP"
    },
    "8459": {
      "op": "DIV"
    },
    "8460": {
      "op": "SWAP1"
    },
    "8461": {
      "jump": "o",
      "op": "JUMP"
    },
    "8462": {
      "op": "JUMPDEST"
    },
    "8463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8465": {
      "op": "DUP3"
    },
    "8466": {
      "op": "NOT"
    },
    "8467": {
      "op": "DUP3"
    },
    "8468": {
      "op": "GT"
    },
    "8469": {
      "op": "ISZERO"
    },
    "8470": {
      "op": "PUSH2",
      "value": "0x2121"
    },
    "8473": {
      "op": "JUMPI"
    },
    "8474": {
      "op": "PUSH2",
      "value": "0x2121"
    },
    "8477": {
      "op": "PUSH2",
      "value": "0x1FB0"
    },
    "8480": {
      "jump": "i",
      "op": "JUMP"
    },
    "8481": {
      "op": "JUMPDEST"
    },
    "8482": {
      "op": "POP"
    },
    "8483": {
      "op": "ADD"
    },
    "8484": {
      "op": "SWAP1"
    },
    "8485": {
      "jump": "o",
      "op": "JUMP"
    },
    "8486": {
      "op": "JUMPDEST"
    },
    "8487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8491": {
      "op": "NOT"
    },
    "8492": {
      "op": "DUP3"
    },
    "8493": {
      "op": "EQ"
    },
    "8494": {
      "op": "ISZERO"
    },
    "8495": {
      "op": "PUSH2",
      "value": "0x213A"
    },
    "8498": {
      "op": "JUMPI"
    },
    "8499": {
      "op": "PUSH2",
      "value": "0x213A"
    },
    "8502": {
      "op": "PUSH2",
      "value": "0x1FB0"
    },
    "8505": {
      "jump": "i",
      "op": "JUMP"
    },
    "8506": {
      "op": "JUMPDEST"
    },
    "8507": {
      "op": "POP"
    },
    "8508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8510": {
      "op": "ADD"
    },
    "8511": {
      "op": "SWAP1"
    },
    "8512": {
      "jump": "o",
      "op": "JUMP"
    },
    "8513": {
      "op": "JUMPDEST"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8518": {
      "op": "DUP3"
    },
    "8519": {
      "op": "DUP5"
    },
    "8520": {
      "op": "SUB"
    },
    "8521": {
      "op": "SLT"
    },
    "8522": {
      "op": "ISZERO"
    },
    "8523": {
      "op": "PUSH2",
      "value": "0x2153"
    },
    "8526": {
      "op": "JUMPI"
    },
    "8527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8529": {
      "op": "DUP1"
    },
    "8530": {
      "op": "REVERT"
    },
    "8531": {
      "op": "JUMPDEST"
    },
    "8532": {
      "op": "DUP2"
    },
    "8533": {
      "op": "MLOAD"
    },
    "8534": {
      "op": "DUP1"
    },
    "8535": {
      "op": "ISZERO"
    },
    "8536": {
      "op": "ISZERO"
    },
    "8537": {
      "op": "DUP2"
    },
    "8538": {
      "op": "EQ"
    },
    "8539": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "8542": {
      "op": "JUMPI"
    },
    "8543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8545": {
      "op": "DUP1"
    },
    "8546": {
      "op": "REVERT"
    },
    "8547": {
      "op": "JUMPDEST"
    },
    "8548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8550": {
      "op": "JUMPDEST"
    },
    "8551": {
      "op": "DUP4"
    },
    "8552": {
      "op": "DUP2"
    },
    "8553": {
      "op": "LT"
    },
    "8554": {
      "op": "ISZERO"
    },
    "8555": {
      "op": "PUSH2",
      "value": "0x217E"
    },
    "8558": {
      "op": "JUMPI"
    },
    "8559": {
      "op": "DUP2"
    },
    "8560": {
      "op": "DUP2"
    },
    "8561": {
      "op": "ADD"
    },
    "8562": {
      "op": "MLOAD"
    },
    "8563": {
      "op": "DUP4"
    },
    "8564": {
      "op": "DUP3"
    },
    "8565": {
      "op": "ADD"
    },
    "8566": {
      "op": "MSTORE"
    },
    "8567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8569": {
      "op": "ADD"
    },
    "8570": {
      "op": "PUSH2",
      "value": "0x2166"
    },
    "8573": {
      "op": "JUMP"
    },
    "8574": {
      "op": "JUMPDEST"
    },
    "8575": {
      "op": "DUP4"
    },
    "8576": {
      "op": "DUP2"
    },
    "8577": {
      "op": "GT"
    },
    "8578": {
      "op": "ISZERO"
    },
    "8579": {
      "op": "PUSH2",
      "value": "0x1B3D"
    },
    "8582": {
      "op": "JUMPI"
    },
    "8583": {
      "op": "POP"
    },
    "8584": {
      "op": "POP"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8587": {
      "op": "SWAP2"
    },
    "8588": {
      "op": "ADD"
    },
    "8589": {
      "op": "MSTORE"
    },
    "8590": {
      "jump": "o",
      "op": "JUMP"
    },
    "8591": {
      "op": "JUMPDEST"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8594": {
      "op": "DUP3"
    },
    "8595": {
      "op": "MLOAD"
    },
    "8596": {
      "op": "PUSH2",
      "value": "0x21A1"
    },
    "8599": {
      "op": "DUP2"
    },
    "8600": {
      "op": "DUP5"
    },
    "8601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8603": {
      "op": "DUP8"
    },
    "8604": {
      "op": "ADD"
    },
    "8605": {
      "op": "PUSH2",
      "value": "0x2163"
    },
    "8608": {
      "jump": "i",
      "op": "JUMP"
    },
    "8609": {
      "op": "JUMPDEST"
    },
    "8610": {
      "op": "SWAP2"
    },
    "8611": {
      "op": "SWAP1"
    },
    "8612": {
      "op": "SWAP2"
    },
    "8613": {
      "op": "ADD"
    },
    "8614": {
      "op": "SWAP3"
    },
    "8615": {
      "op": "SWAP2"
    },
    "8616": {
      "op": "POP"
    },
    "8617": {
      "op": "POP"
    },
    "8618": {
      "jump": "o",
      "op": "JUMP"
    },
    "8619": {
      "op": "JUMPDEST"
    },
    "8620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8622": {
      "op": "DUP2"
    },
    "8623": {
      "op": "MSTORE"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8626": {
      "op": "DUP3"
    },
    "8627": {
      "op": "MLOAD"
    },
    "8628": {
      "op": "DUP1"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8631": {
      "op": "DUP5"
    },
    "8632": {
      "op": "ADD"
    },
    "8633": {
      "op": "MSTORE"
    },
    "8634": {
      "op": "PUSH2",
      "value": "0x21CA"
    },
    "8637": {
      "op": "DUP2"
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8640": {
      "op": "DUP6"
    },
    "8641": {
      "op": "ADD"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8644": {
      "op": "DUP8"
    },
    "8645": {
      "op": "ADD"
    },
    "8646": {
      "op": "PUSH2",
      "value": "0x2163"
    },
    "8649": {
      "jump": "i",
      "op": "JUMP"
    },
    "8650": {
      "op": "JUMPDEST"
    },
    "8651": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8653": {
      "op": "ADD"
    },
    "8654": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8656": {
      "op": "NOT"
    },
    "8657": {
      "op": "AND"
    },
    "8658": {
      "op": "SWAP2"
    },
    "8659": {
      "op": "SWAP1"
    },
    "8660": {
      "op": "SWAP2"
    },
    "8661": {
      "op": "ADD"
    },
    "8662": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8664": {
      "op": "ADD"
    },
    "8665": {
      "op": "SWAP3"
    },
    "8666": {
      "op": "SWAP2"
    },
    "8667": {
      "op": "POP"
    },
    "8668": {
      "op": "POP"
    },
    "8669": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2a949a73d8f56a70821c9650cf7b24f7dea1bf48",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.10;\n\nimport {IERC20} from \"../openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"../openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {Math} from \"../openzeppelin-contracts/contracts/utils/math/Math.sol\";\nimport {Ownable} from \"../openzeppelin-contracts/contracts/access/Ownable.sol\";\n\nimport {RegistryAPI, VaultAPI} from \"../interfaces/YearnAPI.sol\";\n\n/**\n * Adapted from the Yearn BaseRouter for Shapeshift's use case of a router that forward native vault tokens\n * to the caller and does not hold any funds or assets (vault tokens or other ERC20 tokens)\n */\ncontract ShapeShiftDAORouter is Ownable {\n    RegistryAPI public registry;\n\n    // ERC20 Unlimited Approvals (short-circuits VaultAPI.transferFrom)\n    uint256 constant UNLIMITED_APPROVAL = type(uint256).max;\n\n    // Sentinel values used to save gas on deposit/withdraw/migrate\n    // NOTE: UNLIMITED_APPROVAL == DEPOSIT_EVERYTHING == WITHDRAW_EVERYTHING == MIGRATE_EVERYTHING = MAX_VAULT_ID\n    uint256 constant DEPOSIT_EVERYTHING = type(uint256).max;\n    uint256 constant WITHDRAW_EVERYTHING = type(uint256).max;\n    uint256 constant MIGRATE_EVERYTHING = type(uint256).max;\n    uint256 constant MAX_VAULT_ID = type(uint256).max;\n\n    constructor(address yearnRegistry) {\n        // Recommended to use `v2.registry.ychad.eth`\n        registry = RegistryAPI(yearnRegistry);\n    }\n\n    /**\n     * @notice Used to update the yearn registry. The choice of registry is SECURITY SENSITIVE, so only the\n     * owner can update it.\n     * @param yearnRegistry The new registry address.\n     */\n    function setRegistry(address yearnRegistry) external onlyOwner() {\n        address currentYearnGovernanceAddress = registry.governance();\n        // In case you want to override the registry instead of re-deploying\n        registry = RegistryAPI(yearnRegistry);\n        // Make sure there's no change in governance\n        // NOTE: Also avoid bricking the router from setting a bad registry\n        require(\n            currentYearnGovernanceAddress == registry.governance(),\n            \"invalid registry\"\n        );\n    }\n\n    function numVaults(address token) external view returns (uint256) {\n        return registry.numVaults(token);\n    }\n\n    function vaults(address token, uint256 deploymentId)\n        external\n        view\n        returns (VaultAPI)\n    {\n        return registry.vaults(token, deploymentId);\n    }\n\n    function latestVault(address token) external view returns (VaultAPI) {\n        return registry.latestVault(token);\n    }\n\n    /**\n     * @notice Gets the balance of an account across all the vaults for a token.\n     * @param token Which ERC20 token to pull vault balances for\n     * @param account The address of the account to pull the balances for\n     * @return The current value, in token base units, of the shares held by the specified\n       account across all the vaults for the specified token.\n     */\n    function totalVaultBalance(address token, address account)\n        external\n        view\n        returns (uint256)\n    {\n        return this.totalVaultBalance(token, account, 0, MAX_VAULT_ID);\n    }\n\n    /**\n     * @notice Gets the balance of an account across certain vaults for a token.\n     * @param token Which ERC20 token to pull vault balances for\n     * @param account The address of the account to pull the balances for\n     * @param firstVaultId First vault id to include; 0 to start at the beginning\n     * @param lastVaultId Last vault id to include; `MAX_VAULT_ID` to include all vaults\n     * @return balance The current value, in token base units, of the shares held by the specified\n       account across all the specified vaults for the specified token.\n     */\n    function totalVaultBalance(\n        address token,\n        address account,\n        uint256 firstVaultId,\n        uint256 lastVaultId\n    ) external view returns (uint256 balance) {\n        require(firstVaultId <= lastVaultId);\n\n        uint256 _lastVaultId = lastVaultId;\n        if (_lastVaultId == MAX_VAULT_ID)\n            _lastVaultId = registry.numVaults(address(token)) - 1;\n\n        for (uint256 i = firstVaultId; i <= _lastVaultId; i++) {\n            VaultAPI vault = registry.vaults(token, i);\n            uint256 vaultTokenBalance = (vault.balanceOf(account) *\n                vault.pricePerShare()) / 10**vault.decimals();\n            balance += vaultTokenBalance;\n        }\n    }\n\n    /**\n     * @notice Returns the combined TVL for all the vaults for a specified token.\n     * @return assets The sum of all the assets managed by the vaults for the specified token.\n     */\n    function totalAssets(address token) external view returns (uint256) {\n        return this.totalAssets(token, 0, MAX_VAULT_ID);\n    }\n\n    /**\n     * @notice Returns the combined TVL for all the specified vaults for a specified token.\n     * @param firstVaultId First vault id to include; 0 to start at the beginning\n     * @param lastVaultId Last vault id to include; `MAX_VAULT_ID` to include all vaults\n     * @return assets The sum of all the assets managed by the vaults for the specified token.\n     */\n    function totalAssets(\n        address token,\n        uint256 firstVaultId,\n        uint256 lastVaultId\n    ) external view returns (uint256 assets) {\n        require(firstVaultId <= lastVaultId);\n\n        uint256 _lastVaultId = lastVaultId;\n        if (_lastVaultId == MAX_VAULT_ID)\n            _lastVaultId = registry.numVaults(address(token)) - 1;\n\n        for (uint256 i = firstVaultId; i <= _lastVaultId; i++) {\n            VaultAPI vault = registry.vaults(token, i);\n            assets += vault.totalAssets();\n        }\n    }\n\n    /**\n     * @notice Called to deposit the caller's tokens into the most-current vault, crediting the minted shares to recipient.\n     * @dev The caller must approve this contract to utilize the specified ERC20 or this call will revert.\n     * @param token Address of the ERC20 token being deposited\n     * @param recipient Address to receive the issued vault tokens\n     * @param amount Amount of tokens to deposit; tokens that cannot be deposited will be refunded. If `DEPOSIT_EVERYTHING`, just deposit everything.\n     * @return Total vault shares received by recipient\n     */\n    function deposit(\n        address token,\n        address recipient,\n        uint256 amount\n    ) external returns (uint256) {\n        return\n            _deposit(\n                IERC20(token),\n                _msgSender(),\n                recipient,\n                amount,\n                MAX_VAULT_ID\n            );\n    }\n\n    /**\n     * @notice Called to deposit the caller's tokens into a specific vault, crediting the minted shares to recipient.\n     * @dev The caller must approve this contract to utilize the specified ERC20 or this call will revert.\n     * @param token Address of the ERC20 token being deposited\n     * @param recipient Address to receive the issued vault tokens\n     * @param amount Amount of tokens to deposit; tokens that cannot be deposited will be refunded. If `DEPOSIT_EVERYTHING`, just deposit everything.\n     * @param vaultId Vault id to deposit into; pass `MAX_VAULT_ID` to deposit into the latest vault\n     * @return Total vault shares received by recipient\n     */\n    function deposit(\n        address token,\n        address recipient,\n        uint256 amount,\n        uint256 vaultId\n    ) external returns (uint256) {\n        return\n            _deposit(IERC20(token), _msgSender(), recipient, amount, vaultId);\n    }\n\n    /**\n     * @notice Called to deposit depositor's tokens into a specific vault, crediting the minted shares to recipient.\n     * @dev Depositor must approve this contract to utilize the specified ERC20 or this call will revert.\n     * @param token Address of the ERC20 token being deposited\n     * @param depositor Address to pull deposited funds from. SECURITY SENSITIVE.\n     * @param recipient Address to receive the issued vault tokens\n     * @param amount Amount of tokens to deposit; tokens that cannot be deposited will be refunded. If `DEPOSIT_EVERYTHING`, just deposit everything.\n     * @param vaultId Vault id to deposit into; pass `MAX_VAULT_ID` to deposit into the latest vault\n     * @return shares Total vault shares received by recipient\n     */\n    function _deposit(\n        IERC20 token,\n        address depositor,\n        address recipient,\n        uint256 amount,\n        uint256 vaultId\n    ) internal returns (uint256 shares) {\n        bool pullFunds = depositor != address(this);\n\n        VaultAPI vault;\n        if (vaultId == MAX_VAULT_ID) {\n            vault = registry.latestVault(address(token));\n        } else {\n            vault = registry.vaults(address(token), vaultId);\n        }\n\n        if (token.allowance(address(this), address(vault)) < amount) {\n            SafeERC20.safeApprove(token, address(vault), 0); // Avoid issues with some tokens requiring 0\n            SafeERC20.safeApprove(token, address(vault), UNLIMITED_APPROVAL); // Vaults are trusted\n        }\n\n        if (amount == DEPOSIT_EVERYTHING) amount = token.balanceOf(depositor);\n\n        if (pullFunds) {\n            uint256 beforeBal = token.balanceOf(address(this));\n            SafeERC20.safeTransferFrom(token, depositor, address(this), amount);\n\n            shares = vault.deposit(amount, recipient);\n\n            uint256 afterWithdrawBal = token.balanceOf(address(this));\n            if (afterWithdrawBal > beforeBal)\n                SafeERC20.safeTransfer(\n                    token,\n                    depositor,\n                    afterWithdrawBal - beforeBal\n                );\n        } else {\n            shares = vault.deposit(amount, recipient);\n        }\n    }\n\n    /**\n     * @notice Called to redeem the all of the caller's shares from underlying vault(s), with the proceeds distributed to recipient.\n     * @dev The caller must approve this contract to use their vault shares or this call will revert.\n     * @param token Address of the ERC20 token to withdraw from vaults\n     * @param recipient Address to receive the withdrawn tokens\n     * @return The number of tokens received by recipient.\n     */\n    function withdraw(address token, address recipient)\n        external\n        returns (uint256)\n    {\n        return\n            _withdraw(\n                IERC20(token),\n                _msgSender(),\n                recipient,\n                WITHDRAW_EVERYTHING,\n                0,\n                MAX_VAULT_ID\n            );\n    }\n\n    /**\n     * @notice Called to redeem the caller's shares from underlying vault(s), with the proceeds distributed to recipient.\n     * @dev The caller must approve this contract to use their vault shares or this call will revert.\n     * @param token Address of the ERC20 token to withdraw from vaults\n     * @param recipient Address to receive the withdrawn tokens\n     * @param amount Maximum number of tokens to withdraw from all vaults; actual withdrawal may be less. If `WITHDRAW_EVERYTHING`, just withdraw everything.\n     * @return The number of tokens received by recipient.\n     */\n    function withdraw(\n        address token,\n        address recipient,\n        uint256 amount\n    ) external returns (uint256) {\n        return\n            _withdraw(\n                IERC20(token),\n                _msgSender(),\n                recipient,\n                amount,\n                0,\n                MAX_VAULT_ID\n            );\n    }\n\n    /**\n     * @notice Called to redeem the caller's shares from underlying vault(s), with the proceeds distributed to recipient.\n     * @dev The caller must approve this contract to use their vault shares or this call will revert.\n     * @param token Address of the ERC20 token to withdraw from vaults\n     * @param recipient Address to receive the withdrawn tokens\n     * @param amount Maximum number of tokens to withdraw from all vaults; actual withdrawal may be less. If `WITHDRAW_EVERYTHING`, just withdraw everything.\n     * @param firstVaultId First vault id to pull from; 0 to start at the the beginning\n     * @param lastVaultId Last vault id to pull from; `MAX_VAULT_ID` to withdraw from all vaults\n     * @return The number of tokens received by recipient.\n     */\n    function withdraw(\n        address token,\n        address recipient,\n        uint256 amount,\n        uint256 firstVaultId,\n        uint256 lastVaultId\n    ) external returns (uint256) {\n        return\n            _withdraw(\n                IERC20(token),\n                _msgSender(),\n                recipient,\n                amount,\n                firstVaultId,\n                lastVaultId\n            );\n    }\n\n    /**\n     * @notice Called to redeem withdrawer's shares from underlying vault(s), with the proceeds distributed to recipient.\n     * @dev Withdrawer must approve this contract to use their vault shares or this call will revert.\n     * @param token Address of the ERC20 token to withdraw from vaults\n     * @param withdrawer Address to pull the vault shares from. SECURITY SENSITIVE.\n     * @param recipient Address to receive the withdrawn tokens\n     * @param amount Maximum number of tokens to withdraw from all vaults; actual withdrawal may be less. If `WITHDRAW_EVERYTHING`, just withdraw everything.\n     * @param firstVaultId First vault id to pull from; 0 to start at the the beginning\n     * @param lastVaultId Last vault id to pull from; `MAX_VAULT_ID` to withdraw from all vaults\n     * @return withdrawn The number of tokens received by recipient.\n     */\n    function _withdraw(\n        IERC20 token,\n        address withdrawer,\n        address recipient,\n        uint256 amount,\n        uint256 firstVaultId,\n        uint256 lastVaultId\n    ) internal returns (uint256 withdrawn) {\n        require(firstVaultId <= lastVaultId);\n\n        uint256 _lastVaultId = lastVaultId;\n        if (_lastVaultId == MAX_VAULT_ID)\n            _lastVaultId = registry.numVaults(address(token)) - 1;\n\n        for (\n            uint256 i = firstVaultId;\n            withdrawn + 1 < amount && i <= _lastVaultId;\n            i++\n        ) {\n            VaultAPI vault = registry.vaults(address(token), i);\n\n            uint256 availableShares = Math.min(\n                vault.balanceOf(withdrawer),\n                vault.maxAvailableShares()\n            );\n            // Restrict by the allowance that `withdrawer` has given to this contract\n            availableShares = Math.min(\n                availableShares,\n                vault.allowance(withdrawer, address(this))\n            );\n            if (availableShares == 0) continue;\n\n            uint256 maxShares;\n            if (amount != WITHDRAW_EVERYTHING) {\n                // Compute amount to withdraw fully to satisfy the request\n                uint256 estimatedShares = ((amount - withdrawn) *\n                    10**vault.decimals()) / vault.pricePerShare();\n\n                // Limit amount to withdraw to the maximum made available to this contract\n                // NOTE: Avoid corner case where `estimatedShares` isn't precise enough\n                // NOTE: If `0 < estimatedShares < 1` but `availableShares > 1`, this will withdraw more than necessary\n                maxShares = Math.min(availableShares, estimatedShares);\n            } else {\n                maxShares = availableShares;\n            }\n\n            uint256 beforeBal = vault.balanceOf(address(this));\n\n            SafeERC20.safeTransferFrom(\n                vault,\n                withdrawer,\n                address(this),\n                maxShares\n            );\n\n            withdrawn += vault.withdraw(maxShares, recipient);\n\n            uint256 afterWithdrawBal = vault.balanceOf(address(this));\n            if (afterWithdrawBal > beforeBal) {\n                SafeERC20.safeTransfer(\n                    vault,\n                    withdrawer,\n                    afterWithdrawBal - beforeBal\n                );\n            }\n        }\n    }\n\n    /**\n     * @notice Called to migrate all of the caller's shares to the latest vault.\n     * @dev The caller must approve this contract to use their vault shares or this call will revert.\n     * @param token Address of the ERC20 token to migrate the vaults of\n     * @return The number of tokens migrated.\n     */\n    function migrate(address token) external returns (uint256) {\n        return\n            _migrate(\n                IERC20(token),\n                _msgSender(),\n                MIGRATE_EVERYTHING,\n                0,\n                MAX_VAULT_ID\n            );\n    }\n\n    /**\n     * @notice Called to migrate the caller's shares to the latest vault.\n     * @dev The caller must approve this contract to use their vault shares or this call will revert.\n     * @param token Address of the ERC20 token to migrate the vaults of\n     * @param amount Maximum number of tokens to migrate from all vaults; actual migration may be less. If `MIGRATE_EVERYTHING`, just migrate everything.\n     * @return The number of tokens migrated.\n     */\n    function migrate(address token, uint256 amount) external returns (uint256) {\n        return _migrate(IERC20(token), _msgSender(), amount, 0, MAX_VAULT_ID);\n    }\n\n    /**\n     * @notice Called to migrate the caller's shares to the latest vault.\n     * @dev The caller must approve this contract to use their vault shares or this call will revert.\n     * @param token Address of the ERC20 token to migrate the vaults of\n     * @param amount Maximum number of tokens to migrate from all vaults; actual migration may be less. If `MIGRATE_EVERYTHING`, just migrate everything.\n     * @param firstVaultId First vault id to migrate from; 0 to start at the the beginning\n     * @param lastVaultId Last vault id to migrate from; `MAX_VAULT_ID` to migrate from all vaults\n     * @return The number of tokens migrated.\n     */\n    function migrate(\n        address token,\n        uint256 amount,\n        uint256 firstVaultId,\n        uint256 lastVaultId\n    ) external returns (uint256) {\n        return\n            _migrate(\n                IERC20(token),\n                _msgSender(),\n                amount,\n                firstVaultId,\n                lastVaultId\n            );\n    }\n\n    /**\n     * @notice Called to migrate migrator's shares to the latest vault.\n     * @dev Migrator must approve this contract to use their vault shares or this call will revert.\n     * @param token Address of the ERC20 token to migrate the vaults of\n     * @param migrator Address to migrate the shares of. SECURITY SENSITIVE.\n     * @param amount Maximum number of tokens to migrate from all vaults; actual migration may be less. If `MIGRATE_EVERYTHING`, just migrate everything.\n     * @param firstVaultId First vault id to migrate from; 0 to start at the the beginning\n     * @param lastVaultId Last vault id to migrate from; `MAX_VAULT_ID` to migrate from all vaults\n     * @return migrated The number of tokens migrated.\n     */\n    function _migrate(\n        IERC20 token,\n        address migrator,\n        uint256 amount,\n        uint256 firstVaultId,\n        uint256 lastVaultId\n    ) internal returns (uint256 migrated) {\n        uint256 latestVaultId = registry.numVaults(address(token)) - 1;\n        if (amount == 0 || latestVaultId == 0) return 0; // Nothing to migrate, or nowhere to go (not a failure)\n\n        VaultAPI _latestVault = registry.vaults(address(token), latestVaultId);\n        uint256 _amount = Math.min(\n            amount,\n            _latestVault.depositLimit() - _latestVault.totalAssets()\n        );\n\n        uint256 beforeWithdrawBal = token.balanceOf(address(this));\n        _withdraw(\n            token,\n            migrator,\n            address(this),\n            _amount,\n            firstVaultId,\n            Math.min(lastVaultId, latestVaultId - 1)\n        );\n        uint256 afterWithdrawBal = token.balanceOf(address(this));\n        require(afterWithdrawBal > beforeWithdrawBal, \"withdraw failed\");\n\n        _deposit(\n            token,\n            address(this),\n            migrator,\n            afterWithdrawBal - beforeWithdrawBal,\n            latestVaultId\n        );\n        uint256 afterDepositBal = token.balanceOf(address(this));\n        require(afterWithdrawBal > afterDepositBal, \"deposit failed\");\n        migrated = afterWithdrawBal - afterDepositBal;\n\n        if (afterWithdrawBal - beforeWithdrawBal > migrated) {\n            SafeERC20.safeTransfer(\n                token,\n                migrator,\n                afterDepositBal - beforeWithdrawBal\n            );\n        }\n    }\n}\n",
  "sourceMap": "673:19873:0:-:0;;;1309:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:2;719:10:6;921:18:2;:32::i;:::-;1408:8:0;:37;;-1:-1:-1;;;;;;1408:37:0;-1:-1:-1;;;;;1408:37:0;;;;;;;;;;673:19873;;2270:187:2;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:2;;;-1:-1:-1;;;;;;2378:17:2;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:8;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:8:o;:::-;673:19873:0;;;;;;",
  "sourcePath": "contracts/ShapeShiftDAORouter.sol",
  "type": "contract"
}
